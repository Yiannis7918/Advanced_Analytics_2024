{"aid": "39960101", "title": "Git data visualisation and funny achivments", "url": "https://github.com/bakhirev/assayo", "domain": "github.com/bakhirev", "votes": 1, "user": "the_usual_door", "posted_at": "2024-04-07 11:38:04", "comments": 0, "source_title": "GitHub - bakhirev/assayo: \ud83d\udcc8 Visualization and analysis of your git repository data.", "source_text": "GitHub - bakhirev/assayo: \ud83d\udcc8 Visualization and analysis of your git repository\ndata.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nbakhirev / assayo Public\n\n  * Notifications\n  * Fork 9\n  * Star 74\n\n\ud83d\udcc8 Visualization and analysis of your git repository data.\n\nassayo.online/\n\n74 stars 9 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# bakhirev/assayo\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\n\u0411\u0430\u0445\u0438\u0440\u0435\u0432and\u0411\u0430\u0445\u0438\u0440\u0435\u0432updateb3bd463 \u00b7\n\n## History\n\n62 Commits  \n  \n### build\n\n|\n\n### build\n\n| update  \n  \n### documents\n\n|\n\n### documents\n\n| update  \n  \n### public\n\n|\n\n### public\n\n| update  \n  \n### src\n\n|\n\n### src\n\n| update  \n  \n### .eslintrc\n\n|\n\n### .eslintrc\n\n| JIRA-1234 feat(lang): test test test  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| JIRA-1234 feat(lang): test test test  \n  \n### .stylelintrc.json\n\n|\n\n### .stylelintrc.json\n\n| JIRA-1234 feat(lang): test test test  \n  \n### Dockerfile\n\n|\n\n### Dockerfile\n\n| JIRA-1111 feat(ci-cd): some text  \n  \n### README.md\n\n|\n\n### README.md\n\n| update  \n  \n### config-overrides.js\n\n|\n\n### config-overrides.js\n\n| JIRA-1234 fix(doc): some some  \n  \n### declaration.d.ts\n\n|\n\n### declaration.d.ts\n\n| GIT-0000 feat: add first version  \n  \n### package-lock.json\n\n|\n\n### package-lock.json\n\n| update  \n  \n### package.json\n\n|\n\n### package.json\n\n| update  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| GIT-0000 feat: add first version  \n  \n## Repository files navigation\n\n> The main documentation is in russian. This is a translation. It may contain\n> errors. If you a native speaker, you can help improve this translation.\n> Thanks!\n\n>   * English\n>   * \u4e2d\u6587\n>   * Espa\u00f1ol\n>   * Fran\u00e7ais\n>   * Portugu\u00eas\n>   * Deutsch\n>   * \u65e5\u672c\u8a9e\n>   * \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n>\n\n# Assayo\n\nVisualization and analysis of your git repository data (demo).\n\n##### Employee can evaluate new workplace\n\n  * work speed;\n  * number of extra hours worked;\n  * areas of competence;\n  * volume of features and bugs;\n  * working style of colleagues;\n\n##### Teamlead can evaluate employees\n\n  * identify slackers;\n  * estimate the amount of code;\n  * learn the work speed;\n  * notice behavioral anomalies;\n  * see the dynamics of work by week;\n\n##### Founder can evaluate product\n\n  * product cost;\n  * cost of features;\n  * development time;\n  * forecast of rework time;\n  * forecast cost;\n\n### Table of contents\n\n  * How to quickly view the number of commits?\n  * How to concat authors?\n  * How to export data from git?\n\n    * For online viewing\n    * For offline viewing\n  * How to view the report?\n\n    * Online\n    * Offline\n  * How to rebuild the report build?\n  * How to view a report on a group of microservices?\n  * How to brand the interface?\n  * How to sign commits?\n  * How to add checking for commit message?\n\n    * Use file commit-msg\n    * Use package pre-commit\n  * How to automate data collection?\n\n    * With backend\n    * Without backend\n  * DevOps (CI/CD)\n\n    * Public server\n    * Private server\n    * How to update the Docker image?\n  * How to add or edit a translation?\n  * RoadMap\n  * Contacts\n\n### How to quickly view the number of commits?\n\nIn the root directory of your project, run:\n\n    \n    \n    git shortlog -s -n -e\n\n### How to concat authors?\n\nIn the root directory of your project, you need to create a .mailmap file.\nExample of the contents of the file:\n\n    \n    \n    Alex B <alex@mail.uk> Alex B <alex@mail.uk> <alex@gov.tk> Alex B <alex@mail.uk> <bakhirev@ya.kz> Alex B <alex@mail.uk> <man64@yahoo.com>\n\nRead more about the format of this file you can here.\n\n### How to export data from git?\n\n#### For online viewing\n\nIn the root directory of your project run:\n\n    \n    \n    git --no-pager log --numstat --oneline --all --reverse --date=iso-strict --pretty=format:\"%ad>%cN>%cE>%s\" > log.txt\n\n#### For offline viewing\n\n    \n    \n    git --no-pager log --numstat --oneline --all --reverse --date=iso-strict --pretty=format:\"%ad>%cN>%cE>%s\" | sed -e 's/\\\\/\\\\\\\\/g' | sed -e 's/`/\"/g' | sed -e 's/^/report.push(\\`/g' | sed 's/$/\\`\\);/g' | sed 's/\\$/_/g' > log.txt\n\nGit will create a file log.txt. This file contains data for show a report. The\ndifference between the online and offline format is the presence of a wrapper\nfor strings. The offline format will be pulled up like a js file if you just\nopened /build/index.html\n\n### How to view the report?\n\n#### Online\n\n  * go to the website;\n  * click the \u201cDemo\u201d button;\n  * drag the log.txt file into the browser window;\n\n#### Offline\n\n  * download this repository;\n  * drag the log.txt file to the /build folder;\n  * run /build/index.html;\n  * or drag the /build folder to your repository (where the log.txt is located). You can change the name. For example, from /build to /report. In this case, it is important that the log.txt file is generated by the command for offline viewing.\n\n### How to rebuild the report build?\n\n  * download this repository\n  * run npm install\n  * run npm run build\n  * the new build will be in the /build folder\n\n### How to view a report on a group of microservices?\n\n  * generate for each microservice file log.txt (log-1.txt, log-2.txt, log-3.txt and etc.)\n  * see \u201cHow to view an online report?\u201d. At the last step, drag all the files at once into the browser window.\n  * see \u201cHow to see a report offline?\u201d. At the second step, drag all microservice files (log-1.txt, log-2.txt, log-3.txt and etc.) to the report folder (/build).\n\n### How to brand the interface?\n\nYou can create your own interface theme. Options:\n\n  * Title. You can set default document title in the URL parameter title. Example: ?title=You Company\n  * Visual theme. To do this, you need to prepare a CSS file with new styles and specify its URL in the theme parameter. Example: ?theme=//company.com/some.css. You can use class names as selectors. Most of them do not change in new versions.\n  * Language. You can set language in the URL parameter lang. Example: ?lang=es\n\n### How to sign commits?\n\nFollow the Conventional Commits 1.0.0. Example:\n\n    \n    \n    JIRA-1234 feat(profile): Added avatar for user\n\n  * task number in the task tracker (JIRA-1234)\n  * type of work (feat, fix, style, refactor, test, doc \u0438 \u0442.\u0434.)\n  * feature (profile - new page on site or new function, use one (two) short wordor an abbreviation)\n  * what problem were solved (Added avatar for user)\n\n### How to add checking for commit message?\n\n#### Use file commit-msg\n\n  1. Create file commit-msg in folder .git/hooks/\n  2. Add this text in file:\n\n    \n    \n    #!/usr/bin/env bash if ! grep -iqE \"(JIRA-[0-9]{1,5})(\\s)(feat|fix|docs|style|refactor|test|chore)((\\([a-z0-9_-]{1,}\\)){0,})(:\\s)([a-z]{1,})\" \"$1\"; then echo \"Need commit message like: JIRA-12 fix(profile): some text. Read Semantic Commit Messages\" >&2 exit 1 fi\n\n#### Use package pre-commit\n\n  1. Add in file package.json property commit-msg:\n\n    \n    \n    ... \"commit-msg\": { \"regex\": \"(JIRA-[0-9]{1,5})(\\\\s)(feat|fix|docs|style|refactor|test|chore)((\\\\([a-z0-9_-]{1,}\\\\)){0,})(:\\\\s)([a-z]{1,})\", \"error-message\": \"Need commit message like: JIRA-12 fix(profile): some text Read Semantic Commit Messages\" }, ...\n\n  2. Run command npm install pre-commit\n\n### How to automate data collection?\n\n#### With backend\n\n  * use module Assayo Crawler;\n\n#### Without backend\n\n  * create a clone of the repository you need;\n  * copy the build folder to the root;\n  * open build/index.html in the browser and add it to bookmarks;\n  * add a shortcut to build/assets/ci-cd.sh to the startup folder (Windows); Every time you restart the computer, the script will update statistics on all the data that automatically merged into the main branch.\n\n### DevOps (CI/CD)\n\n#### Public server\n\nYou can upload the data file for report construction to a public URL. And use\nthe website\u2019s assayo to visualize it.\n\n    \n    \n    https://assayo.online/demo/?dump=//you_site.com/some/log.txt\n\n#### Private server\n\n  * download the docker image;\n  * run it on your local network;\n  * use the web interface to view the reports, set the URL of the data in the URL parameter dump:\n\n    \n    \n    http://assayo_url/?dump=//you_url/some/log.txt assayo_url - URL of the assayo container, it listens on port 80; you_url - URL of your container with git logs;\n\nBy default, the image will run at http://127.0.0.1:80/. If it doesn't work,\ncheck if port 80 is free.\n\n#### How to update the Docker image?\n\n  * remove metrics, alerts, old builds;\n  * run npm run build\n  * run docker build -t assayo .\n  * visually check the image docker run --name assayo -p 80:80 -d assayo;\n  * add tag docker tag IMAGE_ID bakhirev/assayo:latest;\n  * push image to Docker Hub;\n\n### Releases are planned approximately once every six months. What\u2019s next:\n\n  * more recommendations and achievements;\n  * annual/monthly summaries, report printing;\n  * localization and internationalization;\n  * file analysis;\n  * different roles for statistics (hiding finances);\n  * development of the backend, integration with other systems;\n\n### How to add or edit a translation?\n\nYou can add a new translation or correct an existing one in the\nts/translations/ folder. Instruction\n\n### Feedback, suggestions, comments\n\n  * telegramm @bakhirev (priority method of communication)\n  * alexey-bakhirev@yandex.ru\n  * website https://assayo.online/\n\n## About\n\n\ud83d\udcc8 Visualization and analysis of your git repository data.\n\nassayo.online/\n\n### Topics\n\ngit statistics audit data-visualization report commit\n\n### Resources\n\nReadme\n\nActivity\n\n### Stars\n\n74 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n9 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * bakhirev\n  * NTDV Danila Valkovets\n\n## Languages\n\n  * TypeScript 90.4%\n  * SCSS 8.5%\n  * HTML 0.8%\n  * Shell 0.1%\n  * JavaScript 0.1%\n  * CSS 0.1%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
