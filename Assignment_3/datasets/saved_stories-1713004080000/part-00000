{"aid": "40020485", "title": "Open Source, Supply Chains, and Bears", "url": "https://scottarc.blog/2024/04/04/open-source-supply-chains-and-bears-oh-my/", "domain": "scottarc.blog", "votes": 3, "user": "CiPHPerCoder", "posted_at": "2024-04-13 04:25:19", "comments": 0, "source_title": "Open Source, Supply Chains, and Bears (oh my!)", "source_text": "Open Source, Supply Chains, and Bears (oh my!) \u2013 Semantically Secure\n\nSkip to content\n\n# Semantically Secure\n\n# Open Source, Supply Chains, and Bears (oh my!)\n\nApril 4th, 2024\n\nI didn\u2019t want to add my voice to the cacophony of hot takes about the xz\nbackdoor incident because I\u2019m sure many people are already sick of hearing\nabout it.\n\nHowever, there is something related to it that I\u2019ve been noodling over for a\nwhile. As a compromise, I won\u2019t summarize or rehash the xz incident to spare\nanyone from having to read that for the thousandth time.\n\nMost of the postmortem conversation I\u2019ve witnessed has centered around the\nburnout of open source developers, corporations\u2019 reliance and profiteering\nfrom volunteer labor, and how these factors can create a perfect storm for any\nnation state or sophisticated cyber-crime group that wants to backdoor\ninfrastructure for their own gain.\n\n## Why Should We Care About Your Opinion?\n\nIf you were asking yourself that question: You shouldn\u2019t. I\u2019m just some guy.\n\nBut if you\u2019re instead curious, I\u2019ve been developing open source software for\nover a decade. A significant percentage of websites on the Internet uses open\nsource software I wrote.\n\nAdditionally, years ago, I spearheaded an effort to add code-signing and\ntransparency to the PHP ecosystem\u2019s package manager, Composer. Though\nunsuccessful, it provided a lot of insight into the challenges faced by the\nopen source community. This will tie into a later point, but it\u2019s not super\nimportant.\n\n## What Other People Are Saying\n\nTim Bray wrote about government-funded institutes to improve the quality of\nopen source. Dan Lorenc tweeted about his experience trying to pay open source\nsoftware developers.\n\n> I spent a few years at Google and the OSSF literally trying to give money to\n> OSS maintainers, and I can confidently say funding won't fix these problems.\n>\n> We had more money than we could possibly give away. This is not a funding\n> problem, sorry. These takes are wrong and...\n>\n> \u2014 Dan Lorenc (@lorenc_dan) April 2, 2024\n\n> We paid someone to focus on adding Rust support to the Linux kernel for\n> several years, and it worked. That's why Rust is now in the kernel.\n>\n> The node.js team was struggling with their vulnerability backlog, so we got\n> them full-time consultants to focus on security while they...\n>\n> \u2014 Dan Lorenc (@lorenc_dan) April 3, 2024\n\n> This exists, you can just send in an application to Google or the OSSF for\n> anything vaguely related to improving security of OSS at any scale and\n> people will review it. They give out millions of dollars every year. They\n> never run out of budget but have pretty reasonable standards...\n>\n> \u2014 Dan Lorenc (@lorenc_dan) April 4, 2024\n\nSome full-time, unpaid open source developers are excited to hear about how\nthey\u2019re going to finally get paid for their work in the wake of this incident.\n\nA lot of Twitter\u2019s discourse is decidedly not as helpful:\n\n> fun fact! open source maintainers don't decide who does or doesn't use the\n> products of their hobby. that's on the people using it.\n>\n> hope this helps, \"VP Security @Google\" in bio https://t.co/ScOpNsxplx\n>\n> \u2014 alice (@alicelovescode) April 2, 2024\n\n## The Missed Point\n\nThere should be, by default, a clear separation between \u201copen source software\ndeveloper\u201d, which can be a hobby rather than a profession, and \u201csoftware\nlibrary package provider for corporations\u201d which is a paid service that some\nopen source developers may choose to partake in.\n\nTrying to get open source developers to do anything is worse than herding\ncats. You may be able to entice some with a treat, but the rest are going to\ndo their own thing and there\u2019s fuck all you can do about it.\n\nIf their software is the best available tool to solve the job, and they don\u2019t\nwant to deal with paperwork or legal crap to get paid for it, nobody can or\nshould try to force them.\n\nIf they don\u2019t want to bother with code signing or reproducible builds, don\u2019t\nmake it their problem. (Trust me, I tried to make it happen to PHP.)\n\nSoftware packaging should be a separate vocation; another hat that some devs\nmay choose to wear sometimes if it suits them.\n\nProviding tarballs and binaries for an open source library is valuable labor.\nYour value proposition can simply be, \u201cPatches for $library for $platforms;\nwill upstream fixes at the original developer\u2019s own pace,\u201d predicated on the\ntrust you\u2019ve earned to your community. The rest of us can choose which package\nprovider we wish to trust.\n\nIn addition to separating the responsibility into distinct roles (development,\nrelease management), it also adds a built-in layer of veracity that increases\nthe probability of malicious updates being detected before they\u2019re installed\nanywhere. This isn\u2019t at all a guarantee, but it could help.\n\nOpen source developers that want to maintain control over how their code is\nused can simply wear both hats. Those that don\u2019t want this responsibility can\njust focus on the part they enjoy and let packaging and distribution become\nsomeone else\u2019s problem. Security vendors can hang out their shingle on, \u201cTrust\nus to provide this library.\u201d End users can decide whether or not they actually\ntrust those vendors.\n\nTo me, this seems like a fairer way to ease some of the pressure off open\nsource software developers whose pain points aren\u2019t corporate funding. But for\npeople who need money, I have another suggestion that\u2019s unrelated (but\ncompatible) with this one.\n\n## Funding the Developers That Want Money\n\nThere have been three genres of \u201chow we\u2019ll fund open source development\u201d\nfloating around since I entered the scene.\n\n  1. Community-driven donations. Patreon, Ko-Fi, OpenCollective, TideLift, etc. Individuals funnel money to projects they consider valuable, developers for said projects continue to work on them. Since most of us have very little disposable income, this tends to be like $5 per month of support.\n  2. Corporate sponsorships. Sounds good on paper, but runs into a lot of challenges. Some OSS developers have existing employment agreements and aren\u2019t interested in being a Business Insider hit piece on \u201coveremployment\u201d. Others live in another country, which sometimes makes paperwork challenging.\n  3. Government programs. This is what Tim Bray argued for in his blog post (which I linked above and is worth a read). This puts programs at the mercy of the government (which, at least in America, is locked in a decades-long tug of war between one party that loves social programs that help people and another that loves tax cuts for the ultra-wealthy at the expense of the rest of us\u2013in between the looming threat of government shutdown if their spending bills aren\u2019t authorized by Congress).\n\nEach of these three ideas faces tremendous challenge. I\u2019d like to suggest a\nfourth idea, which can be supplemental to existing efforts, but is at least\nnovel from what I\u2019ve seen.\n\nLet\u2019s create a new type of Cyber Insurance.\n\nWait wait wait, put away your pitchforks for a moment. I promise it will make\nsense.\n\nIn theory, insurance companies are supposed to work like this:\n\n  1. Collect a small, recurring payment from individuals or companies over time.\n  2. If an incident occurs, cover the cost of the incident.\n\nIn practice, many of us know that insurance companies do everything they can\nto avoid paying out (step 2), and the recurring payment costs (step 1) almost\nalways increase. Ask anyone in the USA that\u2019s been to a hospital for any\nreason in the past few years and you\u2019ll hear all about it. The system is\ncorrupt at every level. You\u2019ll need to provide strong regulations on the new\ntype of Cyber Insurance to prevent that. What this sort of regulation would\nlook like exactly is an exercise for legal and policy experts to figure out; I\ndo not pretend to be one.\n\nThat said, insurance companies that want to turn a profit can do so by hedging\nagainst risk. In the case of this hypothetical insurance, they could offset\ntheir risk by:\n\n  1. Funding open source development, since so much of the Internet is powered by open source software.\n  2. Funding open source packaging and distribution (previous section).\n  3. Paying security experts to review open source software.\n  4. Paying for security audits and penetration tests of proprietary systems for large companies that want lower coverage premiums.\n\nThis would provide another funding stream that is resistant to government\nshutdowns or budget cuts, and isn\u2019t entirely tethered to a specific tech\ncompany\u2019s self-interest.\n\nAdditionally, it will provide incentives that address one of the more annoying\naspects of information security work:\n\nIf you hire security experts to review your systems, and they find an issue,\nyou can just accept the risk and not fix it. You\u2019re the client. You usually\nown the work they produce, and can choose to do nothing with it!\n\nIn this model, the insurance company is the client. If you want to reduce your\nspend on insurance, you\u2019ll adhere to their recommendations, or face a steeper\npremium.\n\n## In Short\n\nSeparating the joy of developing OSS from the demands of mega corps, and using\nthe insurance business model to fund developers who want to get paid for their\nwork, is an additional idea to address open source supply chain risks.\n\nAlso: This blog post only represents my thoughts on the subject, and does not\nreflect the opinion of any employer (past, present, or future).\n\n### Share this:\n\n  * Twitter\n  * Facebook\n\nLike Loading...\n\nApril 4, 2024\n\nScott Arciszewski\n\nOpen Source\n\nbusiness, CVE-2024-3094, funding, insurance, open source funding, open source\nsoftware, security industry, technology, xz\n\n### Leave a comment Cancel reply\n\nCopyright \u00a9 2022 Scott Arciszewski.\n\n  * Comment\n  * Reblog\n  * Subscribe Subscribed\n\n    * Semantically Secure\n    * Already have a WordPress.com account? Log in now.\n\n  * Privacy\n  *     * Semantically Secure\n    * Edit Site\n    * Subscribe Subscribed\n    * Sign up\n    * Log in\n    * Copy shortlink\n    * Report this content\n    * View post in Reader\n    * Manage subscriptions\n    * Collapse this bar\n\n%d\n\n", "frontpage": true}
