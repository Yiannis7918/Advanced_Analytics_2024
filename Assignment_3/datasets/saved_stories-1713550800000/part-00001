{"aid": "40085852", "title": "Rook's Law: There's Always a Limit", "url": "https://nigeltao.github.io/blog/2024/rooks-law.html", "domain": "nigeltao.github.io", "votes": 1, "user": "todsacerdoti", "posted_at": "2024-04-19 12:18:48", "comments": 0, "source_title": "Rook\u2019s Law - There\u2019s Always a Limit", "source_text": "Rook\u2019s Law - There\u2019s Always a Limit | Nigel Tao\n\n# Nigel Tao\n\n# Rook\u2019s Law - There\u2019s Always a Limit\n\nHere\u2019s some software engineering wisdom from my colleague Nate Rook.\n\n> Always set a limit to the size of the entities your product consumes.\n>\n> If you define a limit, and a user hits it, they are still in a reasonable\n> spot. They will receive an error message clearly stating what has gone\n> wrong. Maybe they can quickly iterate and fix the problem, but even if they\n> can\u2019t, they can at least beg you to raise the limit; you can temporarily let\n> them exceed it, or permanently raise the limit if you decide that\u2019s a better\n> idea.\n>\n> But if you don\u2019t define a limit, there\u2019s still going to be one. There\u2019s\n> always a limit. And the emergent limit is likely to be a lot less nice than\n> a user-defined one. It will return confusing error messages, or no error at\n> all; it may vary over time depending on ambient conditions; and it certainly\n> can\u2019t be raised on short notice.\n\nPublished: 2024-04-10\n\n", "frontpage": false}
