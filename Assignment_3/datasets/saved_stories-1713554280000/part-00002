{"aid": "40086456", "title": "The origins of Objective-C at PPI/Stepstone and its evolution at NeXT", "url": "https://dl.acm.org/doi/10.1145/3386332", "domain": "acm.org", "votes": 1, "user": "keepamovin", "posted_at": "2024-04-19 13:17:34", "comments": 0, "source_title": "The origins of Objective-C at PPI/Stepstone and its evolution at NeXT | Proceedings of the ACM on Programming Languages", "source_text": "The origins of Objective-C at PPI/Stepstone and its evolution at NeXT | Proceedings of the ACM on Programming Languages\n\n## This website uses cookies\n\nWe occasionally run membership recruitment campaigns on social media channels\nand use cookies to track post-clicks. We also share information about your use\nof our site with our social media, advertising and analytics partners who may\ncombine it with other information that you\u2019ve provided to them or that they\u2019ve\ncollected from your use of their services. Use the check boxes below to choose\nthe types of cookies you consent to have stored on your device.\n\nUse necessary cookies only Allow all cookies Show details\n\nOK\n\nUse necessary cookies only Allow selected cookies Allow all cookies\n\nShow details\n\nCookie declaration [#IABV2SETTINGS#] About\n\nNecessary (7) Preferences (5) Statistics (16) Marketing (24) Unclassified (0)\n\nNecessary cookies help make a website usable by enabling basic functions like\npage navigation and access to secure areas of the website. The website cannot\nfunction properly without these cookies. These cookies do not gather\ninformation about you that could be used for marketing purposes and do not\nremember where you have been on the internet.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \n__jid| c.disquscdn.com| Used to add comments to the website and remember the\nuser's Disqus login credentials across websites that use said service.|\nSession| HTTP  \ndisqusauth| c.disquscdn.com| Registers whether the user is logged in. This\nallows the website owner to make parts of the website inaccessible, based on\nthe user's log-in status.| Session| HTTP  \n__cf_bm| ACM| This cookie is used to distinguish between humans and bots. This\nis beneficial for the website, in order to make valid reports on the use of\ntheir website.| 1 day| HTTP  \n_cfuvid| ACM| This cookie is a part of the services provided by Cloudflare -\nIncluding load-balancing, deliverance of website content and serving DNS\nconnection for website operators.| Session| HTTP  \nCookieConsent| Cookiebot| Stores the user's cookie consent state for the\ncurrent domain| 1 year| HTTP  \n1.gif| Cookiebot| Used to count the number of sessions to the website,\nnecessary for optimizing CMP product delivery.| Session| Pixel  \nVISITOR_PRIVACY_METADATA| YouTube| Stores the user's cookie consent state for\nthe current domain| 180 days| HTTP  \n  \nPreference cookies enable a website to remember information that changes the\nway the website behaves or looks, like your preferred language or the region\nthat you are in.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \naet-dismiss| c.disquscdn.com| Necessary for the functionality of the website's\ncomment-system.| Persistent| HTML  \ndrafts.queue| c.disquscdn.com| Necessary for the functionality of the\nwebsite's comment-system.| Persistent| HTML  \nsubmitted_posts_cache| c.disquscdn.com| Necessary for the functionality of the\nwebsite's comment-system.| Persistent| HTML  \nmopDeploy| Mopinion| Pending| Session| HTML  \nMACHINE_LAST_SEEN| ACM| Pending| 300 days| HTTP  \n  \nStatistic cookies help website owners understand how visitors interact with\nwebsites by collecting and reporting information anonymously.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \n_ga| Google| Registers a unique ID that is used to generate statistical data\non how the visitor uses the website.| 2 years| HTTP  \n_ga_#| Google| Used by Google Analytics to collect data on the number of times\na user has visited the website as well as dates for the first and most recent\nvisit.| 2 years| HTTP  \n_gat| Google| Used by Google Analytics to throttle request rate| 1 day| HTTP  \n_gid| Google| Registers a unique ID that is used to generate statistical data\non how the visitor uses the website.| 1 day| HTTP  \n_hjSession_#| Hotjar| Collects statistics on the visitor's visits to the\nwebsite, such as the number of visits, average time spent on the website and\nwhat pages have been read.| 1 day| HTTP  \n_hjSessionUser_#| Hotjar| Collects statistics on the visitor's visits to the\nwebsite, such as the number of visits, average time spent on the website and\nwhat pages have been read.| 1 year| HTTP  \n_hjTLDTest| Hotjar| Registers statistical data on users' behaviour on the\nwebsite. Used for internal analytics by the website operator.| Session| HTTP  \n_hp2_#| Heap Analytics| Collects data on the user\u2019s navigation and behavior on\nthe website. This is used to compile statistical reports and heatmaps for the\nwebsite owner.| 1 day| HTTP  \n_hp2_hld#.#| Heap Analytics| Collects data on the user\u2019s navigation and\nbehavior on the website. This is used to compile statistical reports and\nheatmaps for the website owner.| 1 day| HTTP  \n_hp2_id.#| Heap Analytics| Collects data on the user\u2019s navigation and behavior\non the website. This is used to compile statistical reports and heatmaps for\nthe website owner.| 1 year| HTTP  \n_hp2_ses_props.#| Heap Analytics| Collects data on the user\u2019s navigation and\nbehavior on the website. This is used to compile statistical reports and\nheatmaps for the website owner.| 1 day| HTTP  \ndisqus_unique| c.disquscdn.com| Collects statistics related to the user's\nvisits to the website, such as number of visits, average time spent on the\nwebsite and loaded pages.| Session| HTTP  \ncollect| Google| Used to send data to Google Analytics about the visitor's\ndevice and behavior. Tracks the visitor across devices and marketing\nchannels.| Session| Pixel  \nhjActiveViewportIds| Hotjar| This cookie contains an ID string on the current\nsession. This contains non-personal information on what subpages the visitor\nenters \u2013 this information is used to optimize the visitor's experience.|\nPersistent| HTML  \nhjViewportId| Hotjar| Saves the user's screen size in order to adjust the size\nof images on the website.| Session| HTML  \ntd| Google| Registers statistical data on users' behaviour on the website.\nUsed for internal analytics by the website operator.| Session| Pixel  \n  \nMarketing cookies are used to track visitors across websites. The intention is\nto display ads that are relevant and engaging for the individual user and\nthereby more valuable for publishers and third party advertisers.\n\nName| Provider| Purpose| Expiry| Type  \n---|---|---|---|---  \nbadges-message| c.disquscdn.com| Collects data on the visitor\u2019s use of the\ncomment system on the website, and what blogs/articles the visitor has read.\nThis can be used for marketing purposes.| Persistent| HTML  \napi/telemetry| Heap Analytics| Collects data on user behaviour and interaction\nin order to optimize the website and make advertisement on the website more\nrelevant.| Session| Pixel  \nh| Heap Analytics| Collects data on user behaviour and interaction in order to\noptimize the website and make advertisement on the website more relevant.|\nSession| Pixel  \n#-#| YouTube| Pending| Session| HTML  \niU5q-!O9@$| YouTube| Registers a unique ID to keep statistics of what videos\nfrom YouTube the user has seen.| Session| HTML  \nLAST_RESULT_ENTRY_KEY| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| Session| HTTP  \nLogsDatabaseV2:V#||LogsRequestsStore| YouTube| Pending| Persistent| IDB  \nnextId| YouTube| Used to track user\u2019s interaction with embedded content.|\nSession| HTTP  \nremote_sid| YouTube| Necessary for the implementation and functionality of\nYouTube video-content on the website.| Session| HTTP  \nrequests| YouTube| Used to track user\u2019s interaction with embedded content.|\nSession| HTTP  \nServiceWorkerLogsDatabase#SWHealthLog| YouTube| Necessary for the\nimplementation and functionality of YouTube video-content on the website.|\nPersistent| IDB  \nTESTCOOKIESENABLED| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| 1 day| HTTP  \nVISITOR_INFO1_LIVE| YouTube| Pending| 180 days| HTTP  \nYSC| YouTube| Pending| Session| HTTP  \nyt.innertube::nextId| YouTube| Registers a unique ID to keep statistics of\nwhat videos from YouTube the user has seen.| Persistent| HTML  \nytidb::LAST_RESULT_ENTRY_KEY| YouTube| Used to track user\u2019s interaction with\nembedded content.| Persistent| HTML  \nYtIdbMeta#databases| YouTube| Used to track user\u2019s interaction with embedded\ncontent.| Persistent| IDB  \nyt-remote-cast-available| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \nyt-remote-cast-installed| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \nyt-remote-connected-devices| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Persistent| HTML  \nyt-remote-device-id| YouTube| Stores the user's video player preferences using\nembedded YouTube video| Persistent| HTML  \nyt-remote-fast-check-period| YouTube| Stores the user's video player\npreferences using embedded YouTube video| Session| HTML  \nyt-remote-session-app| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \nyt-remote-session-name| YouTube| Stores the user's video player preferences\nusing embedded YouTube video| Session| HTML  \n  \nUnclassified cookies are cookies that we are in the process of classifying,\ntogether with the providers of individual cookies.\n\nWe do not use cookies of this type.  \n---  \n  \n[#IABV2_LABEL_PURPOSES#] [#IABV2_LABEL_FEATURES#] [#IABV2_LABEL_PARTNERS#]\n\n[#IABV2_BODY_PURPOSES#]\n\n[#IABV2_BODY_FEATURES#]\n\n[#IABV2_BODY_PARTNERS#]\n\nCookies are small text files that can be used by websites to make a user's\nexperience more efficient. Other than those strictly necessary for the\noperation of the site, we need your permission to store any type of cookies on\nyour device. Learn more about ACM, how you can contact us, and how we process\npersonal data in our Privacy Policy. Also please consult our Cookie Notice.\n\nYou can change or withdraw your consent from the Cookie Declaration on our\nwebsite at any time by visiting the Cookie Declaration page. If contacting us\nregarding your consent, please state your consent ID and date from that page.\n\nYour consent applies to the following domains: dl.acm.org\n\nCookie declaration last updated on 3/31/24 by Cookiebot\n\nskip to main content\n\n  * Advanced Search\n  * Browse\n  * About\n  *     * Sign in\n    * Register\n\nAdvanced Search\n\nProceedings of the ACM on Programming Languages\n\nresearch-article\n\nOpen Access\n\nShare on\n\n# The origins of Objective-C at PPI/Stepstone and its evolution at NeXT\n\n  * Authors:\n  * Brad J. Cox\n\nn.n., n.n.\n\nn.n., n.n.\n\nView Profile\n\n,\n\n  * Steve Naroff\n\nn.n., n.n.\n\nn.n., n.n.\n\nView Profile\n\n,\n\n  * Hansen Hsu\n\nComputer History Museum, USA\n\nComputer History Museum, USA\n\nView Profile\n\nAuthors Info & Claims\n\nProceedings of the ACM on Programming LanguagesVolume 4Issue HOPLArticle No.:\n82pp 1\u201374https://doi.org/10.1145/3386332\n\nPublished:12 June 2020Publication History\n\n  * 0citation\n  * 12,014\n  * Downloads\n\nMetrics\n\nTotal Citations0\n\nTotal Downloads12,014\n\nLast 12 Months816\n\nLast 6 weeks64\n\n  * Get Citation Alerts\n  * Publisher Site\n\n  * eReader\n  * PDF\n\n## Proceedings of the ACM on Programming Languages\n\nVolume 4, Issue HOPL\n\nPreviousArticleNextArticle\n\n  *     * Abstract\n    * References\n    * Index Terms\n    * Recommendations\n    * Comments\n\nSkip Abstract Section\n\n## Abstract\n\nThe roots of Objective-C began at ITT in the early 1980s in a research group\nled by Tom Love investigating improving programmer productivity by an order of\nmagnitude, a concern motivated by the perceived \"software crisis\" articulated\nin the late 1960s. In 1981, Brad Cox, a member of this group, began to\ninvestigate Smalltalk and object-oriented programming for this purpose, but\nneeded a language compatible with the Unix and C environments used by ITT.\nThat year, Cox quickly wrote up the Object-Oriented Pre-Compiler (OOPC) that\nwould translate a Smalltalk-like syntax into C.\n\nLove felt there was a market for object-oriented solutions that could coexist\nwith legacy languages and platforms, and after a brief stint at Schlumberger-\nDoll, co-founded with Cox Productivity Products International (PPI), later\nrenamed as Stepstone, to pursue this. At PPI, Cox developed OOPC into\nObjective-C. Cox saw Objective-C as a crucial link in his larger vision of\ncreating a market for \"pre-fabricated\" software components (\"software-ICs\"),\nwhich could be bought off the shelf and which, Cox believed, would unleash a\n\"software industrial revolution.\"\n\nSteve Naroff joined Stepstone in 1986 as Steve Jobs' NeXT Computer became an\nimportant customer for Objective-C, as it was being used in its NeXTSTEP\noperating system. Naroff became the primary Stepstone developer addressing\nNeXT's issues with Objective-C, solving a key fragility problem preventing\nNeXT from deploying forwards-compatible object libraries. Impressed with NeXT,\nNaroff left Stepstone for NeXT in 1988, and once there, added Objective-C\nsupport to Richard Stallman's GNU GCC compiler, which NeXT was using as its C\ncompiler, removing the need to use Stepstone's ObjC to C translator. Over the\nnext several years, Naroff and others would add significant new features to\nObjective-C, such as \"categories,\" \"protocols,\" and the ability to mix in C++\ncode. When Stepstone folded in 1994, all rights to Objective-C were acquired\nby NeXT. This eventually transferred to Apple when NeXT was acquired by Apple\nin 1997. Objective-C became the basis for Apple's Mac OS X and then iOS\nplatforms, and Naroff and others at Apple added additional features to the\nlanguage in the late 2000s as the iPhone App Store greatly expanded\nObjective-C's user base.\n\n## References\n\n  1. Janet Abbate. 2012. Software crisis or identity crisis? Gender, labor, and programming methods. In Recoding Gender: Women\u2019s Changing Participation in Computing. MIT Press, Cambridge, MA, 73\u2013111.Google Scholar\n  2. Federico Biancuzzi and Shane Warden. 2009. Objective-C. In Masterminds of Programming (1st ed.). O\u2019Reilly Media, Sebastopol, CA, 241\u2013275. OCLC: 434042370.Google Scholar\n  3. Barry W. Boehm. 1973. Software and its impact: A quantitative assessment. Datamation 19, 5 (May), 48\u201359.Google Scholar\n  4. Frederick P. Brooks. 1975. The Mythical Man-Month: Essays on Software Engineering (1st ed.). Addison-Wesley, Reading, MA. Copy used: Jim Warren Book Collection, Lot X2595.2004, Box B14, Catalog 102676578, Computer History Museum, Mountain View, CA.Google Scholar\n  5. Frederick P. Brooks. 1987. No silver bullet: Essence and accidents of software engineering. Computer 20, 4, 10\u201319. Google ScholarDigital Library\n  6. Brad J. Cox. 1983a. The message/object programming model: A small change, at a deep conceptual level. In Proceedings of Softfair: A conference on software development tools, techniques, and alternatives. IEEE Computer Society Press, Arlington, VA (25\u201328 July), 51\u201360.Google Scholar\n  7. Brad J. Cox. 1983b. The object oriented pre-compiler: Programming Smalltalk 80 methods in C language. SIGPLAN Not. 18, 1 (Jan.), 15\u201322. Google ScholarDigital Library\n  8. Brad J. Cox. 1984. Message/object programming: An evolutionary change in programming technology. IEEE Software 1, 1 (Jan.), 50\u201361. Google ScholarDigital Library\n  9. Brad J. Cox. 1986. Object-Oriented Programming: An Evolutionary Approach (1st ed.). Addison-Wesley, Reading, MA.Google Scholar\n  10. Brad J. Cox. 1988. The Objective-C environment: past, present, and future. In Digest of Papers. COMPCON Spring 88 Thirty-Third IEEE Computer Society International Conference. IEEE, San Francisco, CA, USA (Feb.), 166\u2013169. Google ScholarCross Ref\n  11. Brad J. Cox. 1989. Planning for software manufacturing. In Proceedings of the Thirteenth Annual International Computer Software Applications Conference. IEEE, Orlando, FL, USA (Sept.), 331\u2013332. Google ScholarCross Ref\n  12. Brad J. Cox. 1990a. Planning the software industrial revolution. IEEE Software 7, 6 (Nov.), 25\u201333. Google ScholarDigital Library\n  13. Brad J. Cox. 1990b. There is a silver bullet: A software industrial revolution based on reusable and interchangeable parts will alter the software universe. Byte 15, 10 (Oct.), 209.Google Scholar\n  14. Brad J. Cox. 2016. Oral history. 2 Aug. 2016. https://www.computerhistory.org/collections/catalog/102717175 (retrieved 3 March 2020). CHM Oral History Collection, Lot X7863.2017, Catalog 102717175, Computer History Museum, Mountain View, CA.Google Scholar\n  15. Brad J. Cox and Bill Hunt. 1986. Objects, icons, and software-ICs. Byte 11, 8 (Aug.), 161\u2013176.Google Scholar\n  16. Brad J. Cox and Andrew J. Novobilski. 1991. Object-Oriented Programming: An Evolutionary Approach (2nd ed.). AddisonWesley, Reading, MA.Google Scholar\n  17. Brad J. Cox and Kurt J. Schmucker. 1987. Producer: A tool for translating Smalltalk-80 to Objective-C. SIGPLAN Not. 22, 12, 423\u2013429.Google ScholarDigital Library\n  18. Edsger W. Dijkstra. 1968. Letters to the editor: go to statement considered harmful. Commun. ACM 11, 3 (March), 147\u2013148. Google ScholarDigital Library\n  19. Nathan L. Ensmenger. 2010. The \u201cComputer Boys\u201d Take Over: Computers, Programmers, and the Politics of Technical Expertise. MIT Press, Cambridge, MA.Google Scholar\n  20. Nathan L. Ensmenger and William Aspray. 2002. Software as labor process. In History of Computing: Software Issues, Ulf Hashagen, Reinhard Keil-Slawik, and Arthur L Norberg (Eds.). Springer, Berlin, 139\u2013165.Google Scholar\n  21. Blaine Garst. 2016. Oral history part 1. 25 July 2016. https://www.computerhistory.org/collections/catalog/102717171 (retrieved 3 March 2020). CHM Oral History Collection, Lot X7853.2017, Catalog 102717171, Computer History Museum, Mountain View, CA.Google Scholar\n  22. Adele Goldberg and David Robson. 1983. Smalltalk-80 : The Language and its Implementation. Addison-Wesley, Reading, MA.Google ScholarDigital Library\n  23. James Gosling. 2019. Oral history part 2 of 2. 22 April 2019. https://www.computerhistory.org/collections/catalog/102781105 (retrieved 3 March 2020). CHM Oral History Collection, Lot X8971.2019, Catalog 102781105, Computer History Museum, Mountain View, CA.Google Scholar\n  24. Michael A. Hiltzik. 1999. Dealers of Lightning : Xerox PARC and the Dawn of the Computer Age (1st ed.). HarperBusiness, New York.Google Scholar\n  25. Ted Kaehler and Dave Patterson. 1986. A small taste of Smalltalk. Byte 11, 8 (Aug.), 145\u2013158.Google Scholar\n  26. Alan C. Kay. 1993. The early history of Smalltalk. In The second ACM SIGPLAN conference on History of programming languages ( HOPL-II ). Association for Computing Machinery, Cambridge, MA (March), 69\u201395. Google ScholarDigital Library\n  27. Glenn Krasner. 1984. Smalltalk-80: Bits of History, Words of Advice. Addison-Wesley, Reading, MA. OCLC: 266966827.Google Scholar\n  28. Lamar Ledbetter and Brad J. Cox. 1985. Software-ICs: A plan for building reusable software components. Byte 10, 6 (June), 307\u2013316.Google Scholar\n  29. Tom Love. 1983. Experiences with Smalltalk-80 for application development. In Proceedings of Softfair: A conference on software development tools, techniques, and alternatives. IEEE Computer Society Press, Arlington, VA (25\u201328 July), 61\u201365.Google Scholar\n  30. Tom Love. 1988. The economics of reuse (of software). In Digest of Papers. COMPCON Spring 88 Thirty-Third IEEE Computer Society International Conference. IEEE, San Francisco, CA, USA (Feb.), 238\u2013241. Google ScholarCross Ref\n  31. Tom Love. 1993. Object Lessons: Lessons Learned in Object-Oriented Development Projects. SIGS Books, New York, NY. OCLC: 612808297.Google Scholar\n  32. Tom Love. 2019. Skype interview. 17 April 2019. https://www.computerhistory.org/collections/catalog/102781110 (retrieved 12 March 2020). CHM Oral History Collection, Lot X9026.2019, Catalog 102781110, Computer History Museum, Mountain View, CA.Google Scholar\n  33. Donald MacKenzie. 2001. Mechanizing Proof: Computing, Risk, and Trust. MIT Press, Cambridge, MA.Google ScholarCross Ref\n  34. Michael S. Mahoney. 1990. The roots of software engineering. CWI Quarterly 3, 4, 325\u2013334. http://www.princeton.edu/ ~hos/Mahoney/articles/sweroots/sweroots.htm (retrieved 3 March 2020). PDF version available at: http://thecorememory. com/TROSE.pdf (retrieved 3 March 2020). Extracts also available in Michael S. Mahoney. 2011. Histories of Computing. Harvard University Press, Cambridge, MA; London, England, 86\u201389.Google Scholar\n  35. Michael S. Mahoney. 2002. Software: The self-programming machine. In From 0 to 1: An Authoritative History of Modern Computing, Atsushi Akera and Frederik Nebeker (Eds.). Oxford University Press, New York, 91\u2013100. Also available in Michael S. Mahoney. 2011. Histories of Computing. Harvard University Press, Cambridge, MA; London, England, 77\u201385.Google Scholar\n  36. Michael S. Mahoney. 2004. Finding a history for software engineering. Annals of the History of Computing, IEEE 26, 1, 8\u201319. Google ScholarDigital Library\n  37. Steve Naroff. 2018. Oral history, part 1 of 2. 8 Oct. 2018. https://www.computerhistory.org/collections/catalog/102717385 (retrieved 3 March 2020). CHM Oral History Collection, Lot X8800.2019, Catalog 102717385, Computer History Museum, Mountain View, CA.Google Scholar\n  38. Steve Naroff and Alan Watt. 1987. Design issues for Objective-C v.?.? DRAFT. 3 July 1987. Google ScholarCross Ref\n  39. Kurt J. Schmucker. 1986a. MacApp: An application framework. Byte 11, 8 (Aug.), 189\u2013193.Google Scholar\n  40. Kurt J. Schmucker. 1986b. Object-oriented languages for the Macintosh. Byte 11, 8 (Aug.), 177\u2013185.Google Scholar\n  41. Rebecca Slayton. 2013. Arguments that Count: Physics, Computing, and Missile Defense, 1949-2012. The MIT Press, Cambridge, MA.Google ScholarDigital Library\n  42. Bjarne Stroustrup. 1993. A history of C++: 1979\u20131991. In The second ACM SIGPLAN conference on History of programming languages (HOPL-II ). Association for Computing Machinery, Cambridge, MA, USA (March), 271\u2013297. Google ScholarDigital Library\n  43. Larry Tesler. 1981. The Smalltalk Environment. Byte 6, 8 (Aug.), 90\u2013147.Google Scholar\n  44. Larry Tesler. 1986. Programming experiences. Byte 11, 8 (Aug.), 195\u2013206.Google Scholar\n  45. Larry Tesler. 2013. Oral history. 13 Feb. 2013. https://www.computerhistory.org/collections/catalog/102746675 (retrieved 26 Feb. 2020). CHM Oral History Collection, Lot X6762.2013, Catalog 102746675, Computer History Museum, Mountain View, CA.Google Scholar\n  46. Larry Tesler. 2016. Oral history, part 2 of 3. 16 Dec. 2016. https://www.computerhistory.org/collections/catalog/102717269 (retrieved 3 March 2020). CHM Oral History Collection, Lot X8020.2017, Catalog 102717269, Computer History Museum, Mountain View, CA.Google Scholar\n  47. James E. Tomayko. 2002. Software as engineering. In History of Computing: Software Issues, Ulf Hashagen, Reinhard Keil-Slawik, and Arthur L Norberg (Eds.). Springer, Berlin, 139\u2013165.Google Scholar\n  48. John W. Verity. 1987. The OOPS revolution. Datamation 33 (May), 72\u201378. Copy used: Smalltalk press and clippings, 1983\u20132002, Adele Goldberg papers, Lot X5774.2010, Box 2, Folder 14, Catalog 102739382, Computer History Museum, Mountain View, CA.Google Scholar\n  49. John W. Verity and Evan I. Schwartz. 1991. Software made simple. BusinessWeek (30 Sept.), 92\u2013100. Copy used: Smalltalk press and clippings, 1983\u20132002, Adele Goldberg papers, Lot X5774.2010, Box 2, Folder 14, Catalog 102739382, Computer History Museum, Mountain View, CA.Google Scholar\n  50. Eva White and Rich Malloy. 1986. Object-oriented programming. Byte 11, 8 (Aug.), 137.Google Scholar\n  51. Xerox Learning Research Group. 1981. The Smalltalk-80 system. Byte 6, 8 (Aug.), 36\u201348.Google Scholar\n  52. Apple Inc. 2020a. Extensions. https://docs.swift.org/swift- book/LanguageGuide/Extensions.html (retrieved 26 Feb. 2020) This website describes the Extensions feature in Swift, which allows the addition of new functionality to types for which the programmer does not have access to the source code, similar to categories in Objective-C. We refer to it to illustrate how important categories in Objective-C became to Apple\u2019s language idioms and have continued in Swift, albeit under a new name.Google Scholar\n  53. Mark Dalrymple. 2012. Objective-C Literals, Part 1. March 2012. https://www.bignerdranch.com/blog/objective- c- literalspart- 1/ (retrieved 12 March 2020) This blog post describes three new features available in Apple\u2019s open source Clang compiler front end: more concise NSNumber, NSArray, and NSDictionary creation syntax via literals, and more concise NSArray and NSDictionary access syntax via subscripting.Google Scholar\n  54. Microsoft. 2015. Extension Methods \u2014 C# Programming Guide (July). https://docs.microsoft.com/en- us/dotnet/csharp/ programming- guide/classes- and- structs/extension- methods (retrieved 2 Aug. 2019) This website describes Extension methods in C#, which enable the addition of methods to a class without subclassing, recompiling, or otherwise modifying the original type. We refer to this website to document that C# has a feature similar to categories in Objective-C.Google Scholar\n\n## Cited By\n\nView all\n\n## Index Terms\n\n  1. The origins of Objective-C at PPI/Stepstone and its evolution at NeXT\n\n    1. Social and professional topics\n\n      1. Professional topics\n\n        1. History of computing\n\n          1. History of programming languages\n\n          2. History of software\n\n    2. Software and its engineering\n\n      1. Software notations and tools\n\n        1. Compilers\n\n          1. Runtime environments\n\n        2. Development frameworks and environments\n\n          1. Object oriented frameworks\n\n        3. General programming languages\n\n          1. Language features\n\n            1. Abstract data types\n\n            2. Classes and objects\n\n            3. Inheritance\n\n            4. Polymorphism\n\n          2. Language types\n\n            1. Object oriented languages\n\n## Recommendations\n\n  * ##### iPhone application development\n\nOOPSLA '10: Proceedings of the ACM international conference companion on\nObject oriented programming systems languages and applications companion\n\nApple's mobile handheld devices have been a huge success; beginning with the\nlaunching of the iPhone in 2007 and that has been maintained until present\ndays with the launching of the iPad in 2010. There are now more than 85,000\napps available for the ...\n\nRead More\n\n  * ##### Bringing Scheme programming to the iPhone\u2014Experience\n\nThe iPhone SDK provides a powerful platform for the development of\napplications that make use of iPhone capabilities, such as sensors, GPS, Wi-\nFi, or Bluetooth connectivity. We observe that so far the development of\niPhone applications has mostly been ...\n\nRead More\n\n  * ##### A Swift Introduction to Swift App Development (Abstract Only)\n\nSIGCSE '15: Proceedings of the 46th ACM Technical Symposium on Computer\nScience Education\n\nSwift is a new programming language recently introduced by Apple as a\nreplacement for Objective-C. Considering that Objective-C ranks third on the\nTiobe Index and is the progenitor of virtually all the 1.2 million apps in the\nApp Store, Swift is likely ...\n\nRead More\n\n## Comments\n\n### Login options\n\nCheck if you have access through your login credentials or your institution to\nget full access on this article.\n\nSign in\n\n### Full Access\n\nGet this Article\n\n  * Information\n  * Contributors\n\n  * ### Published in\n\nProceedings of the ACM on Programming Languages Volume 4, Issue HOPL\n\nJune 2020\n\n1524 pages\n\nEISSN:2475-1421\n\nDOI:10.1145/3406494\n\nIssue\u2019s Table of Contents\n\nCopyright \u00a9 2020 Owner/Author\n\nThis work is licensed under a Creative Commons Attribution International 4.0\nLicense.\n\n### Sponsors\n\n### In-Cooperation\n\n### Publisher\n\nAssociation for Computing Machinery\n\nNew York, NY, United States\n\n### Publication History\n\n    * Published: 12 June 2020\n    * Online AM: 7 May 2020\n\nPublished in pacmpl Volume 4, Issue HOPL\n\n### Permissions\n\nRequest permissions about this article.\n\nRequest Permissions\n\n### Check for updates\n\n### Author Tags\n\n    * Apple\n    * C++\n    * ITT\n    * NeXT\n    * OOPC\n    * Objective-C\n    * PPI\n    * Smalltalk\n    * Stepstone\n    * categories\n    * dynamic binding\n    * message passing\n    * protocols\n    * software crisis\n    * software-ICs\n\n### Qualifiers\n\n    * research-article\n\n### Conference\n\n### Funding Sources\n\n  * ### Other Metrics\n\nView Article Metrics\n\n  * Bibliometrics\n  * Citations0\n\n  * ### Article Metrics\n\n    * 0\n\nTotal Citations\n\nView Citations\n\n    * 12,014\n\nTotal Downloads\n\n    * Downloads (Last 12 months)816\n    * Downloads (Last 6 weeks)64\n\n### Other Metrics\n\nView Author Metrics\n\n  * ### Cited By\n\nThis publication has not been cited yet\n\n### PDF Format\n\nView or Download as a PDF file.\n\nPDF\n\n### eReader\n\nView online with eReader.\n\neReader\n\n### Digital Edition\n\nView this article in digital edition.\n\nView Digital Edition\n\n  1. Janet Abbate. 2012. Software crisis or identity crisis? Gender, labor, and programming methods. In Recoding Gender: Women\u2019s Changing Participation in Computing. MIT Press, Cambridge, MA, 73\u2013111.Google Scholar\n  2. Federico Biancuzzi and Shane Warden. 2009. Objective-C. In Masterminds of Programming (1st ed.). O\u2019Reilly Media, Sebastopol, CA, 241\u2013275. OCLC: 434042370.Google Scholar\n  3. Barry W. Boehm. 1973. Software and its impact: A quantitative assessment. Datamation 19, 5 (May), 48\u201359.Google Scholar\n  4. Frederick P. Brooks. 1975. The Mythical Man-Month: Essays on Software Engineering (1st ed.). Addison-Wesley, Reading, MA. Copy used: Jim Warren Book Collection, Lot X2595.2004, Box B14, Catalog 102676578, Computer History Museum, Mountain View, CA.Google Scholar\n  5. Frederick P. Brooks. 1987. No silver bullet: Essence and accidents of software engineering. Computer 20, 4, 10\u201319. Google ScholarDigital Library\n  6. Brad J. Cox. 1983a. The message/object programming model: A small change, at a deep conceptual level. In Proceedings of Softfair: A conference on software development tools, techniques, and alternatives. IEEE Computer Society Press, Arlington, VA (25\u201328 July), 51\u201360.Google Scholar\n  7. Brad J. Cox. 1983b. The object oriented pre-compiler: Programming Smalltalk 80 methods in C language. SIGPLAN Not. 18, 1 (Jan.), 15\u201322. Google ScholarDigital Library\n  8. Brad J. Cox. 1984. Message/object programming: An evolutionary change in programming technology. IEEE Software 1, 1 (Jan.), 50\u201361. Google ScholarDigital Library\n  9. Brad J. Cox. 1986. Object-Oriented Programming: An Evolutionary Approach (1st ed.). Addison-Wesley, Reading, MA.Google Scholar\n  10. Brad J. Cox. 1988. The Objective-C environment: past, present, and future. In Digest of Papers. COMPCON Spring 88 Thirty-Third IEEE Computer Society International Conference. IEEE, San Francisco, CA, USA (Feb.), 166\u2013169. Google ScholarCross Ref\n  11. Brad J. Cox. 1989. Planning for software manufacturing. In Proceedings of the Thirteenth Annual International Computer Software Applications Conference. IEEE, Orlando, FL, USA (Sept.), 331\u2013332. Google ScholarCross Ref\n  12. Brad J. Cox. 1990a. Planning the software industrial revolution. IEEE Software 7, 6 (Nov.), 25\u201333. Google ScholarDigital Library\n  13. Brad J. Cox. 1990b. There is a silver bullet: A software industrial revolution based on reusable and interchangeable parts will alter the software universe. Byte 15, 10 (Oct.), 209.Google Scholar\n  14. Brad J. Cox. 2016. Oral history. 2 Aug. 2016. https://www.computerhistory.org/collections/catalog/102717175 (retrieved 3 March 2020). CHM Oral History Collection, Lot X7863.2017, Catalog 102717175, Computer History Museum, Mountain View, CA.Google Scholar\n  15. Brad J. Cox and Bill Hunt. 1986. Objects, icons, and software-ICs. Byte 11, 8 (Aug.), 161\u2013176.Google Scholar\n  16. Brad J. Cox and Andrew J. Novobilski. 1991. Object-Oriented Programming: An Evolutionary Approach (2nd ed.). AddisonWesley, Reading, MA.Google Scholar\n  17. Brad J. Cox and Kurt J. Schmucker. 1987. Producer: A tool for translating Smalltalk-80 to Objective-C. SIGPLAN Not. 22, 12, 423\u2013429.Google ScholarDigital Library\n  18. Edsger W. Dijkstra. 1968. Letters to the editor: go to statement considered harmful. Commun. ACM 11, 3 (March), 147\u2013148. Google ScholarDigital Library\n  19. Nathan L. Ensmenger. 2010. The \u201cComputer Boys\u201d Take Over: Computers, Programmers, and the Politics of Technical Expertise. MIT Press, Cambridge, MA.Google Scholar\n  20. Nathan L. Ensmenger and William Aspray. 2002. Software as labor process. In History of Computing: Software Issues, Ulf Hashagen, Reinhard Keil-Slawik, and Arthur L Norberg (Eds.). Springer, Berlin, 139\u2013165.Google Scholar\n  21. Blaine Garst. 2016. Oral history part 1. 25 July 2016. https://www.computerhistory.org/collections/catalog/102717171 (retrieved 3 March 2020). CHM Oral History Collection, Lot X7853.2017, Catalog 102717171, Computer History Museum, Mountain View, CA.Google Scholar\n  22. Adele Goldberg and David Robson. 1983. Smalltalk-80 : The Language and its Implementation. Addison-Wesley, Reading, MA.Google ScholarDigital Library\n  23. James Gosling. 2019. Oral history part 2 of 2. 22 April 2019. https://www.computerhistory.org/collections/catalog/102781105 (retrieved 3 March 2020). CHM Oral History Collection, Lot X8971.2019, Catalog 102781105, Computer History Museum, Mountain View, CA.Google Scholar\n  24. Michael A. Hiltzik. 1999. Dealers of Lightning : Xerox PARC and the Dawn of the Computer Age (1st ed.). HarperBusiness, New York.Google Scholar\n  25. Ted Kaehler and Dave Patterson. 1986. A small taste of Smalltalk. Byte 11, 8 (Aug.), 145\u2013158.Google Scholar\n  26. Alan C. Kay. 1993. The early history of Smalltalk. In The second ACM SIGPLAN conference on History of programming languages ( HOPL-II ). Association for Computing Machinery, Cambridge, MA (March), 69\u201395. Google ScholarDigital Library\n  27. Glenn Krasner. 1984. Smalltalk-80: Bits of History, Words of Advice. Addison-Wesley, Reading, MA. OCLC: 266966827.Google Scholar\n  28. Lamar Ledbetter and Brad J. Cox. 1985. Software-ICs: A plan for building reusable software components. Byte 10, 6 (June), 307\u2013316.Google Scholar\n  29. Tom Love. 1983. Experiences with Smalltalk-80 for application development. In Proceedings of Softfair: A conference on software development tools, techniques, and alternatives. IEEE Computer Society Press, Arlington, VA (25\u201328 July), 61\u201365.Google Scholar\n  30. Tom Love. 1988. The economics of reuse (of software). In Digest of Papers. COMPCON Spring 88 Thirty-Third IEEE Computer Society International Conference. IEEE, San Francisco, CA, USA (Feb.), 238\u2013241. Google ScholarCross Ref\n  31. Tom Love. 1993. Object Lessons: Lessons Learned in Object-Oriented Development Projects. SIGS Books, New York, NY. OCLC: 612808297.Google Scholar\n  32. Tom Love. 2019. Skype interview. 17 April 2019. https://www.computerhistory.org/collections/catalog/102781110 (retrieved 12 March 2020). CHM Oral History Collection, Lot X9026.2019, Catalog 102781110, Computer History Museum, Mountain View, CA.Google Scholar\n  33. Donald MacKenzie. 2001. Mechanizing Proof: Computing, Risk, and Trust. MIT Press, Cambridge, MA.Google ScholarCross Ref\n  34. Michael S. Mahoney. 1990. The roots of software engineering. CWI Quarterly 3, 4, 325\u2013334. http://www.princeton.edu/ ~hos/Mahoney/articles/sweroots/sweroots.htm (retrieved 3 March 2020). PDF version available at: http://thecorememory. com/TROSE.pdf (retrieved 3 March 2020). Extracts also available in Michael S. Mahoney. 2011. Histories of Computing. Harvard University Press, Cambridge, MA; London, England, 86\u201389.Google Scholar\n  35. Michael S. Mahoney. 2002. Software: The self-programming machine. In From 0 to 1: An Authoritative History of Modern Computing, Atsushi Akera and Frederik Nebeker (Eds.). Oxford University Press, New York, 91\u2013100. Also available in Michael S. Mahoney. 2011. Histories of Computing. Harvard University Press, Cambridge, MA; London, England, 77\u201385.Google Scholar\n  36. Michael S. Mahoney. 2004. Finding a history for software engineering. Annals of the History of Computing, IEEE 26, 1, 8\u201319. Google ScholarDigital Library\n  37. Steve Naroff. 2018. Oral history, part 1 of 2. 8 Oct. 2018. https://www.computerhistory.org/collections/catalog/102717385 (retrieved 3 March 2020). CHM Oral History Collection, Lot X8800.2019, Catalog 102717385, Computer History Museum, Mountain View, CA.Google Scholar\n  38. Steve Naroff and Alan Watt. 1987. Design issues for Objective-C v.?.? DRAFT. 3 July 1987. Google ScholarCross Ref\n  39. Kurt J. Schmucker. 1986a. MacApp: An application framework. Byte 11, 8 (Aug.), 189\u2013193.Google Scholar\n  40. Kurt J. Schmucker. 1986b. Object-oriented languages for the Macintosh. Byte 11, 8 (Aug.), 177\u2013185.Google Scholar\n  41. Rebecca Slayton. 2013. Arguments that Count: Physics, Computing, and Missile Defense, 1949-2012. The MIT Press, Cambridge, MA.Google ScholarDigital Library\n  42. Bjarne Stroustrup. 1993. A history of C++: 1979\u20131991. In The second ACM SIGPLAN conference on History of programming languages (HOPL-II ). Association for Computing Machinery, Cambridge, MA, USA (March), 271\u2013297. Google ScholarDigital Library\n  43. Larry Tesler. 1981. The Smalltalk Environment. Byte 6, 8 (Aug.), 90\u2013147.Google Scholar\n  44. Larry Tesler. 1986. Programming experiences. Byte 11, 8 (Aug.), 195\u2013206.Google Scholar\n  45. Larry Tesler. 2013. Oral history. 13 Feb. 2013. https://www.computerhistory.org/collections/catalog/102746675 (retrieved 26 Feb. 2020). CHM Oral History Collection, Lot X6762.2013, Catalog 102746675, Computer History Museum, Mountain View, CA.Google Scholar\n  46. Larry Tesler. 2016. Oral history, part 2 of 3. 16 Dec. 2016. https://www.computerhistory.org/collections/catalog/102717269 (retrieved 3 March 2020). CHM Oral History Collection, Lot X8020.2017, Catalog 102717269, Computer History Museum, Mountain View, CA.Google Scholar\n  47. James E. Tomayko. 2002. Software as engineering. In History of Computing: Software Issues, Ulf Hashagen, Reinhard Keil-Slawik, and Arthur L Norberg (Eds.). Springer, Berlin, 139\u2013165.Google Scholar\n  48. John W. Verity. 1987. The OOPS revolution. Datamation 33 (May), 72\u201378. Copy used: Smalltalk press and clippings, 1983\u20132002, Adele Goldberg papers, Lot X5774.2010, Box 2, Folder 14, Catalog 102739382, Computer History Museum, Mountain View, CA.Google Scholar\n  49. John W. Verity and Evan I. Schwartz. 1991. Software made simple. BusinessWeek (30 Sept.), 92\u2013100. Copy used: Smalltalk press and clippings, 1983\u20132002, Adele Goldberg papers, Lot X5774.2010, Box 2, Folder 14, Catalog 102739382, Computer History Museum, Mountain View, CA.Google Scholar\n  50. Eva White and Rich Malloy. 1986. Object-oriented programming. Byte 11, 8 (Aug.), 137.Google Scholar\n  51. Xerox Learning Research Group. 1981. The Smalltalk-80 system. Byte 6, 8 (Aug.), 36\u201348.Google Scholar\n  52. Apple Inc. 2020a. Extensions. https://docs.swift.org/swift- book/LanguageGuide/Extensions.html (retrieved 26 Feb. 2020) This website describes the Extensions feature in Swift, which allows the addition of new functionality to types for which the programmer does not have access to the source code, similar to categories in Objective-C. We refer to it to illustrate how important categories in Objective-C became to Apple\u2019s language idioms and have continued in Swift, albeit under a new name.Google Scholar\n  53. Mark Dalrymple. 2012. Objective-C Literals, Part 1. March 2012. https://www.bignerdranch.com/blog/objective- c- literalspart- 1/ (retrieved 12 March 2020) This blog post describes three new features available in Apple\u2019s open source Clang compiler front end: more concise NSNumber, NSArray, and NSDictionary creation syntax via literals, and more concise NSArray and NSDictionary access syntax via subscripting.Google Scholar\n  54. Microsoft. 2015. Extension Methods \u2014 C# Programming Guide (July). https://docs.microsoft.com/en- us/dotnet/csharp/ programming- guide/classes- and- structs/extension- methods (retrieved 2 Aug. 2019) This website describes Extension methods in C#, which enable the addition of methods to a class without subclassing, recompiling, or otherwise modifying the original type. We refer to this website to document that C# has a feature similar to categories in Objective-C.Google Scholar\n\n  * Figures\n  * Other\n\n### Share this Publication link\n\n### Share on Social Media\n\nShare on\n\nClose Figure Viewer\n\nBrowse AllReturn\n\n### Caption\n\nView Issue\u2019s Table of Contents\n\n## New Citation Alert added!\n\nThis alert has been successfully added and will be sent to:\n\nYou will be notified whenever a record that you have chosen has been cited.\n\nTo manage your alert preferences, click on the button below.\n\nManage my Alerts\n\n## New Citation Alert!\n\nPlease log in to your account\n\n## Export Citations\n\n## Footer\n\n### Categories\n\n  * Journals\n  * Magazines\n  * Books\n  * Proceedings\n  * SIGs\n  * Conferences\n  * Collections\n  * People\n\n### About\n\n  * About ACM Digital Library\n  * ACM Digital Library Board\n  * Subscription Information\n  * Author Guidelines\n  * Using ACM Digital Library\n  * All Holdings within the ACM Digital Library\n  * ACM Computing Classification System\n  * Digital Library Accessibility\n\n### Join\n\n  * Join ACM\n  * Join SIGs\n  * Subscribe to Publications\n  * Institutions and Libraries\n\n### Connect\n\n  * Contact\n  * Facebook\n  * X\n  * Linkedin\n  * Feedback\n  * Bug Report\n\nThe ACM Digital Library is published by the Association for Computing\nMachinery. Copyright \u00a9 2024 ACM, Inc.\n\n  * Terms of Usage\n  * Privacy Policy\n  * Code of Ethics\n\nYour Search Results Download Request\n\nWe are preparing your search results for download ...\n\nWe will inform you here when the file is ready.\n\nDownload now!\n\nYour Search Results Download Request\n\nYour file of search results citations is now ready.\n\nDownload now!\n\nYour Search Results Download Request\n\nYour search export query has expired. Please try again.\n\n", "frontpage": false}
