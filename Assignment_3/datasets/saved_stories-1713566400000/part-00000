{"aid": "40088907", "title": "iTTYL: Schedule multimedia iMessage+SMS continuously from Notes on any device", "url": "https://github.com/tmasthay/iTTYL", "domain": "github.com/tmasthay", "votes": 2, "user": "xkcb", "posted_at": "2024-04-19 16:37:53", "comments": 0, "source_title": "GitHub - tmasthay/iTTYL: Continuously schedule iMessage or SMS texts with file attachments from your Mac and iPhone.", "source_text": "GitHub - tmasthay/iTTYL: Continuously schedule iMessage or SMS texts with file\nattachments from your Mac and iPhone.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ntmasthay / iTTYL Public\n\n  * Notifications\n  * Fork 0\n  * Star 3\n\nContinuously schedule iMessage or SMS texts with file attachments from your\nMac and iPhone.\n\n### License\n\nGPL-3.0 license\n\n3 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# tmasthay/iTTYL\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nTyler MasthayandtmasthayRELEASE: 0.1.0Apr 18, 2024d7045b2 \u00b7 Apr 18, 2024Apr\n18, 2024\n\n## History\n\n1 Commits  \n  \n### extra_features\n\n|\n\n### extra_features\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### tests\n\n|\n\n### tests\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### texts/sent\n\n|\n\n### texts/sent\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### .keep\n\n|\n\n### .keep\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### .schedulerc\n\n|\n\n### .schedulerc\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### SETTINGS_TEMPLATE.txt\n\n|\n\n### SETTINGS_TEMPLATE.txt\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### SMS_CONTACTS_TEMPLATE.txt\n\n|\n\n### SMS_CONTACTS_TEMPLATE.txt\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### a.applescript\n\n|\n\n### a.applescript\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### activate.sh\n\n|\n\n### activate.sh\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### gui.py\n\n|\n\n### gui.py\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### send_imessage.applescript\n\n|\n\n### send_imessage.applescript\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### send_scheduled_messages.py\n\n|\n\n### send_scheduled_messages.py\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### send_sms.applescript\n\n|\n\n### send_sms.applescript\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n### unit_tests.sh\n\n|\n\n### unit_tests.sh\n\n| RELEASE: 0.1.0| Apr 18, 2024  \n  \n## Repository files navigation\n\n# iTTYL\n\nContinuously schedule iMessage or SMS texts with file attachments from your\nMac and iPhone.\n\nAs long as you have a Mac, this software allows for continuous message\nscheduling from your iPhone, Mac, and any device that can access the internet\n(e.g., a Linux machine).\n\nThis repo is largely inspired by great work by reidjs, which originally made\nme realize that this project was possible and whose code serves as the\nskeleton of this project.\n\n# Hello World\n\nAssuming you have all the setup below this section complete, here is how you\nuse this software.\n\n  1. Go into Notes app on your Mac or your iPhone.\n  2. Make a note in the \"Texts\" directory you made earlier.\n  3. At the top of the note put me now or me +1m (schedule for 1 minute in the future).\n  4. On the next line, type Hello World.\n  5. (Optional) Paste an image after that.\n  6. There should be a daemon running on your Mac that will periodically check the Notes app and it should send just fine. There is latency here, as defined by SETTINGS.txt in your custom setup.\n\n## Examples\n\nBelow are some examples of what a typical note will look like.\n\n### Relative time (what I personally find most useful)\n\nSchedule text for 1 day, 2 hours, and 10 minutes in advance.\n\n    \n    \n    kevin_durant +1d2h10m Hi KD, sorry we defeated you by 30 points. Not cool on our part rubbing it like this. I'd just like to let you know that the Suns are so bad that I was confident enough to schedule this message 1 day, 2 hours, and 10 minutes ago, which is around the time I thought the third quarter would start (right now) :) Lebron\n\n### Absolute time\n\nSchedule text for January 1, 2025 midnight.\n\n    \n    \n    anderson_cooper January 1, 2025 12:00:00 AM Happy New Year, Anderson! Sincere apologies that we make you do this show every year.\n\n### Now and images\n\nEquivalently, just replace now with +0m.\n\n    \n    \n    mom now My phone is dead, but I plan to be home in 2 hours. I had to message you with my nifty iTTYL software from my office's Windows machine by signing into iCloud on Firefox (got the two-factor finished just before it died!) and making a note in the Notes app. Then iCloud syncing allowed this message to be sent to you through a daemon on my Mac. I've kept \"Keep Me Signed In\" for iCloud on my office Windows machine in case this ever happens again! Ned has this setup on his Linux machine too after I told him about this haha. Neat right?! I almost forgot, here's a photo of the event today, which I was still able to include through my iCloud account! https://share.icloud.com/photos/....\n\n### Note on Image Sending\n\nThere are three ways to send images ranked from \"most general, most annoying\"\nto \"least general, least annoying\" ways.\n\n  1. iCloud share link\n\n    1. Any device\n    2. Mac daemon will go to the link, download the file locally, and send it.\n    3. If the download fails for any reason, the link will itself will be sent.\n\n      1. The most common reason for failure is rate limiting by iCloud's website, but this is unlikely unless you message a lot or are extending this software.\n  2. \"Share\" from photos\n\n    1. iPhone (on Mac too, but use [3] on mac since it's easier)\n    2. Go into Notes app, press camera icon, and share.\n\n      1. This is necessary due to Apple security restrictions. If you directly\n\n# Setup things \"Apple-side\"\n\n## Setup iCloud and Notes app\n\n  1. Make sure iCloud syncing is ON for the Notes app for both your Mac and iPhone.\n  2. Make two folders in your Notes app titled \"Texts\" and \"Sent\", and make sure they are recognized as synced folders for iCloud.\n\n## Setup Power Nap on your Mac\n\n  1. On your Mac, CMD+Spacebar and search Power Nap\n  2. Click the dropdown for Wake for network access and select either Always or Only on Power Adapter. If you select Never, then texts will only be sent when your Mac is fully on. It is simply a tradeoff of Mac power consumption versus continuity of text scheduling on which setting you choose.\n\n## Setup Accessibility on your Mac\n\n  1. Open System Settings by pressing CMD+Spacebar, searching System Settings, and pressing Enter.\n  2. Search Full disk in System Settings and click Allow applications to access all user files.\n  3. Press the + sign on the right and give full-disk access to the following apps.\n\n    1. Messages\n    2. Notes\n    3. Terminal\n\n# Setup things \"iTTYL-side\"\n\n## Setup on terminal in Mac\n\n  1. Clone this repo to your computer\n  2. cd private_scheduler\n  3. cp SETTINGS_TEMPLATE.txt SETTINGS.txt and set your preferences (details below).\n  4. Open your terminal to this project directory and run these commands in order\n\n    1. virtualenv venv or conda create -n ittyl python=3.10\n    2. source activate.sh or conda activate ittyl\n    3. pip install -r requirements.txt\n  5. source .schedulerc (creates syntactic sugar commands in terminal)\n  6. addon wake_scheduler (creates a launchd process to periodically scan for new scheduled texts)\n  7. Optionally, you can run addon rwake if you want to schedule automatic wakes of your Mac (nice fallback when not on power).\n  8. addon contacts\n\n    1. Copy and paste the parts of text for contacts that you want into your SETTINGS.txt file. This will give you an alias for phone numbers. Note that underscores are currently necessary but which I hope to refactor out in the near future to make a more user-friendly UI.\n  9. addon group_chats\n\n    1. Sample output will look like\n    \n        iMessage;+;chatXXXXXXXX contact_name1 contact_name2 XXX-XXX-XXXX (a phone number in a group chat that is not in your contacts)\n\n    2. Copy only the \"iMessage;+;chatXXXX\" or \"SMS;+;chatXXX\" parts (indented, individual contacts are just there to help you distinguish which group chat is which).\n    3. Go into SETTINGS.txt and give it an alias such as my_group_chat=iMessage;+;chatXXXX or my_group_chat=SMS;+;chatXXX.\n  10. cp SMS_CONTACTS_TEMPLATE.txt SMS_CONTACTS.txt. Put the identifiers for non-iPhone users from your SETTINGS.txt. There are a few examples in the template for cases to consider so that things do not break.\n\n# SETTINGS.txt\n\nMake sure to read the SYNC_MODE row carefully. Its instructions sum up the\nimportant nuances of how to use this program pretty well.\n\nVariable| Description| Options / Examples  \n---|---|---  \nMAX_OVERTIME_MINS| The maximum minutes allowed for overtime; helps control how\nmuch extra time can be accumulated beyond regular scheduling limits.| 10000\nminutes  \nDEBUG_TEXTING| Enables or disables debug mode for texting operations; helpful\nfor troubleshooting without sending actual texts.| False (disabled), True\n(enabled)  \nSCHEDULED_TEXTS_DIRECTORY| The directory where scheduled texts are stored.\nThis path is relative to the script's location.| ./texts  \nYOUR_NAME| The name of the user or the identifier used in the scripts.|\nyour_name  \nWAKE_FREQUENCY| The frequency in minutes at which the scheduler wakes to check\nif any texts need to be sent.| 15 minutes  \nRWAKE_FREQUENCY| The recovery wake frequency in minutes, used perhaps for a\nmore rapid check in special circumstances.| 1 minute  \nOUTPUT_PATH| The path where output logs from the script are stored.|\n/tmp/text_scheduler.out  \nABSOLUTE_PYTHON_PATH| The absolute path to the Python executable used by the\nscript.| ~/anaconda3/bin/python  \nSYNC_MODE| Controls how the texting script synchronizes and schedules texts\nbased on their readiness and specified conditions.\\- \"always\": Texts are\nscheduled every time the script is called, regardless of their designated\ntimes. - \"never\": Disables all scheduling; typically used temporarily. -\n\"only_if_ready\" or \"conditional\": Texts are scheduled only if they are ready\nto be sent immediately. These are aliases and operate the same way. For\nexample, say you schedule \"my_contact_name +1d3h11m\" for \"send text to\ncontact_name after 1 day, 3 hours, and 11 minutes after the last edit of this\nnote\" and after 1 day, 3 hours, and 10 minutes you realize you want to edit\nsomething...the file will still be there, unscheduled, for you to edit the\ntext. The last modification time is now updated, so you would need to change\nit to \"my_contact_name +1m\" if you want it to be sent at the same time as your\noriginal intention, else it will take a TOTAL of 2 days, 3 hours, and 22\nminutes to send (+ notation is ALWAYS with respect to LAST MODIFICATION TIME)|\n\"always\", \"never\", \"only_if_ready\", \"conditional\"  \nWAKE_BUFFER_TIME| The buffer time in minutes added around wake events to\nprevent scheduling conflicts or overlaps.| 30 minutes  \nMAX_IDLE_EDIT_TIME| The maximum time allowed for editing a scheduled text\nbefore it is sent, formatted as a string with time units.| 30s  \n  \nTODO: Describe the above better or make a youtube video (probably easier this\nway).\n\n## About\n\nContinuously schedule iMessage or SMS texts with file attachments from your\nMac and iPhone.\n\n### Resources\n\nReadme\n\n### License\n\nGPL-3.0 license\n\nActivity\n\n### Stars\n\n3 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Python 70.3%\n  * AppleScript 29.3%\n  * Shell 0.4%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
