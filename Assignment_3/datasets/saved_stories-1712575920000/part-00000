{"aid": "39966477", "title": "April 8 solar eclipse will briefly limit solar electricity generation across US", "url": "https://www.eia.gov/todayinenergy/detail.php?id=61743", "domain": "eia.gov", "votes": 1, "user": "helsinkiandrew", "posted_at": "2024-04-08 05:30:51", "comments": 0, "source_title": "GitHub - Filimoa/open-parse: PDF Layout Chunking for LLMs", "source_text": "GitHub - Filimoa/open-parse: PDF Layout Chunking for LLMs\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nFilimoa / open-parse Public\n\n  * Notifications\n  * Fork 0\n  * Star 63\n\nPDF Layout Chunking for LLMs\n\nfilimoa.github.io/open-parse/\n\n### License\n\nMIT license\n\n63 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# Filimoa/open-parse\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n3 Branches\n\n6 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nFilimoaUpdate README.mdc2a7c4d \u00b7\n\n## History\n\n68 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| updated ci  \n  \n### docs\n\n|\n\n### docs\n\n| ocr support + semantic chunking  \n  \n### src\n\n|\n\n### src\n\n| ocr support + semantic chunking  \n  \n### .gitattributes\n\n|\n\n### .gitattributes\n\n| Update .gitattributes  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| download script  \n  \n### ARCHITECTURE.md\n\n|\n\n### ARCHITECTURE.md\n\n| README update  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| .  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md  \n  \n### mkdocs.yml\n\n|\n\n### mkdocs.yml\n\n| ocr support + semantic chunking  \n  \n### mypy.ini\n\n|\n\n### mypy.ini\n\n| checkpoint  \n  \n### setup.py\n\n|\n\n### setup.py\n\n| bumped version  \n  \n## Repository files navigation\n\nEasily chunk complex documents the same way a human would.\n\nChunking documents is a challenging task that underpins any RAG system. High\nquality results are critical to a sucessful AI application, yet most open-\nsource libraries are limited in their ability to handle complex documents.\n\nOpen Parse is designed to fill this gap by providing a flexible, easy-to-use\nlibrary capable of visually discerning document layouts and chunking them\neffectively.\n\nhttps://sergey-filimonov.nyc3.digitaloceanspaces.com/open-parse/unitable-\nparsing-sample.webp\n\n## Highlights\n\n  * \ud83d\udd0d Visually-Driven: Open-Parse visually analyzes documents for superior LLM input, going beyond naive text splitting.\n\n  * \u270d\ufe0f Markdown Support: Basic markdown support for parsing headings, bold and italics.\n\n  * \ud83d\udcca High-Precision Table Support: Extract tables into clean Markdown formats with accuracy that surpasses traditional tools.\n\n  * \ud83d\udee0\ufe0f Extensible: Easily implement your own post-processing steps.\n\n  * \ud83d\udca1Intuitive: Great editor support. Completion everywhere. Less time debugging.\n\n  * \ud83c\udfaf Easy: Designed to be easy to use and learn. Less time reading docs.\n\n## Example\n\n#### Basic Example\n\n    \n    \n    import openparse basic_doc_path = \"./sample-docs/mobile-home-manual.pdf\" parser = openparse.DocumentParser() parsed_basic_doc = parser.parse(basic_doc_path) for node in parsed_basic_doc.nodes: print(node)\n\n\ud83d\udcd3 Try the sample notebook here\n\n#### Semantic Processing Example\n\nChunking documents is fundamentally about grouping similar semantic nodes\ntogether. By embedding the text of each node, we can then cluster them\ntogether based on their similarity.\n\n    \n    \n    from openparse import processing, DocumentParser semantic_pipeline = processing.SemanticIngestionPipeline( openai_api_key=OPEN_AI_KEY, model=\"text-embedding-3-large\", min_tokens=64, max_tokens=1024, ) parser = DocumentParser( processing_pipeline=semantic_pipeline, ) parsed_content = parser.parse(basic_doc_path)\n\n\ud83d\udcd3 Sample notebook here\n\n## Requirements\n\nPython 3.8+\n\nDealing with PDF's:\n\n  * pdfminer.six Fully open source.\n\nExtracting Tables:\n\n  * PyMuPDF has some table detection functionality. Please see their license.\n  * Table Transformer is a deep learning approach.\n  * unitable is another transformers based approach with state-of-the-art performance.\n\n## Installation\n\n#### 1\\. Core Library\n\n    \n    \n    pip install openparse\n\nEnabling OCR Support:\n\nPyMuPDF will already contain all the logic to support OCR functions. But it\nadditionally does need Tesseract\u2019s language support data, so installation of\nTesseract-OCR is still required.\n\nThe language support folder location must be communicated either via storing\nit in the environment variable \"TESSDATA_PREFIX\", or as a parameter in the\napplicable functions.\n\nSo for a working OCR functionality, make sure to complete this checklist:\n\n  1. Install Tesseract.\n\n  2. Locate Tesseract\u2019s language support folder. Typically you will find it here:\n\n     * Windows: C:/Program Files/Tesseract-OCR/tessdata\n\n     * Unix systems: /usr/share/tesseract-ocr/5/tessdata\n\n  3. Set the environment variable TESSDATA_PREFIX\n\n     * Windows: setx TESSDATA_PREFIX \"C:/Program Files/Tesseract-OCR/tessdata\"\n\n     * Unix systems: declare -x TESSDATA_PREFIX= /usr/share/tesseract-ocr/5/tessdata\n\nNote: On Windows systems, this must happen outside Python \u2013 before starting\nyour script. Just manipulating os.environ will not work!\n\n#### 2\\. ML Table Detection (Optional)\n\nThis repository provides an optional feature to parse content from tables\nusing the state-of-the-art Table Transformer (DETR) model. The Table\nTransformer model, introduced in the paper \"PubTables-1M: Towards\nComprehensive Table Extraction From Unstructured Documents\" by Smock et al.,\nachieves best-in-class results for table extraction.\n\n    \n    \n    pip install \"openparse[ml]\"\n\nThen download the model weights with\n\n    \n    \n    openparse-download\n\n## Cookbooks\n\nhttps://github.com/Filimoa/open-parse/tree/main/src/cookbooks\n\n## Documentation\n\nhttps://filimoa.github.io/open-parse/\n\n## About\n\nPDF Layout Chunking for LLMs\n\nfilimoa.github.io/open-parse/\n\n### Topics\n\ndocument-parser table-detection table-detection-using-deep-learning document-\nstructure document-structure-analysis\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n63 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 6\n\nv0.5.0 (2024-04-07) Latest\n\nApr 8, 2024\n\n\\+ 5 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * Filimoa Sergey Filimonov\n  * github-actions[bot]\n\n## Languages\n\n  * Python 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
