{"aid": "40020926", "title": "Devin AI-first AI software engineer is a big lie?", "url": "https://gosummarize.com/youtube/@internetofbugs/debunking-devin-first-ai-software-engineer-upwork-lie-exposed", "domain": "gosummarize.com", "votes": 34, "user": "Xavier_L", "posted_at": "2024-04-13 06:17:42", "comments": 11, "source_title": "Debunking Devin: \"First AI Software Engineer\" Upwork lie exposed!", "source_text": "Debunking Devin: \"First AI Software Engineer\" Upwork lie exposed!\n\n# Debunking Devin: \"First AI Software Engineer\" Upwork lie exposed!\n\nInternet of Bugs2024-04-09\n\ndevin ai software engineer#devin ai demo#ai software engineer devin#ai\nsoftware engineer#ai software development#ai software engineer jobs#ai#ai\nhype#ai skeptic\n\n64K views|3 days ago\n\n\ud83d\udcab Short Summary\n\nThe video exposes the deception surrounding AI software engineer Devin,\nhighlighting the importance of transparency and truthfulness in marketing AI\nproducts. It discusses the risks of misinformation, the impact on trust in AI,\nand the need for clear communication in tech projects. The segment showcases\nDevin's debugging challenges and misleading practices, emphasizing the\ninefficiency of AI-generated solutions. It warns against blindly accepting\nonline information, urging skepticism and fact-checking. Overall, the video\ncalls for accountability, honesty, and critical thinking in the tech industry\nto ensure integrity and efficiency in AI development and deployment.\n\n\u2728 Highlights\n\n\ud83d\udcca Transcript\n\n\u2726\n\nAccusations of deception surrounding Devin, the world's first AI software\nengineer.\n\n00:56\n\nCompany exaggerated Devin's abilities, leading to hype and misinformation.\n\nLies were present in video descriptions and tweets, causing confusion and\nmisconceptions.\n\nEmphasis on the importance of truthfulness in marketing AI products and call\nfor accountability.\n\nVideo aims to debunk myths about Devin and advocate for transparency in the\ntech industry.\n\n\u2726\n\nMisleading claims about AI capabilities can lead to overestimation and trust\nissues.\n\n03:00\n\nOverestimation of AI abilities can result in issues like fake AI-generated\ncontent and lack of skepticism leading to bugs and hacks.\n\nA case on Upwork is discussed where a job request was not fulfilled due to\nlack of clear communication and understanding.\n\nClear communication and understanding are crucial in tasks involving AI to\navoid misunderstandings and dissatisfaction.\n\n\u2726\n\nFactors to consider when choosing cloud instances include size, type, memory,\nand customer preferences.\n\n05:59\n\nSpeed, cost, uptime, and data access are important aspects to take into\naccount during decision-making.\n\nEffective communication with customers, bosses, and stakeholders is crucial\nfor software engineers, as AI lacks this capability.\n\nRequest For Proposals (RFPs) on platforms like Upwork may lack a Q&A section,\nleading to potential issues.\n\nTo mitigate problems, it is recommended to propose assumptions, clarify the\nimpact of deviations on costs, bid low, and ensure customers understand the\nvalue and assumptions behind the bid.\n\n\u2726\n\nImportance of transparency in showcasing raw footage to verify claims.\n\n09:41\n\nExample of Devin not meeting customer requirements.\n\nNeed for companies to be transparent in their online claims.\n\nThe narrator mentions using Vultr instead of AWS due to interface issues.\n\nChanges made by Devin, such as updating the requirements.txt file to determine\ncode dependencies.\n\n\u2726\n\nDevin encounters errors while updating the code, showcasing his debugging\nskills.\n\n11:29\n\nA syntax error in 'inspect_results.py' was one of the errors encountered by\nDevin.\n\nDevin was praised for using print line debugging to track down data flows.\n\nThe process highlighted common debugging techniques like printf debugging.\n\nDevin's ability to troubleshoot and understand the code was commendable,\nshowcasing valuable skills in problem-solving and code analysis.\n\n\u2726\n\nDevin is misleading viewers by fixing its own code errors and creating the\nimpression of fixing customer-requested code.\n\n14:19\n\nThe README file from the customer's repository contains a similar file called\ninfer.py, which Devin uses as a guide.\n\nDevin's actions create a perception of fixing external code when it's actually\nfixing its own code.\n\nThis situation highlights the lack of justification in Devin's debugging\nprocess and the disconnect between perception and reality.\n\n\u2726\n\nDevin faces challenges with coding practices, resulting in messy solutions and\noutdated methods.\n\n17:25\n\nDebugging proves difficult due to complex issues, leading to errors causing\nmore problems.\n\nThe narrator replicates Devin's work with improvements, showcasing the\ninefficiency of Devin's methods.\n\nChallenges with software installations are encountered, but a quicker solution\nis found.\n\nThe narrator identifies and fixes an error in the dataset.py file related to\nthe torch module.\n\n\u2726\n\nSpeaker encountered an issue, found a solution through Google search, and made\nnecessary changes to the context.\n\n20:48\n\nComparison made between initial and final versions, highlighting use of\ndifferent versions of Torch.\n\nVideo output compared with Devin's, noting slight differences in color.\n\nDiscussion on timestamps in Devin's video, questioning the long duration to\ncomplete.\n\nMention of a strange command line error, showcasing inefficient AI behavior in\ndata processing.\n\n\u2726\n\nConcerns about the complexity and inefficiency of AI-generated code.\n\n21:55\n\nAI often creates convoluted and difficult-to-maintain solutions.\n\nSetting up the right environment and running two commands can easily replicate\nresults.\n\nConcerns raised about the practicality and integrity of AI-generated work,\nespecially on freelance platforms like Upwork.\n\nEmphasis on the importance of creating efficient AI products and questioning\nthe validity of praising AI-generated work.\n\n\u2726\n\nImportance of Verifying Information Before Sharing.\n\n24:37\n\nCaution is advised against blindly repeating and amplifying claims found\nonline without proper research.\n\nViewers are urged to be skeptical of information online and in the news,\nespecially regarding AI-related topics.\n\nPrevalence of misinformation and hype online is highlighted, emphasizing the\nneed to question everything.\n\nMaintaining a skeptical mindset and being cautious about accepting information\nat face value is advised.\n\n00:00 This is the Internet of Bugs, my\n\n00:01 name is Carl, and that is a lie.\n\n00:05 So this video is in three parts.\n\n00:08 First, we're going to talk about\n\n00:09 that claim.\n\n00:10 We're going to talk about what\n\n00:12 should have been done.\n\n00:14 What Devin actually did and how it\n\n00:17 did it and how well it did it.\n\n00:18 I have been a software professional\n\n00:21 for 35 years.\n\n00:22 I am not anti-AI, but I really am\n\n00:26 anti-hype and that's why I'm doing\n\n00:29 this.\n\n00:30 Devin was intro'd not quite a month\n\n00:32 ago now.\n\n00:32 And it was touted as the world's\n\n00:36 \"first AI software engineer.\"\n\n00:38 And I don't believe that it's the\n\n00:40 first software engineer and I\n\n00:41 already made a video about that.\n\n00:43 I'll put the links in the\n\n00:43 description.\n\n00:44 But today is about the specific\n\n00:46 claim\n\n00:47 that's the first line of the video\n\n00:49 description, which says \"watch Devin\n\n00:51 make money taking on messy Upwork\n\n00:53 tasks.\n\n00:54 That statement is a lie.\n\n00:56 You cannot watch that in the video.\n\n00:59 It does not happen in the video.\n\n01:00 It does not happen.\n\n01:01 What's worse though is that the\n\n01:04 hype and the fear, uncertainty and\n\n01:06 doubt from people repeating and\n\n01:08 embellishing on that claim because\n\n01:09 they're trying to get clicks or\n\n01:10 they're trying to go viral or they\n\n01:12 just want to be part of the zeitgeist.\n\n01:13 The hype around Devin in general is\n\n01:15 just crazy.\n\n01:16 And that statement seems to be what\n\n01:18 a lot of it is is pinned on. For the\n\n01:19 record, personally,\n\n01:20 I think generative AI is cool.\n\n01:22 I use GitHub co-pilot on a regular\n\n01:24 basis.\n\n01:25 I use ChatGPT, llama 2, Stable\n\n01:27 Diffusion.\n\n01:28 All that kind of stuff is cool, but\n\n01:30 lying about what these tools can do\n\n01:32 does everyone a disservice.\n\n01:34 So Devin does some impressive\n\n01:35 things.\n\n01:36 And I wish the company had just\n\n01:38 been truthful and just taken the\n\n01:41 win, but they didn't.\n\n01:43 And they had to pretend that it did\n\n01:45 a lot more than it actually did.\n\n01:47 Now, I don't want to take anything\n\n01:49 away from the engineers that\n\n01:51 actually built Devin.\n\n01:52 I think Devin is impressive in many\n\n01:53 ways and I'm especially not trying\n\n01:55 to pick on the guy that's in the\n\n01:57 video.\n\n01:58 The lies are not in the video\n\n02:00 itself.\n\n02:00 They're in the description and they're\n\n02:02 in the tweets that the company made\n\n02:03 point to it.\n\n02:04 And then they're in a lot of places\n\n02:06 and people that have repeated that\n\n02:08 lie over and over again.\n\n02:09 It shouldn't be okay.\n\n02:11 Companies should just not be\n\n02:12 allowed to lie without getting\n\n02:13 called out on it.\n\n02:14 And people shouldn't repeat things\n\n02:17 they heard on the Internet without\n\n02:19 checking for themselves.\n\n02:20 I realize that's tilting at windmills,\n\n02:23 but I'm going to die on that hill.\n\n02:25 Since nobody else that I've seen\n\n02:28 seems to be explaining why this is\n\n02:30 a lie.\n\n02:31 I guess if it's going to get done,\n\n02:34 I'm going to have to do it.\n\n02:36 So here I go. Before you think this\n\n02:38 is harmless,\n\n02:39 understand this kind of lie does\n\n02:40 real damage.\n\n02:41 You're watching this.\n\n02:43 You're probably at least somewhat\n\n02:44 technical.\n\n02:45 Keep in mind that there are a lot\n\n02:46 of people out there that see\n\n02:48 headlines don't read the articles\n\n02:50 that are not technical.\n\n02:52 And what these lies do is they\n\n02:54 cause non-technical people to\n\n02:57 believe that AI is far more capable\n\n02:59 than it is at the moment.\n\n03:00 And that causes all kinds of\n\n03:02 problems.\n\n03:03 People end up being a lot less\n\n03:05 skeptical of AI than they should be.\n\n03:08 They're a lot less skeptical of the\n\n03:10 output of AI than they really\n\n03:12 should be.\n\n03:12 And taking AI at face value these\n\n03:14 days is getting a lot of people in\n\n03:15 trouble.\n\n03:16 Just Google \"AI lawyer fake cases\" or\n\n03:19 \"AI fake scientific papers.\"\n\n03:22 And those are just the prominent ones.\n\n03:23 And this hurts real software\n\n03:25 professionals too, because there are\n\n03:27 going to be folks that are going to\n\n03:29 trust the code that AIs generate.\n\n03:30 And that just means more bugs on\n\n03:32 the Internet and there are already\n\n03:34 way too many already.\n\n03:35 It's already a mess.\n\n03:37 They're already too many exploits.\n\n03:38 They're already too many hacks.\n\n03:40 And the more bad code that gets out\n\n03:42 there, the worse the ecosystem\n\n03:44 becomes for everyone.\n\n03:45 Enough of that. On to section two.\n\n03:47 What was the job that Devin was\n\n03:48 supposed to have done?\n\n03:49 So this is the beginning of the\n\n03:51 video or early in the video.\n\n03:53 Note that in the bottom left hand\n\n03:54 corner of your screen, I have stuck\n\n03:57 the time code of every frame that I'm\n\n03:59 going to be breaking down for you.\n\n04:01 So this is 2.936 seconds into the\n\n04:05 video.\n\n04:06 So you can go look yourself if you're\n\n04:08 curious about any particular thing\n\n04:09 or want to know the context around\n\n04:10 something that I'm talking about.\n\n04:12 This is the job that Devin\n\n04:13 supposedly did on Upwork.\n\n04:15 We'll talk about it in a minute.\n\n04:17 First off, look at the left of your\n\n04:18 screen at the top.\n\n04:19 Notice that they searched for this.\n\n04:21 So this is not some random job.\n\n04:23 This is not \"Devin can do any job on\n\n04:25 Upwork,\"\" right?\n\n04:26 They cherry picked this.\n\n04:27 That isn't deceptive necessarily.\n\n04:31 You would kind of expect them to.\n\n04:33 But keep in mind that what that\n\n04:34 means is chances are Devin is\n\n04:37 actually worse at most jobs than\n\n04:39 Devin turned out to be on this one,\n\n04:41 which wasn't great.\n\n04:44 So zooming into that particular\n\n04:46 request.\n\n04:47 There at the bottom, that's what\n\n04:52 the customer actually wanted.\n\n04:55 \"I want to make inferences with this\n\n04:57 repository.\"\"\n\n04:59 \"Your deliverable is detailed\n\n05:00 instructions.\"\"\n\n05:01 I'm not going to talk about the\n\n05:02 estimate to complete the job thing.\n\n05:04 Devin didn't do that.\n\n05:06 That's fine.\n\n05:07 I'm not worried about that.\n\n05:08 But look at this.\n\n05:10 This is what Devin was actually\n\n05:12 told.\n\n05:14 This is what was copied and pasted\n\n05:15 into Devin.\n\n05:15 \"I'm looking to make inferences with\n\n05:17 this model in the repository.\n\n05:19 Here's the repository.\n\n05:20 Please figure it out.\"\n\n05:21 Okay, back to the job.\n\n05:24 \"Your deliverable will be detailed\n\n05:26 instructions on how to do it in EC2\n\n05:29 on AWS.\"\n\n05:29 \"Please figure it out\" is not the\n\n05:31 same as \"detailed instructions on how\n\n05:33 to do it in an EC2 instance in AWS.\"\n\n05:35 For the record, this at the end of\n\n05:38 the video is the report that Devin\n\n05:40 generated.\n\n05:40 There is nothing in that at all\n\n05:42 about what the customer was\n\n05:44 actually asking for.\n\n05:45 So what should the results of this\n\n05:47 job actually look like?\n\n05:50 To start with, this is what you\n\n05:53 really need to know in order to be\n\n05:55 able to figure out how to do this.\n\n05:57 You're going to have to have some\n\n05:58 kind of instance in the cloud.\n\n05:59 You need to figure out what size,\n\n06:00 type, how much memory, all that\n\n06:01 kind of stuff.\n\n06:02 You need to find out from the\n\n06:03 customer.\n\n06:04 Would you rather have one that runs\n\n06:06 faster and is more expensive?\n\n06:08 Or would you rather one that's\n\n06:09 cheaper that runs slower?\n\n06:10 Is this going to be something that's\n\n06:11 always going to be up and you can\n\n06:13 just throw stuff at it whenever and\n\n06:14 have it give you an answer?\n\n06:15 Or are you going to launch it, run\n\n06:16 it and then turn it off to make to\n\n06:18 save money?\n\n06:18 How are you going to get the stuff\n\n06:20 you want to make inferences on?\n\n06:22 How are you going to take the\n\n06:23 images that you want to analyze?\n\n06:25 How are you going to get that onto\n\n06:26 the server?\n\n06:27 You want to do a web interface for\n\n06:28 that?\n\n06:28 You can SSH them.\n\n06:29 You can put them in S3 bucket.\n\n06:31 You know, how are you going to get\n\n06:32 access to the output of that?\n\n06:33 These are all questions that you\n\n06:34 need to know, right?\n\n06:35 This is going back to another video\n\n06:38 that I made, the part of the job of\n\n06:40 a software developer that the AIs\n\n06:43 are bad at.\n\n06:44 The hard part, the important part,\n\n06:46 the difficult part, the time\n\n06:48 consuming part of being a software\n\n06:49 engineer is communication with the\n\n06:52 customer, with your boss, with the\n\n06:54 stakeholders.\n\n06:54 Figuring out what actually needs to\n\n06:56 get done, going back and forth,\n\n06:57 saying, \"okay, this would be a lot\n\n06:59 easier.\n\n07:00 How about we do that?\"\n\n07:01 Those are the kinds of things that\n\n07:02 AI just isn't capable of doing, and\n\n07:03 those are some of the most\n\n07:04 important things that we do.\n\n07:06 This just starts right off as AI\n\n07:08 doing the wrong thing.\n\n07:09 Unfortunately, this is Upwork.\n\n07:11 So just for those of you that\n\n07:12 actually are ever going to be in\n\n07:14 this situation, Requests For\n\n07:16 Proposals like this are are bad.\n\n07:19 If you can avoid doing them, avoid\n\n07:21 it. Competent Request For Proposals\n\n07:22 process is going to have a Q&A\n\n07:24 section.\n\n07:25 So they tell you \"This is what we\n\n07:26 want.\"\"\n\n07:26 You send them questions other\n\n07:27 vendors send them questions.\n\n07:29 They answer all the questions, they\n\n07:30 send out the answers to everybody,\n\n07:31 and then the bidding happens.\n\n07:32 Since we can't do that in Upwork\n\n07:34 because it's not set up that way,\n\n07:35 the next best thing, which isn't\n\n07:36 actually a good thing, but the next\n\n07:38 best thing is you write down your\n\n07:39 questions.\n\n07:39 You pick the answer that will cause\n\n07:42 the cheapest amount of work, right?\n\n07:44 The least amount of work for you.\n\n07:46 Then at the top of your proposal,\n\n07:47 you say, \"okay, here are all the\n\n07:48 assumptions I'm making.\n\n07:49 If any of these assumptions turn\n\n07:51 out not to be true, that's negotiable,\n\n07:53 but it means that the cost is going\n\n07:54 to go up.\" Because you want to bid as\n\n07:56 low as you can, but you want to\n\n07:57 make sure that the customer\n\n07:58 understands\n\n07:59 that you're bidding that value with\n\n08:01 these assumptions.\n\n08:02 And if any of those assumptions,\n\n08:03 they want it done differently, they're\n\n08:05 going to have to pay more.\n\n08:05 It's not a good bidding process,\n\n08:06 but if you're going to have to do\n\n08:07 that kind of bidding process, that's\n\n08:08 how you do it.\n\n08:09 So, a deliverable for this\n\n08:11 particular job should contain what\n\n08:13 kind of cloud instance type to use,\n\n08:15 what kind of operating system and\n\n08:17 image to use.\n\n08:18 How do you set up the install\n\n08:19 environment?\n\n08:20 So CUDA, Apex, PyTorch, don't worry\n\n08:22 about if you don't know what any of\n\n08:23 those are.\n\n08:23 It's not really important for this\n\n08:25 purpose.\n\n08:26 How to install that repo, so that's\n\n08:28 a four year old repo.\n\n08:30 You're either going to need to\n\n08:31 update that repo for modern Python\n\n08:33 and modern libraries, or you're\n\n08:35 going to have to explain how to\n\n08:37 install a four year old or an older\n\n08:39 environment.\n\n08:39 One of those two things is going to\n\n08:40 have to happen.\n\n08:41 You're going to have to explain to\n\n08:42 the customer how the data should be\n\n08:43 got onto the instance, how they're\n\n08:45 going to get their output off the\n\n08:46 instance, all that kind of stuff.\n\n08:47 I actually reproduced what Devin\n\n08:49 did myself.\n\n08:50 We'll talk more about that later.\n\n08:51 This is the actual instance size\n\n08:54 that I used.\n\n08:56 I used a company called Vultr\n\n08:57 instead of AWS because AWS's\n\n08:59 interface is a mess and it wouldn't\n\n09:01 make good videos.\n\n09:02 And on top of that, by the time\n\n09:03 this video got edited and uploaded,\n\n09:05 probably the new version of\n\n09:07 something would have been released\n\n09:09 and I would have the numbers wrong.\n\n09:10 So this is just it's a lot more\n\n09:11 stable.\n\n09:12 It's easier for this job for the\n\n09:14 customer.\n\n09:15 I would have actually done it on\n\n09:16 AWS.\n\n09:16 There's no... we have no idea what\n\n09:18 kind of image Devin used.\n\n09:19 They didn't tell us anything about\n\n09:20 it.\n\n09:22 If you are a masochist, there is a\n\n09:24 link for the whole and I'll put it\n\n09:26 now in the description for the\n\n09:27 whole uncut version of me spending\n\n09:30 35 minutes and 55 seconds or\n\n09:32 however long it took actually\n\n09:34 reproducing what Devin ended up\n\n09:36 doing.\n\n09:37 So if you have no life, you're\n\n09:40 welcome to watch that.\n\n09:41 I think transparency is important.\n\n09:44 It's really boring to watch, but it's\n\n09:46 important and I wish that the\n\n09:47 company that made Devin and anybody\n\n09:49 else that's making these kinds of\n\n09:50 claims on the Internet would\n\n09:51 actually just post\n\n09:52 \"Here's the raw footage of what\n\n09:54 actually happened\" so that we can\n\n09:55 verify their claims if we need to.\n\n09:57 All right, so on the next section\n\n09:59 given that we know that Devin didn't\n\n10:02 do what the customer asked and\n\n10:05 Devin's report did not have any of\n\n10:06 the stuff that the customer wanted\n\n10:08 and that Devin didn't actually get\n\n10:09 paid for any of this.\n\n10:11 What did Devin actually do if it\n\n10:13 didn't make money, what did it make\n\n10:15 and how good a job of that did it\n\n10:16 do?\n\n10:17 So here's a screenshot from the\n\n10:19 video.\n\n10:20 This is the repo in question.\n\n10:22 We'll come back to screens like\n\n10:24 this later.\n\n10:25 This is the first thing that Devin\n\n10:28 really changed.\n\n10:30 So there's a thing called a\n\n10:31 requirements.txt file.\n\n10:32 It determines what version of\n\n10:34 dependent libraries your code is\n\n10:36 going to run.\n\n10:37 And it had to change some things\n\n10:39 because the the libraries that this\n\n10:41 repo originally used from four\n\n10:44 years ago, some of them aren't\n\n10:45 downloadable anymore because they're\n\n10:47 so old.\n\n10:48 So something had to change.\n\n10:50 Here it says that Devin is actually\n\n10:52 updating the code.\n\n10:54 I guess that's kind of arguably\n\n10:57 true.\n\n10:58 I would say it's more a\n\n10:59 configuration file than changing\n\n11:01 the code, but I'll allow it.\n\n11:04 It is really cool that Devin can do\n\n11:06 this if what the tool did was just\n\n11:08 change all of the requirements so\n\n11:10 they all lined up,\n\n11:11 that would be something that would\n\n11:12 save me time.\n\n11:12 So that would be a cool thing to do.\n\n11:14 So it's good that you can do this.\n\n11:17 I don't know that I'd call it code,\n\n11:18 but it's a very, very small part of\n\n11:20 what actually needs to get done\n\n11:21 instead of what the customer asked\n\n11:23 for, which is basically \"I want to\n\n11:24 be able to make my own inferences.\"\"\n\n11:26 Devin was told just using the\n\n11:29 sample data is fine.\n\n11:30 So that's what I did on my reproducing\n\n11:32 what Devin did.\n\n11:34 Normally it should be more\n\n11:35 complicated than that, but that's\n\n11:37 what we're going to show that Devin\n\n11:38 actually did.\n\n11:40 Okay, so Devin is fairly early on\n\n11:43 hits an error.\n\n11:45 I did not hit this error and you'll\n\n11:46 see why in a second.\n\n11:48 So zooming in, here's this command\n\n11:51 line error.\n\n11:52 So here at the top.\n\n11:54 We have this error with\n\n11:57 image.open\n\n12:03 \"file not found no such file\n\n12:05or directory.\"\"\n\n12:05 So this error is in a code file\n\n12:08 called \"visualize_detections.py\"\n\n12:10 and the reason that I didn't run\n\n12:11 into this problem is because there\n\n12:13 is no file called visualize_detections.py\n\n12:17 in that repository.\n\n12:18 I don't know where that file came\n\n12:21 from, but more about that in a sec.\n\n12:23 So back to that command line.\n\n12:25 If you zoom in on the other part of\n\n12:26 that window, you see this.\n\n12:28 So Devin is echoing a bunch of\n\n12:30 stuff into a file called inspect\n\n12:32 results.py\n\n12:33 and then it's running Python on it\n\n12:34 and it's getting a syntax error.\n\n12:36 You can't put backslash 'n' in a\n\n12:39 Python file.\n\n12:40 It doesn't work that way.\n\n12:42 Echo doesn't work that way.\n\n12:43 None of this works that way.\n\n12:45 This is just this is just\n\n12:46 nonsensical.\n\n12:47 This is the kind of thing that you\n\n12:48 might do as a human because you're\n\n12:51 not paying attention.\n\n12:51 And then you go, oh, yeah, I need\n\n12:53 to change the way I did that.\n\n12:55 But what seems to be happening is\n\n12:58 Devin is creating files that have\n\n13:01 errors in them\n\n13:02 and then it's fixing the errors.\n\n13:03 So here the video says that Devin\n\n13:05 is actually \"doing print line\n\n13:06 debugging\"\" and that's cool.\n\n13:08 That's something a lot of us do.\n\n13:09 You know, there are always times\n\n13:10 that printf debugging or print\n\n13:11 line debugging ends up being useful.\n\n13:13 So it's cool that Devin can do that\n\n13:15 in at least some circumstances.\n\n13:17 But here's another error I didn't\n\n13:18 see and Devin is coming in trying\n\n13:20 to figure this out.\n\n13:21 The commentary here says \"Devin is\n\n13:23 adding statements to track down\n\n13:24 these data flows until Devin\n\n13:25 understands.\"\"\n\n13:26 Now, I'm okay with that.\n\n13:28 I don't know if the word\n\n13:29 \"understands\" there is technically\n\n13:30 true.\n\n13:31 I don't know that Devin actually\n\n13:32 \"understands\" anything.\n\n13:33 I would doubt it, but we anthropomorphize\n\n13:36 stuff like that all the time and it's\n\n13:38 a handy way of using language.\n\n13:39 So I'm not going to give them a\n\n13:41 hard time for that.\n\n13:42 But that said, let's look at what\n\n13:43 Devin's actually doing here.\n\n13:45 So zooming in on this, we've got\n\n13:48 this weird loop that it's doing.\n\n13:51 It's going through this file and\n\n13:52 reading stuff into a buffer.\n\n13:53 So this is the update_image_ids.py\n\n13:56 file.\n\n13:56 And again, this file does not exist\n\n14:00 anywhere in the repository that the\n\n14:02 customer wanted us to use.\n\n14:03 In fact, I searched all of GitHub\n\n14:05 and there are only two places that\n\n14:08 a file that this name exists at all.\n\n14:09 The reason there are three on the\n\n14:10 screen there is because one of them\n\n14:11 is a fork of the other.\n\n14:12 And none of them look anything like\n\n14:14 the one that Devin is using.\n\n14:15 So I don't know where this came\n\n14:16 from.\n\n14:17 We don't have any idea.\n\n14:19 But the problem is Devin is here\n\n14:24 debugging a file and that file it\n\n14:27 created and it's not in the repo at\n\n14:30 all.\n\n14:30 This is pretty insidious.\n\n14:32 So this gives the person who's\n\n14:33 viewing the video who's not paying\n\n14:35 that much attention who didn't have\n\n14:36 time or take the effort to look at\n\n14:38 the repo.\n\n14:38 It gives that viewer the impression\n\n14:41 that Devin is finding errors in the\n\n14:43 repository that the Upwork user\n\n14:46 asked us to look at.\n\n14:49 And fixing the errors in the\n\n14:50 repository.\n\n14:51 That's not the case.\n\n14:54 Devin is generating its own errors\n\n14:56 and then debugging and fixing the\n\n14:59 errors that it made itself.\n\n15:01 That's not what it seems like Devin\n\n15:04 would be doing.\n\n15:05 It's not what Devin is implied to\n\n15:07 be doing.\n\n15:07 It's not what many people who have\n\n15:10 written articles and posted videos\n\n15:14 about Devin have thought Devin was\n\n15:16 doing.\n\n15:18 But in fact, Devin isn't fixing\n\n15:20 code that it found on the Internet.\n\n15:22 Devin isn't fixing code that a\n\n15:24 customer asked it to fix.\n\n15:26 Devin is fixing code that it\n\n15:28 generated with errors in it.\n\n15:29 And that's not at all what most of\n\n15:32 the people who watch this video\n\n15:34 will think that it's doing.\n\n15:37 What's worse is that there's no\n\n15:39 reason for this.\n\n15:40 This is the README file from that\n\n15:42 repo.\n\n15:43 I told you we'd come back to this\n\n15:44 page.\n\n15:45 There is a file called infer.py\n\n15:47 that is in that repo and it does\n\n15:50 exactly what Devin does in this\n\n15:52 video.\n\n15:53 The README tells you that it\n\n15:55 does it.\n\n15:56 It tells you how to use it.\n\n15:58 There on the right.\n\n15:59 there's even a little button that\n\n16:01 you can click on where you can copy\n\n16:03 the whole command line and paste it\n\n16:05 in your window and hit return.\n\n16:06 And if you watch the long video\n\n16:08 where I reproduce the result, that's\n\n16:10 exactly what I did.\n\n16:11 I copied and pasted things, changed\n\n16:12 the path names and hit return and it\n\n16:13 worked.\n\n16:14 I don't think the person that wrote\n\n16:16 this repository, detecting road\n\n16:17 damage,\n\n16:18 I don't think the person that wrote\n\n16:20 that could have made it any easier\n\n16:21 to understand how we were supposed\n\n16:23 to use it.\n\n16:23 But Devin didn't seem to be able to\n\n16:25 figure that out.\n\n16:26 And so Devin had to create this\n\n16:29 other thing that was a mess.\n\n16:31 This code right here, this reading\n\n16:33 into a buffer thing.\n\n16:35 It's bad.\n\n16:38 Right? This is the way we had to\n\n16:40 read files in decade ago in 'C' and\n\n16:42 really lower level languages.\n\n16:44 Python has much better ways to\n\n16:46 handle this.\n\n16:46 As Devin is figuring out, this kind\n\n16:48 of thing is hard to debug.\n\n16:49 It's complicated.\n\n16:50 It's difficult, easy to get off by\n\n16:52 a little bit, which is I think what\n\n16:54 Devin is trying to debug here.\n\n16:55 I'm not exactly sure what was going\n\n16:56 wrong, but that's what it seems\n\n16:57 like\n\n16:58 is going wrong\n\n16:58 is it got off by some characters\n\n17:00 and so the JSON didn't parse right?\n\n17:02 But I mean, this is not how you\n\n17:04 would do it these days.\n\n17:05 This is not how you would do it in\n\n17:06 Python.\n\n17:07 This is not something that I would\n\n17:09 accept in a code review from a\n\n17:10 junior developer.\n\n17:11 This is causing more problems than\n\n17:13 it actually solves.\n\n17:15 This is bad.\n\n17:15 It's just bad.\n\n17:16 In addition, there is a real error\n\n17:19 in the repo and Devin didn't find\n\n17:22 it or fix it.\n\n17:23 Devin just created a bunch of other\n\n17:24 stuff.\n\n17:25 So like I said, I replicated Devin's\n\n17:27 work myself.\n\n17:28 There's the link.\n\n17:29 Again, it'll be in the description.\n\n17:31 I used torch 2.2.2, which is a much\n\n17:34 more current version than the one\n\n17:35 that Devin said.\n\n17:37 If you go back to that requirements.txt\n\n17:39 file, the hard part of what I did\n\n17:44 was getting a software package\n\n17:45 called Apex installed with the\n\n17:47 right version of CUDA, which is\n\n17:49 NVIDIA's driver stuff.\n\n17:50 It was a pain.\n\n17:51 I ended up having to build it from\n\n17:52 source, which took about 16 minutes\n\n17:53 of the 36 minutes that I was\n\n17:54 working on the thing.\n\n17:55 So there probably might have been\n\n17:57 an easier way to do it, but for a\n\n17:58 16 minute build time, that just\n\n18:00 seemed to be the most expedient way.\n\n18:04 I did remove the hard coding from\n\n18:05 the requirements.txt file. Devin\n\n18:06 just changed some of the numbers.\n\n18:08 I think my way is better, but\n\n18:09 either way, technically is okay.\n\n18:11 See in the next slides, there is\n\n18:12 actually one error that needed to\n\n18:14 get fixed.\n\n18:15 And I'll show you what it is.\n\n18:15 It took me about 36 minutes, 35\n\n18:18 minutes and 55 seconds, I think to\n\n18:20 actually do what I did.\n\n18:21 That will come important later when\n\n18:22 we talk about how long Devin took.\n\n18:24 Okay, so this is a screenshot from\n\n18:26 that long video that I posted.\n\n18:28 It's unlisted, but I gave you a\n\n18:30 link to it if you want to watch the\n\n18:31 whole thing zooming in.\n\n18:32 So this is where the actual error\n\n18:34 was.\n\n18:34 It's in a file called dataset.py\n\n18:37 on line 33.\n\n18:38 And the error is that the module\n\n18:40 called torch has no attribute\n\n18:41 called '_six'.\n\n18:43 I did a Google search.\n\n18:46 I found this comment on a GitHub\n\n18:48 issue.\n\n18:48 I changed the line of that code the\n\n18:50 way that issue told me that would\n\n18:53 fix it.\n\n18:53 It did fix it.\n\n18:55 I put in a link to show where it\n\n18:56 was that I got the idea to do that.\n\n18:59 Because I'm not an expert in\n\n19:01 exactly how Apex works.\n\n19:02 It was good that I found somebody\n\n19:04 on the Internet entire time on task\n\n19:06 that it took me to do that was like\n\n19:08 a minute and seven seconds or\n\n19:10 something like that is all it took\n\n19:11 me to fix that error.\n\n19:12 It was a quick Google search.\n\n19:14 So here is the change that I made\n\n19:16 in context.\n\n19:17 So this is a diff between what I\n\n19:19 started with and what I ended up\n\n19:20 with.\n\n19:21 This is a diff of the requirements\n\n19:24 dot txt file.\n\n19:25 So the torch 1.4.0 is what it\n\n19:28 started with.\n\n19:28 I use the most recent version of\n\n19:30 torch, which is 2.2.2 or at least a\n\n19:32 relatively recent one.\n\n19:34 There might have been a new one\n\n19:35 released in the last hour for all\n\n19:36 I know, a more recent one.\n\n19:38 And then here is, on the right, one\n\n19:40 of the last screens from Devin's\n\n19:41 video and on the left,\n\n19:43 there is my video, the final output.\n\n19:46 They were both more or less the\n\n19:47 same.\n\n19:48 My box is yellow.\n\n19:49 Their box is red.\n\n19:50 I don't know which one might be\n\n19:51 better or worse, but it only took\n\n19:53 me 36 minutes.\n\n19:54 Devin took slightly longer than\n\n19:55 that.\n\n19:56 So here is the early part of the\n\n19:58 Devin video.\n\n19:59 There's a timestamp at 3:25 PM on\n\n20:03 March the 9th.\n\n20:05 Later in the video, you see a\n\n20:08 timestamp from 9:41 PM on March the\n\n20:11 9th.\n\n20:11 So we're looking at six hours and\n\n20:13 20 minutes.\n\n20:14 I have no idea what would have been\n\n20:16 happening for six hours and 20\n\n20:17 minutes.\n\n20:18 Hopefully like Devin was waiting on\n\n20:20 people for a while from that\n\n20:21 because it doesn't make any sense\n\n20:23 that it would take that long.\n\n20:24 That's just crazy because it like I\n\n20:26 said, it took me a little over half\n\n20:27 an hour.\n\n20:27 There's another one and I'm\n\n20:29 assuming this is just like they\n\n20:32 left it overnight\n\n20:32 and then came back to it or\n\n20:33 something.\n\n20:33 But there's another one from the\n\n20:35 next day from 6 PM and hopefully it\n\n20:38 wasn't doing stuff\n\n20:39 over that whole time.\n\n20:40 So I'm assuming it just took six\n\n20:41 hours, but it could have taken, you\n\n20:42 know, day and two hours.\n\n20:44 That's just... I don't know why it\n\n20:45 would have taken that long.\n\n20:46 It's not efficient.\n\n20:48 It's not what I would call\n\n20:49 competent. A little weird command line\n\n20:51 use popped up in one of the screens\n\n20:53 when you frame by frame it.\n\n20:54 So here's a weird error.\n\n20:55 Let me zoom in on that head -n 5\n\n20:57 5 results.json | tail -n 5\n\n20:58 -n 5.\n\n20:59 So what that says is take the first\n\n21:02 five lines of this JSON file and\n\n21:04 then take the last five lines\n\n21:07 of the first five lines.\n\n21:08 There's no reason to do that.\n\n21:10 No human would do that.\n\n21:12 And it's the kind of thing that AI\n\n21:13 does that just doesn't make any\n\n21:15 sense that when you come around\n\n21:16 later and you look at it and you're\n\n21:17 like, \"OK, you're trying to debug\n\n21:19 what's going on.\"\"\n\n21:20 And there's all this extraneous\n\n21:21 stuff all over the place and it\n\n21:22 makes it really, really\n\n21:23 hard to figure out what the point\n\n21:25 was.\n\n21:25 In fact, the right way to do this\n\n21:27 is `head -5 results.json`.\n\n21:29 The `-n` is redundant.\n\n21:30 You can just say `-5`. That\n\n21:32 extra stuff in there is for no good\n\n21:34 reason.\n\n21:34 And it's the kind of thing that\n\n21:36 just makes it way more complicated\n\n21:38 when AI generates stuff right now.\n\n21:40 Hopefully that will get better.\n\n21:41 But at the moment AI generates a\n\n21:43 lot of stupid stuff.\n\n21:45 It does things in Python the way\n\n21:46 you would do it in 'C' when no one\n\n21:49 would do it that way in Python\n\n21:50 these days.\n\n21:51 Even when it gets things to work\n\n21:52 right now, the state of the art of\n\n21:54 generative AI\n\n21:55 is it just does a bad, complicated,\n\n21:58 convoluted job that just makes more\n\n22:01 work for everybody else\n\n22:02 if you're ever going to try to\n\n22:03 maintain it or fix a bug in it or\n\n22:05 update it to a new version\n\n22:07 or anything like that any time in\n\n22:08 the future.\n\n22:08 Let's look at the list of things\n\n22:10 that Devin thought it needed to do.\n\n22:13 If you look at the left there,\n\n22:15 there's like this series of checkboxes.\n\n22:17 I'm going to run through some pages.\n\n22:18 Exactly what they are.\n\n22:18 Isn't really important, but just\n\n22:19 look how many there are.\n\n22:20 This list of checkboxes gives the\n\n22:22 impression that Devin did something\n\n22:25 complicated or difficult.\n\n22:26 And when you're watching the video\n\n22:28 and you see all this scroll by, you're\n\n22:29 like, you know, wow,\n\n22:30 Devin must have done a bunch of\n\n22:31 stuff.\n\n22:31 All you needed to do, all I had to\n\n22:33 do to replicate Devin's results was\n\n22:36 get an environment set up\n\n22:37 on a cloud instance with the right\n\n22:38 hardware and run literally two\n\n22:40 commands with the right paths.\n\n22:42 All of this stuff makes it look\n\n22:44 like Devin did a bunch of work.\n\n22:45 It makes it look like Devin\n\n22:47 accomplished a lot of stuff.\n\n22:48 And really, all you had to do was\n\n22:50 run two commands once you set the\n\n22:51 environment up.\n\n22:52 None of those code fixes are\n\n22:53 relevant at all because it's all\n\n22:54 code that Devin generated itself.\n\n22:56 And at the end, the person that was\n\n22:59 narrating the video says, \"Good Job,\n\n23:01 Devin.\"\"\n\n23:01 Now, what Devin actually got done\n\n23:05 was kind of cool for an AI.\n\n23:08 If you had asked me a couple of\n\n23:09 months ago, what an AI would have\n\n23:12 done given that problem.\n\n23:15 I would have guessed an output that's\n\n23:17 worse than what Devin actually did.\n\n23:20 So it is honestly, as far as I'm\n\n23:21 concerned, kind of impressive.\n\n23:23 But in the context of what an Upwork\n\n23:26 job should have been, and\n\n23:28 especially in the context of a\n\n23:30 bunch\n\n23:31 of people saying that Devin is\n\n23:33 \"taking jobs off of Upwork and doing\n\n23:35 them,\"\" and especially in the\n\n23:36 context of the company saying that\n\n23:38 this video will let us watch Devin\n\n23:41 get paid for doing work,\n\n23:42 which is, again, just a lie.\n\n23:44 I don't know that saying \"Good Job.\"\n\n23:46 I don't know that I would agree\n\n23:47 with that.\n\n23:48 So look, if you make AI products,\n\n23:50 that's great.\n\n23:51 AI is good.\n\n23:53 I use it a lot.\n\n23:54 I want it to get better.\n\n23:55 Please make products.\n\n23:58 Just please tell people the truth\n\n24:00 about them.\n\n24:01 If you're a journalist or a blogger\n\n24:04 or an influencer, just please don't\n\n24:07 blindly repeat and\n\n24:08 amplify things that people say on\n\n24:10 the Internet, things that you read\n\n24:12 on the Internet without\n\n24:15 doing some due diligence, without\n\n24:16 looking to see if they're actually\n\n24:17 true.\n\n24:18 If you don't understand if they're\n\n24:19 true, if you can't figure out on\n\n24:21 your own if they're\n\n24:21 true, ask someone or just don't\n\n24:23 amplify it.\n\n24:24 Because there are a lot of people\n\n24:25 that are never going to look at the\n\n24:27 original source.\n\n24:28 They're just going to see the\n\n24:28 headline and they're going to think\n\n24:29 that that's true.\n\n24:30 That's unfortunate, but that's just\n\n24:32 the way we are.\n\n24:32 And if you're just someone who's\n\n24:34 using the Internet now, please, for\n\n24:36 the love of all that's\n\n24:37 holy, be skeptical of everything\n\n24:39 you see on the Internet or anything\n\n24:41 you see on the news,\n\n24:42 especially anything that might\n\n24:44 possibly be AI related.\n\n24:45 There's so much hype out there and\n\n24:47 there's so much stuff that people\n\n24:49 are bouncing around and\n\n24:51 saying to each other is true.\n\n24:52 That's just not true.\n\n24:53 So please just don't forget to be\n\n24:56 skeptical.\n\n24:57 It's important.\n\n24:58 Okay, so that's what I have for\n\n25:00 this video. Until next time,\n\n25:02 Always keep in mind that the\n\n25:04 Internet is full of Bugs and anyone\n\n25:06 who says differently is trying\n\n25:07 to sell you something.\n\n25:08 Have a good one, everybody.\n\n\ud83c\udfa5 Related Videos\n\n### a16z Podcast | Things Come Together -- Truths about Tech in Africa\n\n### a16z Podcast | The Infrastructure of Total Health\n\n### The Robot Lawyer Resistance with Joshua Browder of DoNotPay\n\n### a16z Podcast | Bots and Beyond\n\n### Design Sprints as a Tool for Organizational Change\n\n### a16z Podcast | Valuing Today's Fast-Growing Software Companies\n\n\ud83d\udd25 Recently Summarized Examples\n\n### Making a Macintosh Studio\n\n### Stereotypes: The Truth Behind Cultural Clich\u00e9s\n\n### How our AI Startup Grew 60x After a Pivot | Raza Habib, Jordan Burgess of Humanloop\n\n### Gaza: Fighting continues despite UN Security Council resolution calling for ceasefire | BBC News\n\n### Human Genetic Compatibility with Reptilian Possessions (English) \ud83e\udd8e \ud83e\uddcd\u2642\ufe0f \ud83d\udc09\n\n### MYSTIC REVELATIONS: Unlock Your REAL Identity with This ANCIENT WISDOM! | Pablo Sender\n\nView original video\n\nSocial media\n\nJoin Discord\n\nTwitter\n\nFilm & AnimationAutos & VehiclesMusicPets & AnimalsSportsShort MoviesTravel &\nEventsGamingVideobloggingPeople & BlogsComedyEntertainmentNews & PoliticsHowto\n& StyleEducationScience & TechnologyNonprofits &\nActivismMoviesAnime/AnimationAction/AdventureClassicsComedyDocumentaryDramaFamilyForeignHorrorSci-\nFi/FantasyThrillerShortsShowsTrailersIndie FeelOpen Source AlternativesStey\nAIChat DesignerDrLambdaMidReal AIFinal Rround AIMathGPT ProQuick CreatorJob\nRightTablelizeProject White RabbitWondera AICollov AI\n\nTrusted by top social media platforms worldwide\n\n\u00a9 Copyright 2024. All rights reserved.\n\n", "frontpage": false}
