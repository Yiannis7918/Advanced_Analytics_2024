{"aid": "40076413", "title": "Show HN: Django-image-captcha, a simple captcha application for Django forms", "url": "https://github.com/unarmedscott/django-image-captcha", "domain": "github.com/unarmedscott", "votes": 1, "user": "unarmedscott", "posted_at": "2024-04-18 14:07:16", "comments": 0, "source_title": "GitHub - unarmedscott/django-image-captcha: Django application showing how to use image captcha challenge to keep out bots from your forms.", "source_text": "GitHub - unarmedscott/django-image-captcha: Django application showing how to\nuse image captcha challenge to keep out bots from your forms.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nunarmedscott / django-image-captcha Public\n\n  * Notifications\n  * Fork 0\n  * Star 0\n\nDjango application showing how to use image captcha challenge to keep out bots\nfrom your forms.\n\n### License\n\nMIT license\n\n0 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# unarmedscott/django-image-captcha\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nunarmedscottAdded LICENSEApr 18, 2024b2be91e \u00b7 Apr 18, 2024Apr 18, 2024\n\n## History\n\n3 Commits  \n  \n### django_image_captcha\n\n|\n\n### django_image_captcha\n\n| Initial commit of django-image-captcha.| Apr 17, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Added LICENSE| Apr 18, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Added demo video| Apr 18, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| Initial commit of django-image-captcha.| Apr 17, 2024  \n  \n## Repository files navigation\n\n# Banish bots from your forms\n\nUsing Django Image Captcha\n\nDjango Image Captcha is a sample django application showing how to use image\ncaptcha challenge to prevent bots from filling up your forms. Bots are a\nnuisance which go around filling forms with garbage hoping some human will\nlook at what they post. This corrupts your form data with junk. To take care\nof this problem, you can use an image captcha challenge to prevent the bots\nfrom filling up your data with unwanted stuff.\n\nHere is a small demo video:\n\n## Motivation: Google changed reCAPTCHA pricing\n\nMany sites on the internet use Google's reCAPTCHA to address this problem. In\nthe past, it was a good way of keeping out bots. But beginning Apr 1 2024,\nGoogle has changed the pricing of reCAPTCHA to include \"10,000 assessments\"\nfree per month. After that is time to pay. Check here for the pricing update.\nAnd that limit is per organization, not per form. So if you have a reasonably\npopular website, that limit is soon reached.\n\nSo if you are looking for a simple solution for blocking bots, and you are\nusing python/django for your website, you can take a look at this application.\n\n## Modules used\n\nThis application uses the following modules available on PyPI.\n\n  * The captcha module supports image and audio captcha. I did try the audio captcha part, but the image captcha part is sufficient for me now.\n\n  * The hashids module generates hashes which are used to generate the captcha.\n\n## Notes about the implementation\n\nThe application shows an account sign up page as the home page. The page\nincludes a captcha challenge which needs to be solved to be able to create an\naccount.\n\n### index view\n\nThe page POSTs to a simple index view which illustrates how to generate the\ncaptcha for the GET request on the URL and returns the sign-up page. The POST\npart of the view handles the logic for processing the captcha before\nproceeding to create an account for the user - this part is skipped. For the\npurpose of illustration, we just need to verify that the user has solved the\ncaptcha.\n\n    \n    \n    ... # Here, checks for CAPTCHA have passed. Implement your logic from here. ctx = {'signup_status': 'account successfully created ... you can login now', 'email': email} return render(request, 'login.html', ctx)\n\n### Javascript for refreshing the captcha image\n\nWhen the user clicks the Refresh image link on the sign-up page, a small bit\nof javascript is executed which refreshes the captcha image using the fetch\nAPI. The following function is used to refresh the captcha image. Tweak it to\nyour needs.\n\n    \n    \n    function refreshCaptcha() { document.getElementById(\"captchaText\").value = ''; document.getElementById(\"errorMesg\").style.display = 'none'; fetch('/captcha/') .then(r => { if ( r.ok ) return r.json(); else return Promise.reject(r); }).then(data => { document.getElementById(\"captchaImage\").src = data.captcha_image; }).catch(r => { const el = document.getElementById(\"errorMesg\") el.innerText = `unable to load captch image: ${r.status}, ${r.statusText}` el.style.display = 'block'; }); }\n\n### View function for refreshing captcha\n\nOf course the refreshCaptcha() function above makes a GET request to the URL\n/captcha/ on the server. The view function (called manage_captcha()) is\nintended to use used in AJAX requests (using fetch() or something similar) and\nsuppots a GET for retrieving the captcha and a POST for verifying the captcha.\nIn both cases, it uses a JsonResponse to make it easier to handle on the\nclient side.\n\n## Using csrf_exempt\n\nWhen you use this application as a guide to implement your own, you should not\nuse @csrf_exempt. Here is how I have defined it in the application.\n\n    \n    \n    @csrf_exempt def index(request): ... @csrf_exempt def manage_captcha(request): ...\n\nI have this only to be able to deploy on different hosts without having to\nfiddle with CSRF_TRUSTED_ORIGINS all the time. When you host it on a server,\nbe sure to not use @csrf_exempt and specify the hostname (or IP address) of\nyour server as follows:\n\n    \n    \n    CSRF_TRUSTED_ORIGINS = ['https://example.com']\n\n## About\n\nDjango application showing how to use image captcha challenge to keep out bots\nfrom your forms.\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n0 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Python 60.4%\n  * HTML 35.3%\n  * JavaScript 3.3%\n  * Makefile 1.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
