{"aid": "39962053", "title": "How to build a Spacecraft that flies itself", "url": "https://jdsemrau.substack.com/p/how-to-build-a-spacecraft-that-flies", "domain": "jdsemrau.substack.com", "votes": 1, "user": "Brajeshwar", "posted_at": "2024-04-07 16:59:10", "comments": 0, "source_title": "How to build a Spacecraft that flies itself", "source_text": "How to build a Spacecraft that flies itself\n\nShare this post\n\n#### How to build a Spacecraft that flies itself\n\njdsemrau.substack.com\n\n#### Discover more from Encyclopedia Autonomica\n\nSubstack's leading Autonomous Agents Newsletter Agent= Goals +\nReasoning/Planning + Memory + Tools Project Reviews, Paper Explainers, Job\nPostings, Code Clinics\n\nContinue reading\n\nSign in\n\n# How to build a Spacecraft that flies itself\n\n### Introducing An Autonomous Board For Avoiding Collisions (ABACO)\n\nJ Daniel Semrau | CAIO\n\nApr 07, 2024\n\n1\n\nShare this post\n\n#### How to build a Spacecraft that flies itself\n\njdsemrau.substack.com\n\nShare\n\nThere are now more than 7,000 objects in space that can be considered active.\n\nWhile historically Satellites were launched into orbit and largely stayed\nthere throughout their useful life, the invention of cheap and efficient\nelectric propulsion has introduced unprecedented degrees of freedom as now\nthese spacecraft can reach primary orbits from their launch service providers\n(like Exolaunch), actively keep station, and also perform in-space logistics\nand de-orbit actively (see D-Orbit).\n\nAs a result, space is becoming increasingly more congested. And the likelihood\nof a conjunction events, i.e., a scenario where two or more spacecraft come\nclose to each other, increases. While that can be intentional, i.e. in case of\na docking maneuver, it also can be unintentional leading to a collision. A\ncollision then leading to a loss of payload operations. I.e., your internet\ngoes down or your autonomous car stops working.\n\nEven in 2024, these events are not that rate anymore. A typical Starlink\nsatellite, experiences up to 5 conjunction events per day. Suppose that each\nevent is discovered, on average, 7 days in advance, then a total of up to 35\nevents is expected to be processed with a typical 24h workday.\n\nIf we assume that the traditional approach of collision avoidance takes\nseveral hours, we will soon reach a point where conjunction processing becomes\nunsustainable. And that does not even take into consideration new spacecraft\nthat are increasingly launched nor debris and other objects in space.\n\nTherefore, there is a clear operational need for constellation operators to\nprotect their investments and allow their spacecraft to navigate autonomously\nin space.\n\nBenefits of such a system\n\n  1. Reduce the ground station\u2019s workload for conjunction assessment and risk analysis\n\n  2. Reduce the need to operate collision avoidance maneuvers manually\n\n  3. Detect risks of in-space collusions with higher accuracy and react faster\n\nFunded by the Italian Space Agency, Project ABACO aims to create these\nbenefits through combining the operational and physical architecture of an\nonboard satellite subsystem with a sophisticated software solution. ABACO is a\nsystem that is integrated into the hosting spacecraft and is designed to be\ninvisible to the spacecraft operators unless they want to intervene. This\nautonomy a huge advantage compared to traditional methods that rely on ground-\nstation staff to plan and execute the maneuver.\n\n####\n\nPhysical architecture\n\nABACO\u2019s main functionality is derived from two physical architecture features.\n\n  1. A navigation unit (NAV), which orchestrates the autonomous (yeah!), Global Navigation Satellite System (GNSS)-based, orbit determination and prediction for the spacecraft, and\n\n  2. A collision avoidance unit (COLA), that provides risk assessment and mitigation functionalities and can compute evasive maneuvers.\n\n####\n\nOperational architecture\n\nABACO implements an automatic collision avoidance process, that allows the\nsystem to be able to estimate the risk of collision, make a decision on it,\ninterface with a coordinating agent, and compute and program a collision\navoidance maneuver.\n\nCAS Service. A service that provides Collision Avoidance Analysis services.\n\nTLE. Two Line Element data. Explained here already.\n\nHowever, TLEs predictions worked well in the past, but because they experience\nerrors in the order of tens of kilometers for propagation horizons of a few\ndays from epoch, using them for precise conjunction assessments is\nincreasingly difficult.\n\nCDM. Conjunction Data Messages. A standard data format created to track\nspacecraft and predict through orbit propagation potential conjunction point.\nOne provider CelesTrak\u2019s SOCRATES Plus\n\nWith this information provided, the spacecraft might be able to perform an\nautomated collision avoidance maneuver.\n\nThe spacecraft then needs to execute three operational functions.\n\nGNSS positioning. The GNSS positioning function provides both the internal\nrisk assessment function and the host platform with the precise ephemeris of\nthe hosting spacecraft. I always understood ephemeris as a kind of \"schedule\"\nor \"map\" that tells the position and velocity among other data-points about a\nspacecraft.\n\nRisk Assessment (RA). The RA function is triggered from ground through the\nupload of a Conjunction Data Messages (CDM) for any conjunction. Once the\nprimary assessment is completed using onboard data, a decision about the event\nis made.\n\nCollision Avoidance (COLA). Automating COLA onboard reduces the time between\nmaneuver decision and close approach, because there is no need for the ground\nstation to become visible. As you can see below, the number of spacecraft that\nare visible from a given ground-station can vary.\n\nThe benefit of this is that it reduces the number of false alerts the ground-\nteam has to react on. This is because the system is much more accurate\ncompared to the ground station measurement.\n\nThe system calculates and proposes the maneuver autonomously and only sends it\nto the ground-station for approval. I believe that this governance approach is\nnecessary especially in the beginning of autonomous spacecraft operations.\n\n####\n\nABACO\u2019s decision making algorithm\n\nIn this diagram we can see the different hardware components mentioned prior\nin action and how they guide the spacecraft to make a maneuver decision.\n\nThe typical and effective action to avoid a collision with another spacecraft\nis changing the primary\u2019s trajectory by thrusting. Thrusting is commonly\nperformed by onboard propulsion systems. Historically, satellites have not\nbeen equipped with propulsion systems in the past, but with the dawn of\nelectric propulsion (FEEP and Hall Thrusters), this technology has become much\nmore affordable and low-risk. That of course means that tradtional orbit\npropagation techniques that update three times per day are not working\nanymore!\n\nNevertheless, the decision to execute evasive maneuver shall be made very\ncarefully to avoid unnecessary loss of payload operations and propellant.\n\nWe don\u2019t have fuel-stations in space just yet ;-)\n\n####\n\nConclusion\n\nThe goal of this post was to provide an overview of the components that are\nnecessary for a spacecraft to fly autonomously in space. Given the rapidly\nincreasing number of spacecraft in orbit, existing methods are assumed to be\nsoon outdated.\n\nABACO provides an inexpensive and low risk solution that if commercially\ndeveloped can lay the ground work for a multitude of high-value activities in\nspace. And I think that the problem of outdated technology will be even\nfurther amplified by in-orbit logistics, assembly, and manufacturing.\n\nHope you found this interesting. Please like, share, subscribe.\n\nEncyclopedia Autonomica is a reader-supported publication. To receive new\nposts and support my work, consider becoming a free or paid subscriber.\n\n1 Like\n\n\u00b7\n\n2 Restacks\n\n1\n\nShare this post\n\n#### How to build a Spacecraft that flies itself\n\njdsemrau.substack.com\n\nShare\n\nComments\n\nCode Clinic | Searching Youtube with Langchain Tools + Streamlit\n\nHow to build an agent that uses Langchain's community tools to search videos.\n\nJan 28 \u2022\n\nJ Daniel Semrau | CAIO\n\n1\n\nShare this post\n\n#### Code Clinic | Searching Youtube with Langchain Tools + Streamlit\n\njdsemrau.substack.com\n\nCode Clinic | Building a ReAct Agent on LangChain with Memory\n\nHow to Use ReAct Agents to Automate Your Recruiting Process. A technical\nexploration.\n\nSep 4, 2023 \u2022\n\nJ Daniel Semrau | CAIO\n\n3\n\nShare this post\n\n#### Code Clinic | Building a ReAct Agent on LangChain with Memory\n\njdsemrau.substack.com\n\nPaper Review | An Interactive Agent Foundation Model\n\nEven OpenAI acknowledges that agent tech will be a hot topic in 2024\n\nFeb 17 \u2022\n\nJ Daniel Semrau | CAIO\n\n2\n\nShare this post\n\n#### Paper Review | An Interactive Agent Foundation Model\n\njdsemrau.substack.com\n\nReady for more?\n\n\u00a9 2024 JDS\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great writing\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
