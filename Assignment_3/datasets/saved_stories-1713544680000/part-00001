{"aid": "40085122", "title": "Microsoft: Don't Use Iperf3 on Windows", "url": "https://techcommunity.microsoft.com/t5/networking-blog/three-reasons-why-you-should-not-use-iperf3-on-windows/ba-p/4117876", "domain": "microsoft.com", "votes": 20, "user": "thepuppet33r", "posted_at": "2024-04-19 10:36:31", "comments": 2, "source_title": "Three Reasons Why You Should Not Use iPerf3 on Windows", "source_text": "Three Reasons Why You Should Not Use iPerf3 on Windows - Microsoft Community\nHub\n\nTurn on suggestions\n\nShowing results for\n\nShow only | Search instead for\n\nDid you mean:\n\n  * Back to Blog\n  * Older Article\n\nThree Reasons Why You Should Not Use iPerf3 on Windows\n\n  * Subscribe to RSS Feed\n  * Mark as New\n  * Mark as Read\n  * Bookmark\n  * Subscribe\n  * Printer Friendly Page\n  * Report Inappropriate Content\n\nBy\n\nJames Kehr\n\nPublished Apr 18 2024 12:10 PM 7,012 Views\n\nListen to the article\n\n00:0000:00\n\n00:00\n\nPowered by\n\nundefined\n\nJamesKehr\n\nMicrosoft\n\nApr 18 2024 12:10 PM\n\n# Three Reasons Why You Should Not Use iPerf3 on Windows\n\nApr 18 2024 12:10 PM\n\nJames Kehr here with the Microsoft Commercial Support \u2013 Windows Networking\nteam. This article will explain why you should not use iPerf3 on Windows for\nsynthetic network benchmarking and testing. Followed by a brief explanation of\nwhy you should use ntttcp and ctsTraffic instead.\n\n# Reason 1 \u2013 It is Not Supported\n\niPerf3 is owned and maintained by an organization called ESnet (Energy\nSciences Network). They do not officially support nor recommend that iPerf3 be\nused on Windows. Their recommendation is to use iPerf2. More on the Microsoft\nrecommendation later.\n\nHere are some direct quotes from the official ESnet iPerf3 FAQ, retrieved on\n18 April 2024.\n\nI\u2019m trying to use iperf3 on Windows, but having trouble. What should I do?\n\niperf3 is not officially supported on Windows, but iperf2 is. We recommend you\nuse iperf2.\n\nAnd from the ESnet \u201cObtaining iPerf3\u201d article, retrieved on 18 April 2024.\n\nPrimary development for iperf3 takes place on CentOS 7 Linux, FreeBSD 11, and\nmacOS 10.12. At this time, these are the only officially supported\nplatforms...\n\nMicrosoft does not recommend using iPerf3 for a different reason.\n\n# Reason 2 \u2013 iPerf3 is Emulated on Windows\n\niPerf3 does not make Windows native API calls. It only knows how to make\nLinux/POSIX calls.\n\nThe iPerf3 community uses Cygwin as an emulation layer to get iPerf3 working\non Windows. You can read more about Cygwin in their FAQ.\n\nThe iPerf3 calls are sent to Cygwin, which translates them to Windows APIs\ncalls. Only then does the Windows network stack come into play. The iPerf3 on\nWindows maintainers do an excellent job of making it all work together, but,\nultimately, there are potential issues with this approach.\n\nNot all the iPerf3 features will work on Windows. The basic options work well,\nbut advanced capabilities needed for certain network testing may not be\navailable on Windows or may behave in unexpected ways.\n\nEmulation tends to have a performance penalty. The emulation overhead on a\nlatency sensitive operation, such as network testing, can result in lower than\nexpected throughput.\n\nFinally, iPerf3 uses uncommon Windows Socket (winsock) options versus native\nWindows applications. For generic throughput testing this is fine. For\napplication testing the uncommon socket options will not mimic real-world\nWindows-native application behavior.\n\n# Reason 3 \u2013 You Are Probably Using an Old Version of iPerf3.\n\nGo search for \u201ciPerf3 on Windows\u201d on the web. Go ahead, open a tab, and use\nyour search engine of choice. Which I am certain is Bing with Copilot.\n\nWhat is the top result, and thus the most likely link you will click on? I bet\nthe site was iperf.fr.\n\nThe newest version of iPerf3 on iperf.fr is 3.1.3 from 8 June 2016. That was\nnearly 8 years ago at the time of writing.\n\nThe current version of iPerf3, directly from ESnet, is 3.16. A full 15\nversions of missing bug fixes, features, and changes from the version people\nare most likely to download.\n\nThis specific copy of iPerf3, from iperf.fr, includes a version of cygwin1.dll\nthat contains a bug which limits the socket buffer to 1MB. This will cause\npoor performance on high speed-high latency and high bandwidth networks\nbecause iPerf3 will not be capable of putting enough data in-flight to\nsaturate the link, resulting in inaccurate testing.\n\nWhere should you look for iPerf3 on Windows?\n\nFrom ESnet\u2019s article, \u201cObtaining iPerf3\u201d they say:\n\nWindows: iperf3 binaries for Windows (built with Cygwin) can be found in a\nvariety of locations, including https://files.budman.pw/ (discussion thread).\n\n# What Does Microsoft Recommend\n\nMicrosoft maintains two synthetic network benchmarking tools: ntttcp (Windows\nNT Test TCP) and ctsTraffic. The newest version of ntttcp is maintained on\nGitHub. This is a Windows native tool which utilizes Windows networking in the\nsame way a native Windows application does.\n\nBut what about Linux?\n\nThere is! Details can be found on the ntttcp for Linux GitHub repo. This is a\nseparate codebase built for Linux that is compatible with ntttcp for Windows,\nbut it is not identical to the Windows counterpart.\n\nNtttcp allows you to perform API native synthetic network tests between\nWindows and Windows, Linux and Linux, and between Windows and Linux.\n\nctsTraffic is Windows-to-Windows only. Where ntttcp is more iPerf3-like,\nctsTraffic has a different set of options and goals. ctsTraffic focuses on\nend-to-end goodput scenarios, where ntttcp and iPerf3 focus more on isolating\nnetwork stack throughput.\n\n## How do you use ntttcp?\n\nThe Azure team has written a great article about basic ntttcp functionality\nfor Windows and Linux. I do not believe in reinventing the wheel, so I will\nsimply link you to the article.\n\nhttps://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-\nbandwidth-testing?tabs=windo...\n\nThere is a known interoperability limitation when testing between Windows and\nLinux. Details can be found in this ntttcp for Linux wiki article on GitHub.\n\n# Testing\n\nI built a lab while preparing this article using two Windows Server 2022 VMs.\nThe tests used the newest versions of iPerf3 (3.16), ntttcp (5.39), and\nctsTraffic (2.0.3.3).\n\nThe default iPerf3 parameters are the most common configuration I see among\nMicrosoft support customers. So, I am tuning ntttcp and ctsTraffic to better\nmatch iPerf3\u2019s default single connection, 128KB buffer length behavior. While\nthis is not a perfect comparison, this does make it a better comparison.\n\nSingle stream tests are used for targeted analyses since many applications do\nnot perform multi-threaded transfers. Bandwidth and maximum throughput testing\nshould be multi-threaded with large buffers, but that is a topic for a\ndifferent day.\n\nDon\u2019t forget to allow the network traffic on the Windows Defender Firewall if\nyou wish to run your own tests.\n\n## iPerf3\n\niPerf3 server command:\n\n    \n    \n    iperf3 -s\n\niPerf3 client command:\n\n    \n    \n    iperf3 -c <IP> -t 60\n\nThe average across multiple tests was about 7.5 Gbps. The top result was 8.5\nGbps, with a low of 5.26 Gbps.\n\n## ntttcp\n\nNtttcp server command:\n\n    \n    \n    ntttcp -r -m 1,*,<IP> -t 60\n\nNtttcp client command:\n\n    \n    \n    ntttcp -s -m 1,*,<IP> -l 128K -t 60\n\nNtttcp averaged about 12.75 Gbps across multiple tests. The top test averaged\n13.5 Gbps, with a low test of 12.5 Gbps.\n\nNtttcp does something called pre-posting receives, which is unique to this\ntool. This reduces application wait time as part of network stack isolation,\nallowing for quicker than normal application responses to socket messages.\n\n-r is receiver, and -s is sender.\n\n-m is a mapping of values that are: <num threads>, <CPU affinity>, <Target IP>. In this test we use a single thread, no CPU affinity (*), and both -r and -s side uses the target IP address as the final value.\n\n-t is test time, in seconds.\n\n-l sets the buffer length. You can use K|M|G with ntttcp as shorthand for kilo-, mega-, and giga-bytes.\n\n## ctsTraffic\n\nThese commands are run in PowerShell to make reading values easier.\n\nctsTraffic server command:\n\n    \n    \n    .\\ctstraffic.exe -listen:* -Buffer:\"$(128KB)\" -Transfer:\"$(1TB)\" -ServerExitLimit:1 -consoleverbosity:1 -TimeLimit:60000\n\nctsTraffic client command:\n\n    \n    \n    .\\ctstraffic.exe -target:<IP> -Connections:1 -Buffer:\"$(128KB)\" -Transfer:\"$(1TB)\" -Iterations:1 -consoleverbosity:1 -TimeLimit:60000\n\nThe result, about 9.2 Gbps average. It is a little faster and far more\nconsistent than iPerf3, but not quite as fast as ntttcp. The two primary\nreasons why ctsTraffic is slower are versus pre-posting receives like ntttcp.\n\n-Buffer is the buffer length (ntttp: -l).\n\n-Transfer is the amount of data to send per iteration.\n\n-Iterations/-ServerExitLimit is the number of times a data sets will be transferred.\n\n-Connections is the number of concurrent TCP streams that will be used.\n\n-TimeLimit is the number of milliseconds to run the test. The test stops even if the iteration transfer has not been completed when the time limit is reached.\n\nThank you for reading and I hope this helps improve your understanding of\nsynthetic network benchmarking on Windows!\n\nJames Kehr\n\n0 Likes\n\nLike\n\n1 Comment\n\nChristopher Demicoli\n\nCopper Contributor\n\nApr 19 2024 03:55 AM\n\n  * Mark as Read\n  * Mark as New\n  * Bookmark\n  * Permalink\n  * Print\n  * Report Inappropriate Content\n\nApr 19 2024 03:55 AM\n\nWhat about iperf3 on WSL/WSL2? Do you also not recommend it?\n\n0 Likes\n\nLike\n\nYou must be a registered user to add a comment. If you've already registered,\nsign in. Otherwise, register and sign in.\n\n  * Comment\n\nCo-Authors\n\nJamesKehr\n\nVersion history\n\nLast update:\n\nApr 18 2024 12:10 PM\n\nUpdated by:\n\nJamesKehr\n\n## Share\n\n  * Share to LinkedIn\n  * Share to Facebook\n  * Share to Twitter\n  * Share to Reddit\n  * Share to Email\n\nSkip to Primary Navigation\n\nYour Privacy Choices\n\nAuto-suggest helps you quickly narrow down your search results by suggesting\npossible matches as you type.\n\nAuto-suggest helps you quickly narrow down your search results by suggesting\npossible matches as you type.\n\n", "frontpage": true}
