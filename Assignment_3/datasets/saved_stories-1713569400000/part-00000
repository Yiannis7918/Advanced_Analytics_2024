{"aid": "40089609", "title": "Multipath TCP for Linux (2022)", "url": "https://www.mptcp.dev/", "domain": "mptcp.dev", "votes": 42, "user": "pantalaimon", "posted_at": "2024-04-19 17:28:45", "comments": 7, "source_title": "MPTCP", "source_text": "MPTCP | Multipath TCP for Linux\n\nSkip to main content\n\nMultipath TCP for Linux\n\nJekyll theme Improve this page\n\nMultipath TCP or MPTCP is an extension to the standard TCP and is described in\nRFC 8684. It allows a device to make use of multiple interfaces at once to\nsend and receive TCP packets over a single MPTCP connection. MPTCP can\naggregate the bandwidth of multiple interfaces or prefer the one with lowest\nlatency, it also allows a fail-over if one path is down, and the traffic is\nseamlessly reinjected on other paths.\n\nTechnically, when a new socket is created with the IPPROTO_MPTCP protocol\n(Linux-specific), a subflow (or path) is created. This subflow consists of a\nregular TCP connection that is used to transmit data through one interface.\nAdditional subflows can be negotiated later between the hosts. For the remote\nhost to be able to detect the use of MPTCP, a new field is added to the TCP\noption field of the underlying TCP subflow. This field contains, amongst other\nthings, a MP_CAPABLE option that tells the other host to use MPTCP if it is\nsupported. If the remote host or any middlebox in between does not support it,\nthe returned SYN+ACK packet will not contain MPTCP options in the TCP option\nfield. In that case, the connection will be \u201cdowngraded\u201d to plain TCP, and it\nwill continue with a single path.\n\nThis behavior is made possible by two internal components:\n\n  * Path Manager: Manages subflows from creation to deletion, and also address announcements. Typically, it is the client side that initiates subflows, and the server side that announces additional addresses via the ADD_ADDR and REMOVE_ADDR options.\n\nAs of Linux v5.19, there are two path managers, controlled by the\nnet.mptcp.pm_type sysctl knob: the in-kernel one (type 0) where the same rules\nare applied for all the connections (see: ip mptcp) ; and the userspace one\n(type 1), controlled by a userspace daemon (i.e. mptcpd) where different rules\ncan be applied for each connection.\n\n  * Packet Scheduler: In charge of selecting which available subflow(s) to use to send the next data packet. It can decide to maximize the use of the available bandwidth, only to pick the path with the lower latency, or any other policy depending on the configuration.\n\nAs of Linux v6.8, there is only one packet scheduler, controlled by sysctl\nknobs in net.mptcp.\n\n## Features\n\nAs of Linux v6.10, major features of MPTCP include:\n\n  * Support of the IPPROTO_MPTCP protocol in socket() system calls.\n  * Fallback from MPTCP to TCP if the peer or a middlebox do not support MPTCP.\n  * Path management using either an in-kernel or userspace path manager.\n  * Socket options that are commonly used with TCP sockets.\n  * Debug features including MIB counters, diag support (used by the ss command), and tracepoints.\n\nSee the ChangeLog for more details.\n\n## Communication\n\n  * Mailing List: mptcp@lists.linux.dev (and archives)\n  * IRC: #mptcp on libera.chat\n  * Online Meetings\n\n## Projects\n\n  * Maintained by MPTCP community members\n\n    * Kernel development on GitHub\n    * Multipath TCP Daemon\n\n      * The mptcpd daemon can do full userspace path management or control the in-kernel path manager.\n      * Includes the mptcpize utility to allow legacy TCP binaries to use MPTCP.\n    * Packetdrill with MPTCP support\n  * Projects with MPTCP-related enhancements\n\n    * iproute2 (for the ip mptcp command)\n    * Network Manager: MPTCP features are included starting with v1.40.\n    * Multipath TCP applications: A project to coordinate MPTCP updates for popular TCP applications.\n\n## Kernel Development\n\n  * Git Repository (branch descriptions)\n  * Patchwork\n  * Continuous Integration\n  * Testing\n  * Issue tracker\n\nmptcp@lists.linux.dev\n\nArchives\n\nGit Repository\n\nIssue tracker\n\nWiki\n\n", "frontpage": true}
