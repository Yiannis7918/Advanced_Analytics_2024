{"aid": "40103043", "title": "Show HN: The first library to extract financial data via gRPC API", "url": "https://github.com/finazon-io/finazon-grpc-python", "domain": "github.com/finazon-io", "votes": 1, "user": "oxxy", "posted_at": "2024-04-21 03:43:18", "comments": 0, "source_title": "GitHub - finazon-io/finazon-grpc-python", "source_text": "GitHub - finazon-io/finazon-grpc-python\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nfinazon-io / finazon-grpc-python Public\n\n  * Notifications\n  * Fork 0\n  * Star 7\n\n### License\n\nMIT license\n\n7 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# finazon-io/finazon-grpc-python\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n6 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nfinazon_ciBump version to 1.1.3Apr 16, 20243920a50 \u00b7 Apr 16, 2024Apr 16, 2024\n\n## History\n\n30 Commits  \n  \n### finazon_grpc_python\n\n|\n\n### finazon_grpc_python\n\n| Bump version to 1.1.3| Apr 16, 2024  \n  \n### proto/finazon_grpc_python\n\n|\n\n### proto/finazon_grpc_python\n\n| Bump version to 1.1.3| Apr 16, 2024  \n  \n### tools\n\n|\n\n### tools\n\n| Generate services, update code examples and doc| Feb 28, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Add generated files to repository, add settings file| Feb 27, 2024  \n  \n### LICENSE.txt\n\n|\n\n### LICENSE.txt\n\n| Add license| Oct 31, 2023  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Publish env variables| Apr 12, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Bump version to 1.1.3| Apr 16, 2024  \n  \n### poetry.lock\n\n|\n\n### poetry.lock\n\n| Update dependencies| Apr 9, 2024  \n  \n### poetry.toml\n\n|\n\n### poetry.toml\n\n| Generate lib files from proto| Oct 23, 2023  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| Bump version to 1.1.3| Apr 16, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| Update dependencies| Apr 9, 2024  \n  \n## Repository files navigation\n\n# Finazon Python gRPC Client\n\nThis is the official Python library for Finazon, offering access to:\n\n  * Lists of datasets, publishers, markets, and tickers.\n  * Market data: ticker snapshots, time series, trades, and technical indicators.\n  * Data from specific datasets such as Benzinga, Binance, Crypto, Forex, SEC, and SIP.\n\n\ud83d\udd11 API key is essential. If you haven't got one yet, sign up here.\n\n## Requirements\n\nEnsure you have Python 3.9 or later.\n\n## Installation\n\nUse the package manager pip to install Finazon Python gRPC Client library:\n\n    \n    \n    pip install finazon-grpc-python\n\nInstallation with Pandas support:\n\n    \n    \n    pip install finazon-grpc-python[pandas]\n\nOr use poetry package manager to add Finazon Python gRPC Client library to\nyour project:\n\n    \n    \n    poetry add finazon-grpc-python\n\n\ud83d\udd17 View the package on PyPI.\n\n## Updating to last version\n\nUsing pip:\n\n    \n    \n    pip install -U finazon-grpc-python\n\nUsing poetry:\n\n    \n    \n    poetry add finazon-grpc-python@latest\n\n## Quick start\n\n### 1\\. Create project virtual environment (venv)\n\n    \n    \n    mkdir hello-finazon && cd hello-finazon python3 -m venv .venv\n\nActivate venv (Linux/MacOS)\n\n    \n    \n    source .venv/bin/activate\n\nActivate venv (Windows cmd.exe)\n\n    \n    \n    <full_path_to_project>\\.venv\\Scripts\\activate.bat\n\nMore information about Python virtual environments can be found here\n\n### 2\\. Install package\n\n    \n    \n    pip install finazon-grpc-python\n\n### 3\\. Create time_series.py script\n\n    \n    \n    from finazon_grpc_python.time_series_service import TimeSeriesService, GetTimeSeriesRequest from finazon_grpc_python.common.errors import FinazonGrpcRequestError service = TimeSeriesService('your_api_key') try: request = GetTimeSeriesRequest(ticker='AAPL', dataset='sip_non_pro', interval='1h', page_size=10) response = service.get_time_series(request) print('Last OHLCV data\\n') for item in response.result: print(f'{item.timestamp} - {item.open}, {item.high}, {item.low}, {item.close}, {item.volume}') except FinazonGrpcRequestError as e: print(f'Received error, code: {e.code}, message: {e.message}')\n\n### 4\\. Input your API key\n\nReplace 'your_api_key' with your actual key.\n\n### 5\\. Run script\n\n    \n    \n    python3 time_series.py\n\n\ud83d\udcdd Expected output:\n\n    \n    \n    Last OHLCV data 1709323200 - 179.9312, 179.97, 179.415, 179.695, 7701993.0 1709319600 - 179.315, 180.22, 179.31, 180.005, 6668926.0 1709316000 - 178.515, 179.39, 178.33, 179.32, 6103415.0 1709312400 - 177.83, 179.07, 177.38, 178.524, 7184233.0 1709308800 - 178.1857, 178.47, 177.72, 177.935, 7477704.0 1709305200 - 179.7, 179.71, 177.67, 178.295, 13846621.0 1709301600 - 180.2, 180.53, 179.06, 179.245, 6952951.0 1709236800 - 180.225, 181.11, 179.57, 180.93, 12124375.0 1709233200 - 180.115, 180.49, 179.86, 180.2, 5406568.0 1709229600 - 180.15, 180.8, 179.68, 180.085, 5891427.0\n\n## More examples\n\n### Get time-series data for AAPL and convert it to Pandas dataframe\n\nDon't forget to install the package with Pandas support\n\n    \n    \n    pip install finazon-grpc-python[pandas]\n    \n    \n    from finazon_grpc_python.time_series_service import TimeSeriesService, GetTimeSeriesRequest from finazon_grpc_python.common.errors import FinazonGrpcRequestError from finazon_grpc_python.common.utils import convert_response_to_pandas service = TimeSeriesService('your_api_key') try: request = GetTimeSeriesRequest(ticker='AAPL', dataset='us_stocks_essential', interval='1h', page_size=50) response = service.get_time_series(request) df = convert_response_to_pandas(response) print(df.describe()) except FinazonGrpcRequestError as e: print(f'Received error, code: {e.code}, message: {e.message}')\n\n### Get Moving average with period 100 (MA 100) for AAPL\n\n    \n    \n    from finazon_grpc_python.time_series_service import TimeSeriesService, GetTimeSeriesMaRequest, GetTimeSeriesRequest from finazon_grpc_python.common.errors import FinazonGrpcRequestError service = TimeSeriesService('your_api_key') try: request = GetTimeSeriesMaRequest( time_series=GetTimeSeriesRequest(ticker='AAPL', interval='1h', dataset='sip_non_pro', page_size=10), time_period=100, ) response = service.get_time_series_ma(request) print(response.result) except FinazonGrpcRequestError as e: print(f'Received error, code: {e.code}, message: {e.message}')\n\n\ud83d\udc40 Check the full example and other examples here\n\n## RPC support\n\nThe following table outlines the supported rpc calls:\n\nService| rpc| Description  \n---|---|---  \nApiUsageService| getApiUsage| Get a list of products with quota limit/usage  \nBenzingaService| getDividentsCalendar| Returns the dividends calendar from\nBenzinga  \nBenzingaService| getEarningsCalendar| Returns the earnings calendar from\nBenzinga  \nBenzingaService| getNews| Returns the news articles from Benzinga  \nBenzingaService| getIPO| Returns IPO data from Benzinga  \nBinanceService| getTimeSeries| Get time series data without technical\nindicators  \nCryptoService| getTimeSeries| Get time series data for any given ticker  \nDatasetsService| getDatasets| Get a list of all datasets available at Finazon.  \nExchangeService| getMarketsCrypto| Returns a list of supported crypto markets  \nExchangeService| getMarketsStocks| Returns a list of supported stock markets  \nForexService| getTimeSeries| Get time series data for any given ticker  \nPublisherService| getPublishers| Get a list of all publishers available at\nFinazon.  \nSecService| getFilings| Real-time and historical access to all forms, filings,\nand exhibits directly from the SEC's EDGAR system.  \nSipService| getTrades| Returns detailed information on trades executed through\nthe Securities Information Processor (SIP)  \nSipService| getMarketCenter| Returns a list of market centers  \nSnapshotService| getSnapshot| This endpoint returns a combination of different\ndata points, such as daily performance, last quote, last trade, minute data,\nand previous day performance.  \nTickersService| findTickersStocks| This API call returns an array of stocks\ntickers available at Finazon Data API. This list is updated daily.  \nTickersService| findTickersCrypto| This API call returns an array of crypto\ntickers available at Finazon Data API. This list is updated daily.  \nTickersService| findTickersForex| This API call returns an array of forex\ntickers available at Finazon Data API. This list is updated daily.  \nTickersService| findTickersUS| This API call returns an array of US tickers\navailable at Finazon Data API. This list is updated daily.  \nTimeSeriesService| getTimeSeries| Get time series data without technical\nindicators  \nTimeSeriesService| getTimeSeriesAtr| Get time series data for ATR technical\nindicator.  \nTimeSeriesService| getTimeSeriesBBands| Get time series data for BBands\ntechnical indicator.  \nTimeSeriesService| getTimeSeriesIchimoku| Get time series data for Ichimoku\ntechnical indicator.  \nTimeSeriesService| getTimeSeriesMa| Get time series data for Ma technical\nindicator.  \nTimeSeriesService| getTimeSeriesMacd| Get time series data for Macd technical\nindicator.  \nTimeSeriesService| getTimeSeriesObv| Get time series data for Obv technical\nindicator.  \nTimeSeriesService| getTimeSeriesRsi| Get time series data for Rsi technical\nindicator.  \nTimeSeriesService| getTimeSeriesSar| Get time series data for Sar technical\nindicator.  \nTimeSeriesService| getTimeSeriesStoch| Get time series data for Stoch\ntechnical indicator.  \nTradeService| getTrades| Returns general information on executed trades  \n  \nHere's how you can import service and request objects:\n\n    \n    \n    from finazon_grpc_python.service_name_service import ServiceNameService, RpcNameRequest # ... service = ServiceNameService('your_api_key') response = service.rpc_name(RpcNameRequest())\n\n## Documentation\n\nDelve deeper with our official documentation.\n\n## Examples\n\nExplore practical scenarios in the examples directory.\n\n## Support\n\n  * \ud83c\udf10 Visit our contact page.\n  * \ud83d\udee0 Or our support center.\n\n## Stay updated\n\n  * Follow us on X.\n  * Join our community on Discord.\n  * Follow us on LinkedIn.\n\n## Contributing\n\n  1. Fork and clone: $ git clone https://github.com/finazon-io/finazon-grpc-python.git.\n  2. Branch out: $ cd finazon-grpc-python && git checkout -b my-feature.\n  3. Commit changes and test.\n  4. Push your branch and open a pull request with a comprehensive description.\n\nFor more guidance on contributing, see the GitHub Docs on GitHub.\n\n## License\n\nThis project is licensed under the MIT License. See the LICENSE.txt file in\nthis repository for more details.\n\n## About\n\nNo description, website, or topics provided.\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\nCustom properties\n\n### Stars\n\n7 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\n6 tags\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * sgacode\n  * mivxxx\n\n## Languages\n\n  * Python 98.5%\n  * Makefile 1.1%\n  * Jinja 0.4%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
