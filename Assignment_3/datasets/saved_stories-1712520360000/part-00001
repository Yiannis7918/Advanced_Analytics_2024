{"aid": "39960855", "title": "Workbox", "url": "https://developer.chrome.com/docs/workbox", "domain": "chrome.com", "votes": 2, "user": "simonpure", "posted_at": "2024-04-07 14:04:19", "comments": 0, "source_title": "Workbox | Chrome for Developers", "source_text": "Workbox | Chrome for Developers\n\ndeveloper.chrome.com uses cookies from Google to deliver and enhance the\nquality of its services and to analyze traffic. Learn more.\n\n  * English\n  * Deutsch\n  * Espa\u00f1ol \u2013 Am\u00e9rica Latina\n  * Fran\u00e7ais\n  * Indonesia\n  * Italiano\n  * Polski\n  * Portugu\u00eas \u2013 Brasil\n  * Ti\u1ebfng Vi\u1ec7t\n  * T\u00fcrk\u00e7e\n  * \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n  * \u05e2\u05d1\u05e8\u05d9\u05ea\n  * \u0627\u0644\u0639\u0631\u0628\u064a\u0651\u0629\n  * \u0641\u0627\u0631\u0633\u06cc\n  * \u0939\u093f\u0902\u0926\u0940\n  * \u09ac\u09be\u0982\u09b2\u09be\n  * \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\n  * \u4e2d\u6587 \u2013 \u7b80\u4f53\n  * \u4e2d\u6587 \u2013 \u7e41\u9ad4\n  * \u65e5\u672c\u8a9e\n  * \ud55c\uad6d\uc5b4\n\nSign in\n\n  * Workbox\n\nBuild progressive web apps (PWAs) with Workbox - the Service Worker library\nfrom the Chrome team\n\n  * Home\n  * Docs\n\n  * Workbox\n\n### Workbox\n\nProduction-ready service worker libraries and tooling.\n\n## Intro to service workers\n\nLearn how service workers can progressively enhance your website and how\nWorkbox helps.\n\narticle\n\n### Service worker overview\n\nService workers are specialized JavaScript assets that act as proxies between\nweb browsers and web servers.\n\narticle\n\n### Lifecycle\n\nUnderstanding the way that service workers behave to make offline applications\npossible.\n\narticle\n\n### Caching strategies\n\nStrategies for interaction between a service worker's fetch event and the\nCache interface.\n\narticle\n\n### Workbox overview\n\nA set of modules that simplify common service worker routing and caching.\n\n## What you need to know\n\nGuidance to consider when building a service worker.\n\n### Expectations around service worker deployment\n\nUnderstand the effect a service worker has on a website once deployed.\n\n### Remove buggy service workers\n\nHow to fix a service worker that is causing problems.\n\n### Improve the service worker development experience\n\nSolve some of the local development issues you may encounter when using\nservice workers.\n\n### Troubleshoot and logging\n\nA look at Workbox's logging features, and in-browser service worker debugging\ntools.\n\n### Strategies for different architectures\n\nIntroduction to the two different website architectures.\n\n### Application shell model\n\nHow to pair the application shell model with a service worker in your SPA.\n\n### Navigation Preload for Network-first HTML\n\nWhat Navigation Preload is, how it speeds up navigation, and how to use it in\nWorkbox.\n\n### Faster multipage applications with streams\n\nUse workbox-streams to create multi-page applications to create fast\nexperiences that render almost instantaneously.\n\n### Pre-caching dos and don'ts\n\nLearn the do's and don'ts of pre-caching.\n\n### Storage quota\n\nA guide on configuring Workbox to avoid storage quota issues.\n\n## Use cases and recipes\n\nLearn how to handle different use cases to get the most out of Workbox.\n\narticle\n\n### Use workbox-window\n\nSometimes users go offline. Learn how to adapt, and help them resume requests\nwhen they eventually go back online.\n\nRead the doc\n\narticle\n\n### Caching resources during runtime\n\nLearn how to handle caching resources during runtime, including cross-origin\nresources.\n\nRead the doc\n\narticle\n\n### Force network timeout\n\nLearn how to force a network timeout in the presence of a slow network\nconnection, with the right timing.\n\nRead the doc\n\narticle\n\n### Access caches from the window\n\nAccessing cache instances isn't just restricted to the service worker scope.\nLearn how to access them from the window context.\n\nRead the doc\n\narticle\n\n### Serve cached audio and video\n\nLearn how to use workbox-range-request to deal with audio and video resource\nrequests in a predictable way.\n\nRead the doc\n\narticle\n\n### Manage fallback responses\n\nSometimes users encounter network failures or go offline. Learn how to adapt\nto those situations and provide a fallback response.\n\nRead the doc\n\narticle\n\n### Handle updates immediately\n\nHow to update users when you update a service worker.\n\nRead the doc\n\narticle\n\n### Handle updates immediately\n\nSometimes users go offline. Learn how to adapt, and help them resume requests\nwhen they come back online.\n\nRead the doc\n\narticle\n\n### Workbox plugins\n\nWhile Workbox offers lots of off-the-shelf utility, you may need to extend it\nto satisfy application requirements.\n\nRead the doc\n\n## Additional resources\n\nDive deeper into Workbox modules, source code, and more.\n\narticle\n\n### Workbox modules\n\nService workers are specialized JavaScript assets that act as proxies between\nweb browsers and web servers.\n\nRead the docs\n\nweb\n\n### Workbox on GitHub\n\nFile issues, read release notes, and browse the source code.\n\nVisit GitHub open_in_new\n\n", "frontpage": false}
