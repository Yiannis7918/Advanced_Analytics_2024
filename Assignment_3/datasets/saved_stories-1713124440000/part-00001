{"aid": "40031042", "title": "Homelab Server with Futro S920 and Proxmox", "url": "https://pietro.in/en/posts/futro-s920-proxmox/", "domain": "pietro.in", "votes": 1, "user": "skar3", "posted_at": "2024-04-14 13:52:52", "comments": 0, "source_title": "Homelab Server with Futro S920 and Proxmox", "source_text": "Homelab Server with Futro S920 and Proxmox | Pietro Cyber Journal\n\n# Homelab Server with Futro S920 and Proxmox\n\n28 December, 2023 \u00b7 6 min \u00b7 Me | Translations:\n\n  * It\n\nFujitsu Futro S920\n\nLooking for a suitable computer to virtualize the services I use, I came\nacross the Fujitsu Futro S920, a thin client that is especially popular for\nprojects with pfSense or OPNSense because of its expandability and low power\nconsumption.\n\nI then tried using it as a Homelab Server with Proxmox Virtual Environment,\nZFS and a cloud backup strategy.\n\n## Specifications and upgrades#\n\nThe Futro S920 in its main configuration has an AMD GX-415GA processor with 4\ncores and 4 threads, supports up to 8 GB of RAM, and has a PCI Express port\nthat with the help of a riser allows it to be expanded with an additional\nnetwork card, for example.\n\nAll for a cost of about 40 to 50 euros on Ebay.\n\nMy model came with a 16GB mSATA disk that I upgraded with a 128GB one I got on\nAliexpress for about 12 euros, I also added another 4 GB of RAM to get to the\nmaximum of 8.\n\nFor my Homelab Server I wanted mirrored SSD storage to be made with ZFS, the\nFutro has only one very inconvenient SATA port mounted under the heatsink,\nhowever, it has a mini PCI Express expansion slot which I took advantage of by\nadding a card with two SATA ports like this one.\n\nIt is possible to power the two SATA disks using the 4pin floppy drive port\nand a two-port SATA cable such as this one:\n\nThe end result is as follows:\n\n### NIC 2.5Gb/s#\n\nAfter upgrading my router to take full advantage of my 2.5Gb/s FTTH, I decided\nto upgrade my Futro\u2019s network card.\n\nI purchased this Intel I225-V controller-based network card, and to connect it\nI used a PCIe x1 riser taken from Aliexpress, it is preferable to be flexible\nso as not to risk not being able to close the case.\n\nHaving done the first tests, however, I began to notice that performance did\nnot seem to be the best, in speedtests I could only reach 1.7Gb/s when from\nthe tests done by my router the maximum was 2.2Gb/s.\n\n    \n    \n    Server: TIM SpA - Ancona (id: 54071) ISP: Telecom Italia Idle Latency: 1.73 ms (jitter: 0.39ms, low: 1.69ms, high: 2.46ms) Download: 1700.13 Mbps (data used: 959.7 MB) 5.49 ms (jitter: 1.05ms, low: 2.08ms, high: 11.39ms) Upload: 1003.23 Mbps (data used: 700.9 MB) 7.20 ms (jitter: 0.49ms, low: 5.17ms, high: 8.53ms) Packet Loss: 0.0%\n\nDoing some research and coming to a post on the ServeTheHome forum it appears\nthat the PCIe slot on the Futro is set to the default Gen1 speed.\n\nYou can confirm this by using the lspci -vvv command and check LnkSta on the\nnetwork card:\n\n    \n    \n    LnkSta: Speed 2.5GT/s (downgraded), Width x1\n\nFortunately, it is possible to set up Gen2 on PCIe in the BIOS; to do so, you\nneed to use the Editcmos.exe tool by running it from FreeDOS.\n\nFreeDOS is a DOS-compatible operating system that will allow us to upgrade our\nBIOS and run Editcmos.exe even if we do not have a Windows operating system.\n\nWe prepare a USB drive by downloading the FullUSB image and flashing it with\ndd\n\n    \n    \n    dd if=FD13FULL.img of=/dev/sdb bs=4M\n\nWhen finished, we copy the BIOS update found from the Fujitsu download center\nand the Editcmos.exe tool to the root of FreeDOS.\n\nWe boot the DOS environment and after performing the BIOS update we give this\ncommand to enable Gen2 speed on the PCIe\n\n    \n    \n    > EditCMOS.exe SetID:0x01B7=0x0151\n\nLet\u2019s go back to Proxmox and check\n\n    \n    \n    LnkSta: Speed 5GT/s, Width x1\n\nAfter this command, the speedtest comes to maximum performance\n\n    \n    \n    Speedtest by Ookla Server: Vodafone IT - Milan (id: 4302) ISP: Telecom Italia Idle Latency: 11.34 ms (jitter: 0.81ms, low: 10.90ms, high: 12.19ms) Download: 2156.85 Mbps (data used: 2.4 GB) 37.78 ms (jitter: 33.07ms, low: 9.85ms, high: 335.34ms) Upload: 1029.52 Mbps (data used: 998.2 MB) 23.81 ms (jitter: 1.74ms, low: 10.82ms, high: 36.42ms) Packet Loss: 0.0%\n\n## Proxmox Virtual Environment#\n\nI chose to use a hypervisor like PVE because I wanted to use LXC containers\nand because of the support for ZFS.\n\nHaving installed Proxmox the first step to take if you do not want to purchase\na support license is to disable enteriprise repositories and enable no-\nsubscription repositories.\n\nThe only difference is that enterprise ones are more suitable for production\nenvironments because they are more tested.\n\nTo do this, simply go to your node > Updates > Repositories.\n\nStaying in the node I then created a mirrored ZFS poll by going to Disks >\nZFS, compression saves disk space at the expense of a slight increase in CPU\nload\n\nMy server currently hosts 3 LXC containers: PiHole, HomeAssistant and Grocy\nand performance seems good.\n\n## Cloud backup#\n\nSet to PVE the classic container backups on internal storage, in this case two\nmirrored disks with ZFS I wanted to also have a copy of the backups on cloud\nin case of disaster recovery.\n\nI used rclone, a client that allows you to synchronize files with more than 70\nstorage providers including Google Drive, OneDrive and Proton Drive (my case).\n\nThrough the PVE shell I installed rclone\n\ncurl https://rclone.org/install.sh | bash\n\nand configured my remote\n\nrclone config\n\nProxmox allows you to start a script at the end of backup processes by passing\njob-end as a parameter to the script at the end of the process.\n\nSo I prepared this script that synchronizes the backups folder with my remote\non the cloud at the end of backup creation.\n\n    \n    \n    #!/bin/sh write_msg() { echo $(date +\"20%y-%m-%d %H:%M:%S\") $1 } duration() { DURATION=$2 HOUR=$((DURATION/3600)) HOURINSEC=$((HOUR*3600)) DURATION=$((DURATION-HOURINSEC)) MINUTE=$(((DURATION/60))) SECOND=$((DURATION%60)) write_msg \"$1 finished took $HOUR hours, $MINUTE minutes, $SECOND seconds\" } if [ $1 = \"job-end\" ] then START=$(date +%s) write_msg \"Starting rclone sync\" CMD=\"rclone sync --progress --stats-one-line --stats=30s --config /root/.config/rclone/rclone.conf /Storage/VMBACKUPS/ ProtonDrive:/Homelab/PVE\" write_msg \"using command: $CMD\" $CMD END=$(date +%s) duration \"rclone\" $((END-START)) fi exit 0\n\n/Storage/VMBACKUPS/ is the directory of my backups on PVE, ProtonDrive is the\nname of my remote on rclone, and /Homelab/PVE is the directory where I want to\nsave my backups to the cloud.\n\nI saved the script as rclone_backup.sh in my root and gave it execution\npermissions\n\nchmod +x rclone_backup.sh\n\nto start it after the backups are complete, you need to edit the\n/etc/vzdump.conf file by removing the comment from the script entry and\ninserting the path\n\nscript:/root/rclone_backup.sh\n\n## Conclusions#\n\nThe Futro S920 is an interesting thin client as a homelab server without too\nmuch pretension, the real bottleneck, however, is the 8GB of RAM, which with\nPVE and ZFS can be poor.\n\nFor now it meets my needs, in the future it would be interesting to buy\nanother one to cluster or who knows, maybe two more so I can experiment with\nan HA cluster.\n\n  * Futro S920\n  * PVE\n  * Proxmox\n  * Linux\n\n\u00a9 2024 Pietro Cyber Journal Powered by Hugo & PaperMod\n\n", "frontpage": false}
