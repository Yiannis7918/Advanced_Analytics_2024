{"aid": "40014708", "title": "Data-as-a-Product and Data-Contract: An evolutionary approach to data maturity", "url": "https://blog.owulveryck.info/2024/04/09/data-as-a-product-and-data-contract-an-evolutionary-approach-to-data-maturity.html", "domain": "owulveryck.info", "votes": 2, "user": "owulveryck", "posted_at": "2024-04-12 16:27:34", "comments": 0, "source_title": "Data-as-a-Product and Data-Contract: An evolutionary approach to data maturity", "source_text": "Data-as-a-Product and Data-Contract: An evolutionary approach to data maturity\n- Unladen swallow - Olivier Wulveryck\n\nowulveryck's blog\n\nowulveryck's blog\n\n# Data-as-a-Product and Data-Contract: An evolutionary approach to data\nmaturity\n\nby Olivier Wulveryck\n\n2024-04-09\n\n## Context\n\nI have been an early advocate for the data mesh paradigm since Zhamak Dehghani\nfirst proposed it. As an early supporter, I identified the potential of this\nnovel approach to data organization. Four years have passed, and the data mesh\nparadigm has indeed earned widespread acceptance. However, I have not yet seen\na concise, practical data mesh transformation plan within any organization.\n\nWhen I say \u201cadvocate,\u201d I mean to say that I\u2019ve been highlighting the benefits\nof this paradigm, which are rooted in its four main pillars:\n\n  * The orientation of design towards domains\n  * Applying product thinking to data (data-as-a-product)\n  * Federated computational governance\n  * Developing self-service data platforms\n\nThen comes the question, where should one actually start to implement the data\nmesh?\n\nIn principle, any organization can kick off their journey towards data mesh by\ngiving focus to these four pillars.\n\nBeginning with a design that is domain-oriented builds the groundwork for a\nthorough comprehension of the data mesh. This means not only setting the data\nmesh as an objective but also ensuring that the decomposition of the domain\nsyncs with the existing structure of the organization. However, this is a\nprofoundly conceptual approach that might not yield immediate results, and\nmoreover, it lacks the agility that is so beneficial.\n\nBoth federated computational governance and the self-service data platform are\nsimply enablers of the data mesh. They share a common objective: to simplify\nthe development of data-as-a-product and the creation of interconnections,\nessentially supporting the mesh. One can try implementing them as a\nfoundation, but to mesh what ?\n\nWhat remains then is to tackle data-as-a-product, a cornerstone of the data\nmesh that I have previously discussed.\n\nInterestingly, several organizations claim to have implemented the data mesh\n\u201cby accident,\u201d perceiving this paradigm as the natural evolution of data\nmanagement.\n\nIn this article, I attempt to apply a well-recognized model of evolutionary\nprogression to understand data evolution. The objective is to aid in\nvisualizing data maturity and assist companies in identifying their tipping\npoint, i.e., when they will start seeing significant benefits from\nimplementing data contracts and treating data as a product.\n\n## Modeling the evolution\n\nI will first explain the model I will use. This model is known as the\nevolution model by Simon Wardley and is successfully implemented in Wardley\nMaps. My goal here is not to describe a specific company\u2019s landscape, so I\nwon\u2019t need a full map. Instead, I will use the evolution model and try to\napply its general purpose function to the data.\n\nDisclaimer: Regarding the model: The theory of evolution is well-suited for\napplication in a competitive environment where everything evolves based on\nsupply and demand. I am considering businesses that are subject to those\nconstraints of competition and, consequently, their data will also follow\nthose rules. Therefore, the model will apply.\n\nWhy model the evolution? Understanding evolution is about understanding how\ncomponents change over time. Modeling evolution is about finding a pattern to\npotentially provide insights into the future trajectories of those components.\n\n### The model in a glimpse\n\nSimon Warldey needed a way to represent the evolution of the components on his\nmap. He could not rely on a basic timescale because it would prevent him from\ncomparing heterogeneous elements and would break the consistency of movement.\n\nFor example, on a timescale, the distance between the genesis and the maturity\nof a car (around 100 years) would have been much greater than the distance\nbetween the same points for a smartphone (around 10 years). He discovered that\nthe evolution is a function of its ubiquity and its certainty.\n\nIn a market economy, ubiquity is led by demand. More demand induces more\npresence. It is a declination of the theory of the diffusion of innovations of\nRogger. The certainty comes from the Stacey matrix. The matrix postulates that\nas the availability of key compoents or information increases, the certainty\nregarding decision-making outcomes also increases, allowing for more\npredicatble and informed planning and execution. In a sense, certainty is\ndriven by supply.\n\nFor example, let\u2019s consider a manufacturing company that produces electronic\ngadgets. In this scenario, one of the critical components they need are\nsemiconductor chips. When the supply of these chips is low due to market\nshortages or logistic issues, the company faces high uncertainty regarding its\nproduction schedules and ability to meet customer demand.\n\nAn empirical analysis led to this representation: (source Simon Wardley\u2019s\nblog.garvediance.org)\n\nThe model is a kind of S curve.\n\n### The model of the data according to Wardley\n\nThe analysis of the model allowed for formalizing four steps of evolution\nlabeled by default Genesis, Custom built, Product, and Commodity:\n\n(source Simon Wardley\u2019s blog.garvediance.org)\n\nThose are just common labels for a form of capital. For the data, according to\nWardley\u2019s theory, the labels of the four stages are: Unmodeled, divervent,\nconvergent and modeled: (source: learnwardleymapping.com)\n\n### Deriving the model\n\n#### Certainty of the data\n\nLet\u2019s revisit the certainty mechanism to determine if we can adjust the model\nto accommodate the evolution of data within a business. I consider the\ncertainty equivalent to the level of confidence in the decision taken based on\nthis data. Here are the labels I will use:\n\n  * Raw data: In my experience, data begins as raw during the exploratory phase. It lacks ubiquity, residing solely in the database and accessible only through a service and/or an API, essentially a data product (a product driven by data).\n  * Curated data: This marks the second stage of data certainty. Data experts come into play to ensure accuracy and relevance of data representation to the business.\n  * Authoritative: The final stage of certainty. Data is relevant, complete, consistent, documented, and endorsed by domain experts.\n\nThe raw data correspond to the first stage of the evolution. This is a stage\nwhere we define Proof of concepts for example. Then the curated data is linked\nto phases two and three. And eventually, the last stage is when the data is\nauthoritative.\n\n#### The labels of the four steps of evolution\n\nRegarding the notion of certainty and ubiquity, let\u2019s categorize the 4 stages\nof evolution:\n\n  1. POC: This stage involves validating concepts.\n  2. Application: In this stage, the data is neatly linked with a specific use-case.\n  3. Domain: This stage is where it gets interesting: the data represents a solution that can be used to address various use-cases within the same domain (think of the domain as a problem space, similar to in DDD).\n  4. Enterprise: This stage encompasses all domains, representing the total of all problems addressed by a business.\n\nHere is the representation of those elements on a diagram:\n\n### The representation\n\n## Using the diagram: Data-as-a-product and data-contract\n\nNow, let\u2019s use the diagram.\n\nThe data will likely follow the evolution S curve. What is interesting is that\nthe evolution of the properties of the data. Turning raw data into curated\ndata is mastered. There are major design processes that are helpful in such a\ntransition.\n\nTurning the curated data into authoritative data implies that the data is\naccessible and usable, maintained, accurate, but the switch is mainly that the\ndata is endorsed by trusted parties. At the scale of the business, it means\nthat the domain is responsible and accountable for its data as the domain is,\nby default, a trusted party in the organization regarding a specific business\narea.\n\nThe transition is not so sharp when the data leave its prison: when it is\nexposed to the domain.\n\nThis is the point where the product thinking applied to the data brings value.\nAnd this is the point where a data-contract is helpful to:\n\n  * Facilitate the integration in other use cases of the domain\n  * Bring trust in the data\n\nTherefore, thinking of data as a product, like any other product, is something\nthat is required in the exploration stage (it can even be seen as over-\nengineering), but the model illustrates how it is important to treat the data\nas a product to serve a general purpose for the business.\n\n## Conclusion\n\nIn recapping, I have always grappled with one question: where does one begin\nwhen seeking to implement the data mesh paradigm? Through the journey of\nexploring this concept, my most recent and profound insight is: the most\nstrategic starting point lies with the data product.\n\nThe presented model emphasizes the pivotal role of the data product. It is\nprojected as an effective solution to an imperative issue: its significant\nimportance becomes evident as data migrates from a single application sphere\ninto the broader domain. Beyond this, it becomes absolutely critical when the\ndata is expected to deliver tangible value that surpasses its original,\ndefined domain.\n\nThe next phase of our journey in understanding the data mesh paradigm involves\nformalizing a method to assess data maturity accurately. By examining each\npiece of data, contract by contract, and domain by domain, we move closer to\nbuilding a comprehensive and effective mesh. Throughout this process,\nremembering to consider data as a product is crucial. Doing so will reap\nrewards for an organization as it evolves and matures in its data management\nstrategies.\n\nPowered by Hugo | Theme - Jane \u00a9 2015 - 2024 Olivier Wulveryck\n\n", "frontpage": false}
