{"aid": "39958960", "title": "Show HN: Generate landing pages wih email collection in minutes", "url": "https://github.com/m0wer/landing_generator", "domain": "github.com/m0wer", "votes": 1, "user": "m0wer", "posted_at": "2024-04-07 07:33:59", "comments": 0, "source_title": "GitHub - m0wer/landing_generator: Generate landing pages wih email collection in minutes.", "source_text": "GitHub - m0wer/landing_generator: Generate landing pages wih email collection\nin minutes.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nm0wer / landing_generator Public\n\n  * Notifications\n  * Fork 0\n  * Star 2\n\nGenerate landing pages wih email collection in minutes.\n\nidea.sgn.space/landing_generator/\n\n### License\n\nMIT license\n\n2 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# m0wer/landing_generator\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nm0werfix UID and GID in Dockerfile3612168 \u00b7\n\n## History\n\n15 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| build docker always  \n  \n### app\n\n|\n\n### app\n\n| templating, docker, actions, ...  \n  \n### template\n\n|\n\n### template\n\n| imporve template and readme  \n  \n### .env.example\n\n|\n\n### .env.example\n\n| templating, docker, actions, ...  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| build docker always  \n  \n### .pre-commit-config.yaml\n\n|\n\n### .pre-commit-config.yaml\n\n| templating, docker, actions, ...  \n  \n### Dockerfile\n\n|\n\n### Dockerfile\n\n| fix UID and GID in Dockerfile  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| initial commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| add notifications instructions  \n  \n### config.example.yaml\n\n|\n\n### config.example.yaml\n\n| imporve template and readme  \n  \n### docker-compose.yaml\n\n|\n\n### docker-compose.yaml\n\n| fix typo  \n  \n### requirements.in\n\n|\n\n### requirements.in\n\n| templating, docker, actions, ...  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| templating, docker, actions, ...  \n  \n### requirements_dev.in\n\n|\n\n### requirements_dev.in\n\n| add backend  \n  \n### requirements_dev.txt\n\n|\n\n### requirements_dev.txt\n\n| templating, docker, actions, ...  \n  \n### screenshot.png\n\n|\n\n### screenshot.png\n\n| imporve template and readme  \n  \n## Repository files navigation\n\n# Landing generator\n\nGenerate landing pages with email collection in minutes.\n\n## Introduction\n\nThe goal of this project is to provide a simple way to generate landing pages\nwith email collection. The landing pages are generated from a template and the\nconfiguration file.\n\nSeveral pages can be defined, by just providing their texts and other settings\nin the configuration file. The pages are then rendered from the template\nduring the Docker container startup.\n\nThe email collection is done with a simple form that sends the email to the\nbackend, which stores it in a CSV file for each site.\n\nBoth the frontend and the backend are served by the same container, just with\none process per worker.\n\n## Run it\n\nFirst, set up the configuration with:\n\n    \n    \n    mkdir -p ./conf cp config.example.yaml ./conf/config.yaml # edit the config file to add or change the default landing pages\n\n### Docker\n\n    \n    \n    docker run -it --rm \\ -p 8000:80 \\ --name landing_generator \\ -v ./conf/:/app/conf/:ro \\ -v ./data/:/app/data/ \\ -e ADMIN_SECRET=secret \\ ghcr.io/m0wer/landing_generator:master\n\n### Docker compose\n\n    \n    \n    cp .env.example .env # edit the .env file docker compose up -d --build\n\n## Notifications for sigunps\n\nHere is an example script that uses telegram-send to send a notification every\ntime someone signs up:\n\n    \n    \n    #!/bin/bash DIRECTORY_TO_WATCH=\"/data/idea/data/\" # Check if DIRECTORY_TO_WATCH was provided if [[ ! -d \"$DIRECTORY_TO_WATCH\" ]]; then echo \"Error: Directory '$DIRECTORY_TO_WATCH' does not exist.\" exit 1 fi # Using inotifywait to monitor for 'create' and 'modify' events on CSV files inotifywait -m -e create -e modify -e moved_to --format '%w%f' -q \"$DIRECTORY_TO_WATCH\" | while read FILE_PATH do # Check if the event pertains to a CSV file if [[ $FILE_PATH == *.csv ]] then # Get the last line from the file LAST_LINE=$(tail -n 1 \"$FILE_PATH\") # Send the last line via telegram-send telegram-send \"$(basename $FILE_PATH): $LAST_LINE\" fi done\n\n## About\n\nGenerate landing pages wih email collection in minutes.\n\nidea.sgn.space/landing_generator/\n\n### Topics\n\nlanding-page self-hosted startup\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n2 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 1\n\n  * landing_generator\n\n## Contributors 2\n\n  * m0wer m0wer\n  * d3vv3 devve\n\n## Languages\n\n  * CSS 56.1%\n  * HTML 24.8%\n  * Python 12.6%\n  * JavaScript 4.9%\n  * Dockerfile 1.4%\n  * Shell 0.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
