{"aid": "40076831", "title": "State of Halo: Project Contingency 2024", "url": "https://project-contingency.com/blog-post/UJ3P2-State_of_Contingency_2024", "domain": "project-contingency.com", "votes": 1, "user": "airstrike", "posted_at": "2024-04-18 14:45:08", "comments": 0, "source_title": "State of Contingency 2024 - Project Contingency - A Halo Fan Game", "source_text": "State of Contingency 2024 - Project Contingency - A Halo Fan Game\n\n# State of Contingency 2024 - Project Contingency - A Halo Fan Game\n\n### Navigation Bar\n\n>> PLAY THE GAME <<\n\n## State of Contingency 2024\n\nState of Contingency 2024 End of Year Update\n\nBy Zeph - 1 Jan 2024\n\nHello, all! I am Zeph, the new project leader for Contingency. In this update,\nI will provide information explaining the current state of Contingency and\nannounce what to expect in 2024.\n\n### The Game\n\nLets begin with the game as it is currently available to the public. The core\ngameplay of Contingency is more or less complete. The Alpha contains a\ncomplete vertical slice of functionality that allows players to start the\ngame, play as much as they want, and then quit while gameplay statistics are\nretained and added to on subsequent play sessions. That was the threshold\nformer team leader Cobby required for a release and it was met well before the\nAlpha was made public. There are still a good number of technical features on\nContingency's list to finish up but they will only augment the core game. More\non those later.\n\nThe visual fidelity of Contingency is currently nowhere near the bleeding edge\nof lighting and rendering capabilities possible in Unreal Engine 4. But it is\nof a high enough quality that when something is wrong it stands out. A number\nof the game's assets were authored upwards of a decade ago and were absolutely\nstunning compared to the AAA titles that were released/showcased at the time.\nIf the game were released back then, it would have created a media frenzy. But\na great deal of time has passed; and as time passes further the lower-end of\nContingency's graphics will look relatively bad while the higher-end will look\nincreasingly average. Priority one for visual content moving forwards will be\nto replace the remaining temporary meshes, textures, and animations with\nfinalized work so as to reach a \"content complete\" state within the game. A\nlower priority is to address the \"errors\" within the game that put it at risk\nof death by a thousand paper-cuts. Such errors range from UV maps with\nunaligned seams, collision geometry mismatches with render geometry, and so\nforth. I would like to see it all done eventually, but I prefer to have the\ngame leave alpha/beta and hit a v1.0 release over remaining in development\nhell.\n\nOf all the levels in Contingency, both public and private, only Overlord is\nconsidered complete. It was submitted to the project on the condition that it\nnot be modified and I intend to honor that agreement.\n\nCardinal is in an odd spot. I personally consider this level as the game's\ntest laboratory due to it going through immense drastic changes its over its\nlife. If I had the time, I'd love to take a screenshot from each build of the\ngame just to see it evolve and devolve time and time again. A great deal about\nUnreal Engine has been learned by the team through tinkering with this level\nand I consider it to be one visual pass away from reaching the limit of what\nthe current geometry can sustain. I would like to see it get some new geometry\nhere and there to do some cool lighting effects, but it is a low priority.\n\nThe current composition of Asgard is basically a whitebox layout where third\nparty meshes are used instead of white boxes. This has given it a look and\nfeel that suggests it is much further along in development than it actually\nis. There are some custom meshes in the level, but they need to be overhauled\nand expanded to encompass the entire play area. Thus, Asgard should be\nconsidered ready for its first art pass to more successfully blend rugged\nterrain with sleek Forerunner architecture.\n\nJaywalk was introduced to Contingency as a true whitebox level. In the time\nsince the Alpha's release, it has been getting a visual overhaul with new\ngeometry for the roads and buildings. It's all coming together nicely, but it\nisn't quite ready to be shown off just yet.\n\nThe exact fate of the main menu is currently undecided. Its current form was\ncrunched together in the weeks leading up to the Alpha's release. Priority 1\nfor that crunch was to ensure that all available features were controllable\nthrough UI. The end result was functional but it fell short of the original\nvision of the user experience when not playing a match. The good news is that\nthe engineering that went into the main menu during the crunch was quite good\nand can mostly be left as-is even if we don't stick with the current \"flat\"\nUX.\n\n### The Team\n\nNext, let's discuss the state of the team behind Contingency. Among the\ncurrent developers, activity levels are currently low. Very low. I attribute\nthis mostly to the real life of our devs taking priority. Over the past few\nyears I have seen some from the team start families, get new jobs, go back to\nschool, get promotions, begin their own business, move on and publish their\nown game(s), and more. To a lesser extent, the crunch leading up to the\nAlpha's release pushed a few members into burnout. Whatever the cause, a good\nchunk of the leadership has stepped down from their roles and/or left the\nteam. Some of those leadership roles have been filled while others remain\nvacant. Given that the inertia of the game's development was generally\nmaintained by the leadership being active, it has been difficult to move out\nof this most recent bout of low activity. More on this later.\n\nThe infrastructure supporting the team is currently healthy overall. When I\nstepped into the project leader role, I quickly ran into some bus-factor of 1\nscares where some development data was believed lost. Most of those\ndeficiencies have been resolved and as far as I am aware, only a single non-\ncritical one remains to be solved at leisure. It is safe to say that if\nContingency has lost access to any data now, it's simply because that data\nhasn't been handed over for storage. Contingency also recently saw some well\nneeded server upgrades take place. A new generation of hardware components\nshould make all services, both public and private, much more responsive.\n\n### The Future\n\nTo conclude, lets discuss the bigger works in progress and what to expect in\n2024. I'll admit that the planning for Contingency was no less ambitious than\nBungie's feature set for Halo 3, ODST, and Reach. Single-player, Multi-player,\nTheater, Forge, and more were all on the table and I see little reason to cut\nthem as a feature at this point. Especially when some of them are already\nfunctional and viable. Theater mode is mostly complete and mainly needs user\ninterface work completed before it is ready for ring 1 testing and beyond.\nIt's a shame that it hasn't been finished, because it has already been used\ninternally to help track down some bugs. If it were available from the start\nof the Alpha, I feel that a good amount more problems would have been found\nand addressed.\n\nWhile it's not a full fledged single player campaign, solo-play online lobbies\nwill be much less empty thanks to AI/Bot support being added into the game.\nBots won't debut with much more than basic shooter logic, but they will help\nfill lobbies on quiet nights. I won't promise anything in regards to numbers\nor performance yet, but this does open the door to some Big Team Battles on\nthe scale Contingency's founders could only hope to see some point in the\nfuture.\n\nForge is technically supported within the game, but essentially in limbo. I\nfeel that after MCC made its way onto PC, that most of the immediate desire\nfor it to be a part of Contingency started fading away. There's not exactly a\nbig need to craft level authoring tools in Contingency because the level\neditor for the engine is easily available for use. You want a new level in\nContingency? Join the team and use Unreal to add one! But at some point\nContingency may be feature rich enough with AI bots to have a meaningful need\nto design/script encounters in a level at runtime. At that point something\nlike Firefight could easily be a community tweakable feature. Only after\nsomething like that is ready would Forge start getting some more development\ntime from the team (don't expect it in 2024).\n\nOn the back-end of development, tools to better support the team's management\nare being written. Over Contingency's life, all sorts of productivity\nassistance tools have been used to try and organize thoughts and track\nactivity/requirements. Google docs, spreadsheets, kanban boards, issue\ntracking, milestone lists, pinned chat comments, and more have found a use\nover the years but all of them have fallen short in one way or another. The\nprimary objective of this new tooling is to facilitate discovery of what has\nhappened in terms of development and what has yet to take place. When I\nstepped into the project leader role, there was nothing prepared to brief me\non the full scope of the team's work this past decade. I had to scroll, dig,\nand interrogate to find things and there's a good chance I've missed a\nconsiderable chunk of the team's history. If Contingency is still around after\nanother decade, I don't want any new members to have to go through the same\nthing. Instead, I want them to be able to find all they need in one single\nresource.\n\nOnce this tooling is functional, a formal \"Road to 1.0\" will be plotted by a\nfull auditing of the game to identify shortcomings. These will be converted\ndirectly into tasks with a priority, clear scope, and view of dependencies.\nFor instance, an animation identified as missing would have a task created\nstating which source files in Contingency's source repository can be used to\ncreate the animation. Any available animator could find the source file, open\nit to see if they want to work on it, and then assign themselves to the task\nto ensure no one else's time is wasted. The task can then be updated or\ndiscussed as needed similar to a forum thread where the team can see progress\nas it is being made. Any commits to version control can be associated with\nthis task automatically prompting peer review and/or critique if desired. If\ntasks do not get someone assigned to them over an extended amount of time,\nthat is valuable information as well. The tooling can be used to report what\nskills are in the highest demand and prompt a more focused recruiting drive\nfor talent.\n\nIt is my hope that having the development planning organized in this manner\nthat the team can start forming positive feedback loops within itself to be\nmore productive and attract new talent. Speaking of, Contingency is always\nrecruiting. Currently the greatest need is for animators, 3d hard surface\nenvironment artists, and PBR texture artists but we are interested in growing\nthe Contingency team in all disciplines. If you're interested in joining,\nplease put together a portfolio illustrating your competencies and fill out\nthe form from the \"Join Our Team!\" page linked in the header above.\n\nThat's all I have for now.\n\n\\- Zeph\n\n### Legal Stuff\n\nProject Contingency was created under Microsoft's \"Game Content Usage Rules\"\nusing assets from Halo. It's not endorsed by Microsoft and does not reflect\nthe views or opinions of Microsoft or anyone officially involved in producing\nor managing Halo. As such, it does not contribute to the official narrative of\nthe fictional universe. Prolix PHP \u00a9 2014 - 2024 by CSPR DESIGN\n\n### Site Links\n\nAbout / FAQ Forum The Team\n\n### Social Media\n\n", "frontpage": false}
