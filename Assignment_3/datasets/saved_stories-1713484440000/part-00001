{"aid": "40078842", "title": "Limiting the maximum size of Amanda debug logs with a Linux tmpfs mount", "url": "https://utcc.utoronto.ca/~cks/space/blog/linux/DirectorySizeLimitViaTmpfsMount", "domain": "utcc.utoronto.ca", "votes": 1, "user": "rbanffy", "posted_at": "2024-04-18 17:52:39", "comments": 0, "source_title": "Chris's Wiki :: blog/linux/DirectorySizeLimitViaTmpfsMount", "source_text": "Chris's Wiki :: blog/linux/DirectorySizeLimitViaTmpfsMount\n\nChris Siebenmann :: CSpace \u00bb blog \u00bb linux \u00bb DirectorySizeLimitViaTmpfsMount\n\nWelcome, guest.\n\n## Limiting the maximum size of Amanda debug logs with a Linux tmpfs mount\n\nApril 17, 2024\n\nRecently we had a little incident with our Amanda backup system, where the\nAmanda daemon on both the backup server and one particular backup client got\ninto a state where they kept running and, more importantly, kept writing out\nplaintive debugging log messages. We discovered this when first the Amanda\nserver and then an important Amanda client entirely filled up their root\nfilesystems with what was, by that time, a several hundred gigabyte debug log\nfile, which they each wrote into their /var/log/amanda directory tree.\nAfterward, we wanted to limit the size of Amanda debugging logs so that they\ncouldn't fill up the root filesystem any more, especially on Amanda clients\n(which our normal servers, especially our fileservers).\n\nAll of our root filesystems are ext4, which supports quotas for users, groups,\nand \"projects\", as sort of covered in the ext4 manual page. In theory we could\nhave added a size limit on /var/log/amanda with project quotas. In practice\nthis would have required updating the root filesystem's mount options in order\nto get it to take effect (and that means editing /etc/fstab too), plus we have\nno experience with ext4 quotas in general and especially with project quotas.\nInstead we realized that there was a simpler solution.\n\n(We can't use user quotas on the user that Amanda runs as because Amanda also\nhas to write and update various things outside of /var/log/amanda. We don't\nwant those to be damaged if /var/log/amanda gets too big.)\n\nThe easiest way to get a small, size limited filesystem on Linux is with a\ntmpfs mount. Of course the contents of a tmpfs mount are ephemeral, but we\nalmost never look at Amanda's debug logs and so we decided that it was okay to\nlose the past few days of them on a reboot or other event (Amanda defaults to\nonly keeping four days of them). Better yet, with systemd you can add a tmpfs\nmount with a systemd unit and some systemd commands, without having to modify\n/etc/fstab in any way. Some quick checking showed that our /var/log/amanda\ndirectories were all normally quite small, with the largest ones being 25\nMbytes or so, so the extra memory needed for a tmpfs for them is fine.\n\nWithout comments, the resulting systemd var-log-amanda.mount file is:\n\n>\n>     [Unit] Description=Temporary Amanda directory /var/log/amanda # I am not\n> 100% sure about this. It's copied from other # tmpfs mount units.\n> DefaultDependencies=no Conflicts=umount.target Before=local-fs.target\n> umount.target After=swap.target [Mount] What=tmpfs Where=/var/log/amanda\n> Type=tmpfs Options=size=128m,nr_inodes=100000,\\ nosuid,nodev,strictatime,\\\n> mode=0770,uid=34,gid=34 [Install] RequiredBy=local-fs.target\n\n(The UID and GID are those of the standard fixed Ubuntu 'backup' user and\ngroup. Possibly we can specify these by name instead; I haven't experimented\nto see if that's supported by mount and tmpfs. The real Options= line isn't\nsplit across multiple lines this way; I did it here to not break web page\nlayout.)\n\nIn theory it would be better to use zram for this, since Amanda's debug logs\nare all text and should compress nicely. In practice, setting up a zram device\nand a filesystem on it and getting it all mounted has more moving parts than a\ntmpfs mount, which can be done as a single .mount systemd unit.\n\nIf we wanted persistence, another option could be a loopback device that used\nan appropriately sized file on the root filesystem as its backing store. I\nsuspect that the actual mounting can be set up in a single systemd mount unit\nwith appropriate options (since mount has options for setting up the loop\ndevice for you given the backing file).\n\n(2 comments.)\n\nWritten on 17 April 2024.\n\n| \u00ab| IPMI connections have privilege levels, not just IPMI users  \n---|---  \n  \nThese are my WanderingThoughts (About the blog)\n\nFull index of entries Recent comments\n\nThis is part of CSpace, and is written by ChrisSiebenmann. Mastodon: @cks\nTwitter @thatcks\n\n* * *\n\nCategories: links, linux, programming, python, snark, solaris, spam, sysadmin,\ntech, unix, web Also: (Sub)topics\n\nThis is a DWiki. GettingAround (Help)\n\nPage tools: View Source, Add Comment.\n\nAtom Syndication: Recent Comments.\n\nLast modified: Wed Apr 17 22:06:45 2024 This dinky wiki is brought to you by\nthe Insane Hackers Guild, Python sub-branch.\n\n", "frontpage": false}
