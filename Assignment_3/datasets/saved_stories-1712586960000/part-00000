{"aid": "39967514", "title": "A TODO that lives inside your REPL", "url": "https://asciinema.org/a/651510", "domain": "asciinema.org", "votes": 2, "user": "todsacerdoti", "posted_at": "2024-04-08 08:33:56", "comments": 0, "source_title": "A TODO that lives inside your REPL", "source_text": "A TODO that lives inside your REPL - asciinema.org\n\n    \n    \n    [:. Linux terminal .:] # We will make a simple TODO \"app\" in Rye console (REPL) [:. Linux terminal .:] # that lives inside the console itself [:. Linux terminal .:] [:. Linux terminal .:] rye Welcome to Rye console. Use ls for current or lsp or lsp\\ \"prin\" to list parent context. \u00d7> \u00d7> ; We need a block to store our todo items in. They are just strings in our demo \u00d7> todos: { } [Block: ] \u00d7> \u00d7> ; We'll create a function for adding items to the block \u00d7> todo: fn1 { .append! 'todos } [Function(1)] \u00d7> \u00d7> ; Now we test it \u00d7> todo \"Buy milk\" [Block: ^[String: Buy milk] ] \u00d7> todo \"Fix a bike\" [Block: ^[String: Buy milk] [String: Fix a bike] ] \u00d7> \u00d7> display todos \u00bb Buy milk Fix a bike [Block: ^[String: Buy milk] [String: Fix a bike] ] \u00d7> \u00d7> ; Make a function for displaying\n\n00:00-03:25\n\n## A TODO that lives inside your REPL\n\nby refaktor 1 hour ago\n\nShare\n\n.cast - original recording .txt - plain text version .gif - animated GIF\n\nGNU/Linux \u25c6 xterm-256color \u25c6 bash 473 views\n\nThis is a demo of trying to merge a programming language and an user\ninterface. I mentioned I want to explore this with Rye in multiple places.\nIt\u2019s an overly simplistic app for demonstration purposes. What I find\ninteresting (not saying it\u2019s good or actually bad) is that there is no border\nbetween creating and improving the app and using the app ...\n\nThe code can of course be improved and the way we interact with code can also\nbe improved, this is just the initial step. I will try to extend it all in\nfuture sessions.\n\nVisit https://ryelang.org for more info about the language.\n\n## More by refaktor\n\n### Ryelang Spreadsheet and CSV demo 05:02\n\nby refaktor 19 days ago\n\n### ContextPlay Try #1 - Playing with contexts in Rye console 04:27\n\nby refaktor 1 month ago\n\n### Ryelang demo: exploring JSON 01:14\n\nby refaktor 5 months ago\n\n### Installing and building Ryelang on a fresh Ubuntu 02:00\n\nby refaktor 10 months ago\n\nSee all\n\n##### Share this recording\n\n## Link\n\nAppend ?t=30 to start the playback at 30s, ?t=3:20 to start the playback at 3m\n20s.\n\n## Embed image link\n\nUse snippets below to display a screenshot linking to this recording. Useful\nin places where scripts are not allowed (e.g. in a project's README file).\n\nHTML:\n\nMarkdown:\n\n## Embed the player\n\nIf you're embedding on your own page or on a site which permits script tags,\nyou can use the full player widget:\n\nPaste the above script tag where you want the player to be displayed on your\npage.\n\nSee embedding docs for additional options.\n\n##### Download this recording\n\nYou can download this recording in asciicast v2 format, as a .cast file.\n\nDownload\n\n## Replay in terminal\n\nYou can replay the downloaded recording in your terminal using the asciinema\nplay command:\n\n    \n    \n    asciinema play 651510.cast\n\nIf you don't have asciinema CLI installed then see installation instructions.\n\n## Use with stand-alone player on your website\n\nDownload asciinema player from the releases page (you only need .js and .css\nfile), then use it like this:\n\n    \n    \n    <!DOCTYPE html> <html> <head> <link rel=\"stylesheet\" type=\"text/css\" href=\"asciinema-player.css\" /> </head> <body> <div id=\"player\"></div> <script src=\"asciinema-player.min.js\"></script> <script> AsciinemaPlayer.create( '/assets/651510.cast', document.getElementById('player'), { cols: 116, rows: 28 } ); </script> </body> </html>\n\nSee asciinema player quick-start guide for full usage instructions.\n\n##### Generate GIF from this recording\n\nWhile this site doesn't offer GIF conversion at the moment, you can still do\nit yourself with the help of asciinema GIF generator utility - agg.\n\nOnce you have it installed run the following command to create GIF file:\n\n    \n    \n    agg https://asciinema.org/a/651510 651510.gif\n\nOr, if you already downloaded the recording file:\n\n    \n    \n    agg 651510.cast 651510.gif\n\nCheck agg --help for all available options. You can change font family and\nsize, select color theme, adjust speed and more.\n\nSee agg manual for full usage instructions.\n\n  * About\n  * Terms of Service\n  * Privacy Policy\n\nHosted by\n\n  * Mastodon\n  * Forum\n  * Matrix\n  * IRC\n\n", "frontpage": false}
