{"aid": "40029993", "title": "Controlling the HS100 WiFi plug from the command line (2016)", "url": "https://blog.georgovassilis.com/2016/05/07/controlling-the-tp-link-hs100-wi-fi-smart-plug/", "domain": "georgovassilis.com", "votes": 1, "user": "ggeorgovassilis", "posted_at": "2024-04-14 09:54:36", "comments": 0, "source_title": "Controlling the TP-LINK HS100 Wi-Fi smart plug", "source_text": "Controlling the TP-LINK HS100 Wi-Fi smart plug \u2013 George's Techblog\n\nSkip to content\n\nGeorge's Techblog\n\nGeorge Georgovassilis writes about information technology architecture\n\n# Controlling the TP-LINK HS100 Wi-Fi smart plug\n\nGeorge Georgovassilis hardware 07 May 201604 Aug 2022\n\n[update 7 June 2020] Available now on Docker:\nhttps://hub.docker.com/repository/docker/georgovassilis/hs100\n\n[update 27 January 2017] TP-LINK HS100 project on github:\nhttps://github.com/ggeorgovassilis/linuxscripts\n\n[update December 2020] TL;DR; This is about a shell script which controls the\nTP-LINK HS100, HS103s, HS110, HS200 and KP105 Wi-Fi smart power plugs. Other\nmodels in that product line may also work (the tplink-smarthome-api project\nuses a similar concept to this script to communicate with a wider range of\nplugs).\n\n[update January 2021] I realised that when moving from Blogger to WordPress,\nuser comments were lost. I sincerely apologise to everyone who contributed\nquestions and remarks.\n\nI was scurrying down the home automation isle at the local electronics\ndiscounter, firm in my determination to make it without distractions to the\ncomputer section, when one of those fancy new Wi-Fi power sockets caught my\nattention. I haven\u2019t quite caught on with the home automation hype yet, but\nwith everything going on I felt left behind and it seemed like a good idea to\nuse the long weekend ahead and try to catch up a bit. And so it came that I\nleft the shop 40\u20ac poorer and with a TP-LINK HS100 Wi-Fi smart plug [1] in the\npocket.\n\nThe installation is rather easy and unspectacular: a smart phone app helps the\nHS100 connect to the home WLAN and henceforth controls the power plug. The app\nbeing the only way to control the plug bothered me soon, since it meant that\nthe plug could not be controlled by any programme, which, I think, defies the\npurpose of automation.\n\nAdmittedly this doesn\u2019t happen often, but searching turned up nothing\nregarding my problem; people were happily controlling the HS100 through the\napp or Amazon Echo \u2013 TP-Link publishes no technical documentation (though they\ndo offer the GPL part of their code for download) and no thrifty hackers had\nreverse-engineered the plug. I was left alone, bearing grudges.\n\nNot willing to give up my 40\u20ac without a fight, I set up a WLAN access point\nwith a Raspberry Pi (that\u2019s another post coming soon) and armed with tcpdump,\nWireshark and patience I listened.\n\nThe first thing to notice is that the plug contacts a public ntp server in\nFrance (fr.pool.ntp.org)... whatever. Then it looks up devs.tplinkcloud.com on\nAWS in Ireland from which it receives about 3K, containing what appears to be\namong others a security certificate.\n\nThen the app polls the plug at regular 2 second intervals when the phone is\nnot sleeping, which, while a bit too often, shouldn\u2019t impact phone battery too\nmuch in practice.\n\nNow the juicy stuff: the app controls the plug by connecting via TCP to port\n9999 of the plug and exchanging a 55 byte payload. I was absolutely delighted\nto find that the payload varies only at offset 43 between the on and off\ncommands; it doesn\u2019t vary over time, contains no check sums and is not\nencrypted. I was able to extract the payload and put it into a simple shell\nscript [2] (update 26 June 2016: thanks to Thomas Baust for figuring out the\nquerying commands).\n\nUsage is simple: hs100.sh , e.g.\n\nswitch plug on:\n\nhs100.sh 192.168.1.20 9999 on check whether plug is switched on:\n\nThomas Baust documented the encryption algorithm in a comment (which was\nunfortunately lost while migrating from Blogger to WordPress):\n\n> Hi George, This little c-prgramm can decode the messages \u2013 just pipe the raw\n> data to it like: echo\n> AAAAI9Dw0qHYq9+61/XPtJS20bTAn+yV5o/hh+jK8J7rh+vLtpbr|base64 -d|./hs1xdec\n> #include int main(int argc, char *argv[]) { int c=getchar(); int skip=4; int\n> code=0xAB; while(c!=EOF) { if (skip>0) { skip\u2013; c=getchar(); } else {\n> putchar(c^code); code=c; c=getchar(); } } printf(\u201c\\n\u201d); }\n>\n> Hi George, your payload_off sequence is to long, just use\n> AAAAKtDygfiL/5r31e+UtsWg1Iv5nPCR6LfEsNGlwOLYo4HyhueT9tTu3qPeow== Btw: The\n> \u201cencryption\u201d is just xor every Byte with the previous one. As result you\n> will get a Json message with 5bytes Header and maybe one char padding at the\n> end\n>\n> Thomas Baust 26 June 2016\n\nhs100.sh 192.168.1.20 9999 check\n\nHere is an outdated version of the script, head over to github for a recent\none.\n\n    \n    \n    #!/bin/bash ## # Switch the TP-LINK HS100 wlan smart plug on and off, query for status # Tested with firmware 1.0.8 # # Credits to Thomas Baust for the query/status/emeter commands # # Author George Georgovassilis, https://github.com/ggeorgovassilis/linuxscripts ip=$1 port=$2 cmd=$3 check_binaries() { command -v nc >/dev/null 2>&1 || { echo >&2 \"The nc programme for sending data over the network isn't in the path, communication with the plug will fail\"; exit 2; } command -v base64 >/dev/null 2>&1 || { echo >&2 \"The base64 programme for decoding base64 encoded strings isn't in the path, decoding of payloads will fail\"; exit 2; } command -v od >/dev/null 2>&1 || { echo >&2 \"The od programme for converting binary data to numbers isn't in the path, the status and emeter commands will fail\";} command -v read >/dev/null 2>&1 || { echo >&2 \"The read programme for splitting text into tokens isn't in the path, the status and emeter commands will fail\";} command -v printf >/dev/null 2>&1 || { echo >&2 \"The printf programme for converting numbers into binary isn't in the path, the status and emeter commands will fail\";} } # base64 encoded data to send to the plug to switch it on payload_on=\"AAAAKtDygfiL/5r31e+UtsWg1Iv5nPCR6LfEsNGlwOLYo4HyhueT9tTu36Lfog==\" # base64 encoded data to send to the plug to switch it off payload_off=\"AAAAKtDygfiL/5r31e+UtsWg1Iv5nPCR6LfEsNGlwOLYo4HyhueT9tTu3qPeow==\" # base64 encoded data to send to the plug to query it payload_query=\"AAAAI9Dw0qHYq9+61/XPtJS20bTAn+yV5o/hh+jK8J7rh+vLtpbr\" # base64 encoded data to query emeter - hs100 doesn't seem to support this in hardware, but the API seems to be there... payload_emeter=\"AAAAJNDw0rfav8uu3P7Ev5+92r/LlOaD4o76k/6buYPtmPSYuMXlmA==\" usage() { echo Usage: echo $0 ip port on/off/check/status/emeter exit 1 } checkarg() { name=\"$1\" value=\"$2\" if [ -z \"$value\" ]; then echo \"missing argument $name\" usage fi } checkargs() { checkarg \"ip\" $ip checkarg \"port\" $port checkarg \"command\" $cmd } sendtoplug() { ip=\"$1\" port=\"$2\" payload=\"$3\" echo -n \"$payload\" | base64 -d | nc -v $ip $port || echo couldn''t connect to $ip:$port, nc failed with exit code $? } check(){ output=`sendtoplug $ip $port \"$payload_query\" | base64` if [[ $output == AAACJ* ]] ; then echo OFF fi if [[ $output == AAACK* ]] ; then echo ON fi } status(){ payload=\"$1\" code=171 offset=4 input_num=`sendtoplug $ip $port \"$payload\" | od --skip-bytes=$offset --address-radix=n -t u1 --width=9999` IFS=' ' read -r -a array <<< \"$input_num\" for element in \"${array[@]}\" do output=$(( $element ^ $code )) printf \"\\x$(printf %x $output)\" code=$element done } ## # Main programme ## check_binaries checkargs case \"$cmd\" in on) sendtoplug $ip $port \"$payload_on\" > /dev/null ;; off) sendtoplug $ip $port \"$payload_off\" > /dev/null ;; check) check ;; status) status \"$payload_query\" ;; emeter) status \"$payload_emeter\" ;; *) usage ;; esac exit 0\n\n#### Resources\n\n[1] TP-LINK HS100 Wi-Fi smart plug\n\nhttp://www.tp-link.us/products/details/HS100.html\n\n[2] Linux script collection \u2013 HS100 plug control\nhttps://github.com/ggeorgovassilis/linuxscripts/tree/master/tp-link-\nhs100-smartplug\n\nhs100 on Docker hub\nhttps://hub.docker.com/repository/docker/georgovassilis/hs100\n\n### Related\n\n#### Running clamav in Docker under Linux\n\nUpdate 2023.10.20: there is a newer version on Github [3] I'm running ClamAV\n[1] on an Ubuntu 18.04 server in Docker and wanted to document, for\nposteriority and my own dementia, the setup process and considerations.\nThankfully there is an official (?), well-maintained ClamAV image on Docker\nhub. ClamAV can...\n\n28 Oct 2022\n\nIn \"security\"\n\n#### Building a private cloud with Docker\n\nAbstract: In this post I'll describe how to create a private cloud with\nDocker, Varnish and a lot of shell scripting on a set of private (virtual)\nservers. This post assumes intermediate knowledge of related techniques. I\nwill still once in a while go into setup details because, well, this...\n\n14 Sep 2015\n\nIn \"cloud\"\n\n#### My home NAS setup, 2022 edition\n\nThis post is an update of the my 2020 home NAS setup. A few things changed\nsince then, the most important the introduction of snapraid for the media and\narchiving portion of the NAS. The hardware hasn't changed much apart from a\n(preventive) hard-disk replacement; my admiration and gratitude goes...\n\n28 Oct 2022\n\nIn \"hardware\"\n\n  * Tagged\n  * hardware\n  * home automation\n  * TP-LINK HS100\n\nPublished 07 May 201604 Aug 2022\n\n## 107 thoughts on \u201cControlling the TP-LINK HS100 Wi-Fi smart plug\u201d\n\n  1. Petr \u0160mejkal says:\n\n01 Aug 2020 at 8:40\n\nHello, works great with HS100 on Raspbian, works also on my Arch Linux after\ninstalling gnu-netcat, but script is hanging for long time without error, may\nbe missing some dependences?\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n01 Aug 2020 at 8:44\n\nWell... it either \u201cworks great\u201d or it \u201changs\u201d but not both Can you open a\nticket? https://github.com/ggeorgovassilis/linuxscripts/issues\n\nLikeLike\n\nReply\n\n  2. Kent Headrick says:\n\n25 Sep 2020 at 20:17\n\nHI, I\u2019m trying to make this work, so far unsuccessfully. I\u2019m not running a\nlinux script. I\u2019m sending the payload using another program. I tried\nconverting the payload to hex using an online base64 decode tool. A couple of\nthings. The hex output is not 55 bytes, but 46 bytes. Also, the payload on and\npayload off differ at bytes 43, 44 45 and 46. Do you have any advice for what\nto try? Do you have the actual payload going to the unit in hex, as I suspect\nits the base64 decode I\u2019m getting wrong?\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n25 Sep 2020 at 21:08\n\nA user emailed me last year with a similar issue. I think something gets lost\nduring copy-pasting in the browser with online decoders. You probably should\ntry a base64 decoder program for your operating system. The on and off\npayloads differing sounds plausible. The binary payload must be sent to the\nplug; scripts can\u2019t store binary data, so it is written there with the base64\nencoding and later translated to binary with a base64 decoder. If you can run\ndocker, you always can try the dockerised version of the script.\n\nLikeLike\n\nReply\n\n  3. Jordan W. says:\n\n07 Oct 2020 at 14:02\n\nThanks for your efforts figuring out how to communicate with these smart\nplugs! I\u2019ve just acquired several HS103s and your script works wonderfully\nwith them. However, one thing I\u2019ve noticed is that it seems like the script\ntakes a long time to finish running, upwards of 20 \u2013 30 seconds. Is this the\nexpected behavior for these devices and is there anything I can do to speed\nthings up?\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n07 Oct 2020 at 15:23\n\nThanks for letting me know about the HS103s compatibility. If you give the\nscript a name rather than an IP it could be a name resolution issue (eg. DNS\ntrying first to resolve IPv6 before falling back to IPv4). If you add \u201cecho\nlinenumber\u201d statements into key locations at the script and show me the output\nmaybe I can figure it out?\n\nLikeLike\n\nReply\n\n      1. Jordan W. says:\n\n07 Oct 2020 at 16:19\n\nI\u2019ve had a chance to do a little more troubleshooting and figured out the\nissue. For some reason the smart plug is holding the connection open for quite\nawhile after a command is sent, so the script has to wait for it to time out,\nand then parses/displays the output.\n\nThere are two ways to address the issue by varying the invocation of the\nnetcat command in your send_to_plug() function. The first is by adding the \u201cq\u201d\nparameter and the second by adding the \u201cw\u201d parameter. Both of these parameters\ncontrol timeouts in netcat. The \u201cq\u201d parameter tells netcat to disconnect X\nseconds after EOF on STDIN, and the \u201cw\u201d parameter tells netcat to disconnect\nafter the remote end has been idle for X seconds.\n\nIn experimenting with the script, the \u201cq\u201d parameter results in quicker\nexecution, but for very short timeout values may result in netcat\ndisconnecting before it receives the output from the smart plug. This is\nreally only an issue for commands like \u201cstatus\u201d that rely on receiving data\nback. The \u201cw\u201d parameter is safer since it waits until data has been received,\nbut seems to add a couple extra seconds to the overall execution time\nregardless of the timeout used.\n\nHere\u2019s my modification to the netcat invocation in line 64 in the\nsend_to_plug() function:\n\nnc -q 1 -v $ip $port\n\nThat gives me a near instant execution, but I would suggest as a generally\n\u201csafe\u201d modification to the script to use something like -w 5\n\nLikeLike\n\n  4. Nealefelaen says:\n\n30 Oct 2020 at 2:49\n\nThanks for your work on this. The netcat implementation on arch linux doesn\u2019t\nhave a nice timeout that works (as per Jordan W.\u2019s comment) so I rewrote the\nbare functionality in python. Working with a hs110 (including the emeter\nfunctionality \u2013 which is what I bought the plug for).\nhttps://github.com/Nealefelaen/hs100\n\nLikeLike\n\nReply\n\n  5. Todor says:\n\n19 Dec 2020 at 9:26\n\nStill works great on\n\n{\u201csystem\u201d:{\u201cget_sysinfo\u201d:{\u201csw_ver\u201d:\u201d1.1.5 Build 200828\nRel.081157\u2032\u2032,\u201dhw_ver\u201d:\u201d4.0\u2032\u2032,\u201dmodel\u201d:\u201dHS100(EU)\u201d\n\nWhich i just bought from amazon Germany. I\u2019ll now make an android termux\nscript (with termux api app) to turn off the plug and stop charging my phone\nat 85% battery when i leave it plugged overnight. Thank you!\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n20 Dec 2020 at 7:40\n\nThat is a great use case!\n\nLikeLike\n\nReply\n\n    2. BikeTraveler says:\n\n11 Jan 2022 at 16:58\n\nWould you care to share the script, or mention the Android termux command to\nmonitor the battery charge level?\n\nLikeLike\n\nReply\n\n    3. Danijel says:\n\n03 Aug 2022 at 12:10\n\nCould you please specify how this was done? I\u2019m also trying to get this to\nwork with termux but without a clue ATM.\n\nLikeLike\n\nReply\n\n      1. george georgovassilis says:\n\n04 Aug 2022 at 7:18\n\nI don\u2019t want to speak for Todor, but I suspect what he meant was he monitors\nthe phone\u2019s battery level. There are several task automation apps for Android\n(eg. IFTTT) which can execute commands in response to events (such as the\nbattery charge changing).\n\nLikeLike\n\n      2. Danijel says:\n\n04 Aug 2022 at 7:46\n\nYes i do know of IFTTT and monitor the battery, it was Moe the termux (command\nline) command for the TP-Link i was interested it. Like if there is one curl\nor anything similar to use when to tur off and on. Would be glad to get a\nreply on this, but i also found out about \u201cpip install python-kasa\u201d that candy\nfind / TP-Link devices on the network. So i made a script instead to send that\ncommand to turn of and off my plug.\n\nLikeLike\n\n  6. david says:\n\n24 Dec 2020 at 0:16\n\nHi, this works great \u2013 thank you for sharing...do you know if it will also\nwork on the newer KP105 plugs....cant see any reason why it shouldnt\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n24 Dec 2020 at 9:00\n\nSorry David, I haven\u2019t tried the KP105.\n\nLikeLike\n\nReply\n\n      1. david faulkner says:\n\n27 Dec 2020 at 14:01\n\nHi again,\n\nI can confirm that these work the same as the originals\n\n________________________________\n\nLikeLiked by 1 person\n\n      2. david says:\n\n27 Dec 2020 at 14:02\n\nyes, these seem to work the same as the original plugs\n\nLikeLike\n\n  7. BikeTraveler says:\n\n11 Jan 2021 at 2:11\n\nI can confirm that the same shell script, and Nealefelaen\u2019s python script\nabove, both can control a Kasa HS210 3 way switch. I haven\u2019t hooked it up in a\n3 way light circuit yet but the switch relay sounds as though successive \u2018off\u2019\ncommands toggle the state, as evidenced by a slightly different relay sound.\nThe \u2018on\u2019 command makes no relay click noise. My end goal is to implement a\ntime delay turn off function for this outdoor 3 way switched light.\n\nLikeLiked by 1 person\n\nReply\n\n  8. BikeTraveler says:\n\n19 Jan 2021 at 2:21\n\nAlso of interest, Kasa (TP-Link) is/has removed this port 9999 interface on\nnew software updates to the plugs. Best to block Internet access if you have\nthe device active on the Kasa App. You can \u2018request a beta firmware\u2019 with the\nold interface restored. https://www.home-assistant.io/blog/2020/11/23/tplink-\nlocal-access/\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n19 Jan 2021 at 5:45\n\nThanks for bringing this up. When analysing the traffic between app and the\ninternet we found sensitive information like location being transmitted \u2013 the\nonly real security hole in this scenario, imho, is the Kaza app.\n\nLikeLike\n\nReply\n\n  9. Dr P says:\n\n09 Feb 2021 at 18:28\n\nHi George,\n\nWhat an excellent script and resource!\n\nI purchased some KP105s, running out of the box the script works fine on them.\nIt\u2019s pretty cool. I\u2019ve been using them to remotely trigger when Motion detects\nevents from some pi cameras.\n\nBest wishes, Dr P\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n09 Feb 2021 at 18:29\n\nThanks!\n\nLikeLike\n\nReply\n\n  10. Joe says:\n\n12 May 2021 at 22:53\n\nWith the recent Tplink update, it appears to be broken now. It was causing my\nHOOBS to not run. After deleting this TPlink Plugin my HOOBS will run again.\nBut now I can\u2019t install this particular plugin. Any thoughts?\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n13 May 2021 at 4:53\n\nJoe, I\u2019m not familiar with HOOBS (had to google it)... also I don\u2019t own the\nwi-fi plug anymore so I can\u2019t help with maintenance. It looks like github user\nplasticrake (https://github.com/plasticrake) is maintaining the HOOBS plugin\nyou are referring to.\n\nLikeLike\n\nReply\n\n  11. pegnomaspo says:\n\n20 Oct 2021 at 21:58\n\nHello, I launched a wifi accesspoint on a raspberry pi, isolated from the\ninternet, then connected to that wifi with the phone having the Kasa app. But\nwhen launching Kasa to \u201cadd a device\u201d, the app doesn\u2019t accept the smartplug :\n\u201cno internet, make sure that your router is functioning properly and that you\nhave a strong wi-fi signal\u201d, and from there it loops for re-scanning any plug\nnearby. So, as I saw on your comprehensive article that the plug has to reach\ntplink servers to somehow \u201cactivate\u201d, I tried to bypass that step by\ndownloading alternatives apps : PlugMonitor and MyLocalTPlink. With\nPlugMonitor, I can connect directly to the plug\u2019s own WLAN and switch it\nON/OFF through the app but it\u2019s not secure (no password asked by the plug), so\nanyone could connect to the plug\u2019s WLAN I guess, but worse, anyone downloading\nthat app could turn it on/down while I got it down/on. The app can display\ncurrent wattage and notify the phone on which it\u2019s spinning on, or turn the\nplug off, when the wattage crosses a threshold. So it requires : *the phone\nbeing wired to live as long as it has to monitor the plug before it triggers\nit off *+ having the plug as the phone\u2019s wifi-source, so I don\u2019t know if there\nare native ways for the phone to notify other devices on the external-world\ninternet. I never checked but I never heard about spawning an Android VM on a\ntower server, to get rid of the need for a phone to recharge .\n\nTLDR : did you manage to bypass the plug wanting to handshake tplink servers ?\nLike, did you connect your pi to the internet with an ethernet wire, but\nblocked the plug to access the internet, while letting your kasa-phone believe\nit had access to the internet ? (in order to configure the plug as the pi-\nrouter\u2019s client, and not being a self-router anymore)\n\nBy thanking you, someone confused\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n21 Oct 2021 at 4:22\n\nI\u2019m not sure the plug won\u2019t \u201cactivate\u201d (as you write) if it can\u2019t talk to\ntplink servers. The main point of the setup procedure is to get the plug to\nconnect to your home wifi so that the kasa app (on your phone) can talk to the\nplug. Once the plug is connected to your wifi, I think the script will work\neven without the plug ever connecting to tplink servers. While I was still\nusing the hs100 (I don\u2019t any more), I had it (and all other similar devices)\nconnect to a password-protected local wifi with no internet access \u2013 that way\nno one outside your home network can control it.\n\nTo answer your question: after the first setup, I never had the need to re-\nactivate the plug, so I didn\u2019t pursue the goal of running another setup that\nbypasses tplink servers.\n\nLikeLike\n\nReply\n\n      1. david faulkner says:\n\n21 Oct 2021 at 7:38\n\nI can confirm that once the plug is connected to wifi (have you tried\nresetting it first ??) it certainly does connect locally to, for example a\nPi....using Georges\u2019 script it works very well\n\nLikeLike\n\n      2. pegnomaspo says:\n\n21 Oct 2021 at 9:42\n\nthank you for your fast reply, what do you mean by \u201cthe first setup\u201d ? At\nfirst your pi+plug+phone were never reaching the internet ? Or do they and\nthen you isolated them for the rest of their life ?\n\nAny one reading this and still using the device are welcome to answer please,\nthey may be adding constraints to their kasa app from back in 2016 when George\ndid the reverse engineering to when I downloaded and used it, idk...\n\nLikeLike\n\n      3. george georgovassilis says:\n\n21 Oct 2021 at 10:42\n\n> what do you mean by \u201cthe first setup\u201d ? The first time you power up the\n> device\n\n> At first your pi+plug+phone were never reaching the internet During the\n> first-time-ever setup, the phone is connected to the plug\u2019s wifi; at that\n> point, neither the plug nor the phone are connected to the internet and yet\n> they talk to each other.\n\nLikeLike\n\n      4. david faulkner says:\n\n21 Oct 2021 at 10:50\n\nI plug the socket into the mains I open the KASA app and search for / add the\nnew device once done I can control it with the pi\n\nLikeLike\n\n    2. Bj\u00f8rn H\u00e5kon says:\n\n27 Nov 2022 at 16:52\n\nI\u2019m using this Python script: https://github.com/softScheck/tplink-smartplug\n\nThe HS100/HS110 does not need an Ineternet connection at all. The Kasa app\ndoes. It\u2019s phoning home sharing your data with the Kasa servers. Here\u2019s what I\ndo:\n\nWhen the HS100/HS110 is starting up for the first time and after it has been\nreset to factory settings, it sets up it\u2019s own wifi with SSID\nTPLINK_SmartPlug_XXXX and no password. Connect your computer to this wifi\nnetwork and send this command.\n\ntplink-smartplug.py -t 192.168.0.1 -j\n\u2018{\u201cnetif\u201d:{\u201cset_stainfo\u201d:{\u201cssid\u201d:\u201dSSID\u201d,\u201dpassword\u201d:\u201dPASSWORD\u201d,\u201dkey_type\u201d:3}}}\u2019\n\nObviously, you change SSID and PASSWORD to the ssid and password of your own\nwifi network. The target ip is 192.168.0.1.\n\nWhen the plug receives the command, it connects to your wifi and turns off\nit\u2019s own wifi network. If you make a typo, it can\u2019t connect (obviously) and\nyou can simply try again. When it connects to your wifi, you lose connection\nto the plug. Then you connect to your own wifi network and find the plug\u2019s ip\naddress. Now you can control it using the tplink-smartplug.py script. This way\nyou can set up and use the HS100/HS110 plugs in any location that has never\never seen an Internet connection, as long as you have electric power and a\nrouter.\n\nLikeLiked by 1 person\n\nReply\n\n  12. Pingback: Amazon Dash Button und Raspberry Pi steuert eine WLAN Steckdose\n\n  13. Mark says:\n\n28 Nov 2021 at 20:54\n\nThere is a newer article on reverse engineering the smart plug that goes into\nfurther detail at https://www.softscheck.com/en/reverse-engineering-tp-link-\nhs110/ which might be worth linking to for others to look at. Based on that\ninformation I wrote a C# console app at https://github.com/mguinness/kasalink\nfor anyone (like Jim Lewis in the comments) that needs that.\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n28 Nov 2021 at 21:16\n\nThank you, that is very interesting!\n\nLikeLike\n\nReply\n\n  14. Bj\u00f8rn H\u00e5kon says:\n\n27 Nov 2022 at 17:15\n\nJSON is totally unfamiliar to me so I have a couple of questions about the\nJSON strings provided along with the script. This JSON string is supposed to\nadd a new schedule:\n\n\u2018{\u201cschedule\u201d:{\u201cadd_rule\u201d:{\u201cstime_opt\u201d:0,\u201dwday\u201d:[1,0,0,1,1,0,0],\u201dsmin\u201d:1014,\u201denable\u201d:1,\u201drepeat\u201d:1,\u201detime_opt\u201d:-1,\u201dname\u201d:\u201dlights\non\u201d,\u201deact\u201d:-1,\u201dmonth\u201d:0,\u201dsact\u201d:1,\u201dyear\u201d:0,\u201dlongitude\u201d:0,\u201dday\u201d:0,\u201dforce\u201d:0,\u201dlatitude\u201d:0,\u201demin\u201d:0},\u201dset_overall_enable\u201d:{\u201cenable\u201d:1}}}\u2019\n\nMy main question is this: What exactly are the given parameters or arguments\nin the string? What does this mean or do: stime_opt wday (workdays?) smin\netime_opt eact sact emin set_overall_enable\n\nA couple more questions: \u2013 How do I write a JSON string that switches the plug\non in 5 minutes from adding the schedule and is never repeated? \u2013 Can I write\na schedule that will switch the plug on even if the router crashes?\n\nLikeLike\n\nReply\n\n    1. george georgovassilis says:\n\n27 Nov 2022 at 17:51\n\nI\u2019m not sure where you found that JSON example \u2013 it\u2019s neither mentioned in the\nblog nor included in the script. I never reverse-engineered the hs100 protocol\nbut only recorded and replayed what the KASA app sent to the hs100, so I\u2019m\nafraid I can\u2019t answer your question. This lad seems to have deciphered and\ndocumented the protocol, maybe the answer is there:\nhttps://github.com/vinayshanbhag/tplink-smartplug\n\nLikeLike\n\nReply\n\n      1. Bjorn Hakon says:\n\n27 Nov 2022 at 18:12\n\nIf you scroll down the page you linked to, you will find the string under the\nheadline Schedule Commands. I just hoped that you or someone who reads this\nblog might know their JSON much better than I. But, I can of course try to\ncontact the person who found out these strings. If I learn more, I\u2019ll post a\ncomment here because someone else might find it interesting.\n\nLikeLike\n\n      2. george georgovassilis says:\n\n28 Nov 2022 at 4:51\n\nRight. You mentioned that you\u2019re unfamiliar with JSON \u2013 the structure and\nsyntax are actually quite simple. Maybe it helps your understanding if you\npaste the JSON into one of the online formatters which generate a more\nreadable overview, eg https://jsonformatter.curiousconcept.com\n\nLikeLike\n\n### Leave a comment Cancel reply\n\nThis site uses Akismet to reduce spam. Learn how your comment data is\nprocessed.\n\n## You might also like...\n\n#architecture #leadership #programming #security #linux #electronics\n\n## Team topologies fix the Spotify model\n\nThe Spotify model The Spotify model [SPOM] describes an organisational...\n\n10 Jul 202210 Jul 2022\n\n## Team organisation by capabilities\n\nTL;DR: team must match information- and command flow. Team organisation...\n\n25 Sep 202129 Dec 2022\n\n## Technical Debt\n\nTechnical debt is the amount of work needed to decrease...\n\n18 Dec 201816 Jan 2023\n\n## Digitalisation vs. Automation: it is about capabilities\n\nA pre-digital organisation focuses on efficient processes implementation; a\ndigital...\n\n21 Jul 201916 Jan 2023\n\n## Software architecture for 5G networks\n\nThe 5G mobile network specification introduces network function virtualization\n[NFV]...\n\n30 Oct 201816 Jan 2023\n\n## Advanced web security topics\n\n(Updated 22 May 2020) This post discusses web security issues...\n\n16 Apr 201622 May 2020\n\n## Cloud-specific software architecture patterns\n\nThis post is about software application architecture patterns that simplify...\n\n29 Aug 201817 Jan 2023\n\n## About & contact\n\nI'm\n\nGeorge Georgovassilis\n\nand this is my public diary about information system architecture, programming\nand methodologies.\n\n#microcv\n\nenterprise & cloud architecture with international consulting in digitalisation, insurance, banking, finance, government, telecommunication, transportation, retail, realestate and research. BsC | TOGAF | ITIL\n\nFrom animasci.com\n\nSitemap\n\n# Archive\n\n  * Comment\n  * Subscribe Subscribed\n\n    * George's Techblog\n    * Already have a WordPress.com account? Log in now.\n\n  * Privacy\n  *     * George's Techblog\n    * Customise\n    * Subscribe Subscribed\n    * Sign up\n    * Log in\n    * Copy shortlink\n    * Report this content\n    * View post in Reader\n    * Manage subscriptions\n    * Collapse this bar\n\nLoading Comments...\n\n", "frontpage": false}
