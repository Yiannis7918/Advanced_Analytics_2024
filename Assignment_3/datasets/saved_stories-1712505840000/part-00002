{"aid": "39959543", "title": "Rendering string diagrams recursively [pdf]", "url": "https://arxiv.org/abs/2404.02679", "domain": "arxiv.org", "votes": 1, "user": "g0xA52A2A", "posted_at": "2024-04-07 09:23:09", "comments": 0, "source_title": "Rendering string diagrams recursively", "source_text": "[2404.02679] Rendering string diagrams recursively\n\nSkip to main content\n\nWe gratefully acknowledge support from the Simons Foundation, member\ninstitutions, and all contributors. Donate\n\n> math > arXiv:2404.02679\n\n# Mathematics > Category Theory\n\narXiv:2404.02679 (math)\n\n[Submitted on 3 Apr 2024]\n\n# Title:Rendering string diagrams recursively\n\nAuthors:Celia Rubio-Madrigal, Jules Hedges\n\nView a PDF of the paper titled Rendering string diagrams recursively, by Celia\nRubio-Madrigal and Jules Hedges\n\nView PDF HTML (experimental)\n\n> Abstract:String diagrams are a graphical language used to represent\n> processes that can be composed sequentially or in parallel, which correspond\n> graphically to horizontal or vertical juxtaposition. In this paper we\n> demonstrate how to compute the layout of a string diagram by folding over\n> its algebraic representation in terms of sequential and parallel composition\n> operators. The algebraic representation can be seen as a term of a free\n> monoidal category or a proof tree for a small fragment of linear logic. This\n> contrasts to existing non-compositional approaches that use graph layout\n> techniques. The key innovation is storing the diagrams in binary space-\n> partition trees, maintaining a right-trapezoidal shape for the diagram's\n> outline as an invariant. We provide an implementation in Haskell, using an\n> existing denotational graphics library called Diagrams. Our renderer also\n> supports adding semantics to diagrams to serve as a compiler, with matrix\n> algebra used as an example.\n\nSubjects:| Category Theory (math.CT); Computational Geometry (cs.CG)  \n---|---  \nCite as:| arXiv:2404.02679 [math.CT]  \n(or arXiv:2404.02679v1 [math.CT] for this version)  \nhttps://doi.org/10.48550/arXiv.2404.02679arXiv-issued DOI via DataCite  \n  \n## Submission history\n\nFrom: Jules Hedges [view email] [v1] Wed, 3 Apr 2024 12:22:24 UTC (621 KB)\n\nFull-text links:\n\n## Access Paper:\n\nView a PDF of the paper titled Rendering string diagrams recursively, by Celia\nRubio-Madrigal and Jules Hedges\n\n  * View PDF\n  * HTML (experimental)\n  * TeX Source\n  * Other Formats\n\nview license\n\nCurrent browse context:\n\nmath.CT\n\n< prev | next >\n\nnew | recent | 2404\n\nChange to browse by:\n\ncs cs.CG math\n\n### References & Citations\n\n  * NASA ADS\n  * Google Scholar\n  * Semantic Scholar\n\na export BibTeX citation Loading...\n\n## BibTeX formatted citation\n\n\u00d7\n\nData provided by:\n\n### Bookmark\n\n# Bibliographic and Citation Tools\n\nBibliographic Explorer (What is the Explorer?)\n\nLitmaps (What is Litmaps?)\n\nscite Smart Citations (What are Smart Citations?)\n\n# Code, Data and Media Associated with this Article\n\nCatalyzeX Code Finder for Papers (What is CatalyzeX?)\n\nDagsHub (What is DagsHub?)\n\nGotit.pub (What is GotitPub?)\n\nPapers with Code (What is Papers with Code?)\n\nScienceCast (What is ScienceCast?)\n\n# Demos\n\nReplicate (What is Replicate?)\n\nHugging Face Spaces (What is Spaces?)\n\nTXYZ.AI (What is TXYZ.AI?)\n\n# Recommenders and Search Tools\n\nInfluence Flower (What are Influence Flowers?)\n\nConnected Papers (What is Connected Papers?)\n\nCORE Recommender (What is CORE?)\n\n  * Author\n  * Venue\n  * Institution\n  * Topic\n\n# arXivLabs: experimental projects with community collaborators\n\narXivLabs is a framework that allows collaborators to develop and share new\narXiv features directly on our website.\n\nBoth individuals and organizations that work with arXivLabs have embraced and\naccepted our values of openness, community, excellence, and user data privacy.\narXiv is committed to these values and only works with partners that adhere to\nthem.\n\nHave an idea for a project that will add value for arXiv's community? Learn\nmore about arXivLabs.\n\nWhich authors of this paper are endorsers? | Disable MathJax (What is MathJax?)\n\n  * About\n  * Help\n\n  * Contact\n  * Subscribe\n\n  * Copyright\n  * Privacy Policy\n\n  * Web Accessibility Assistance\n  * arXiv Operational Status Get status notifications via email or slack\n\n", "frontpage": false}
