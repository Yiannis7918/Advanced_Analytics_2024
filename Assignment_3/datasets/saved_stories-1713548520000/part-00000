{"aid": "40085543", "title": "Tips on how to structure your home directory (2023)", "url": "https://unixdigest.com/tutorials/tips-on-how-to-structure-your-home-directory.html", "domain": "unixdigest.com", "votes": 5, "user": "hggh", "posted_at": "2024-04-19 11:39:55", "comments": 0, "source_title": "Tips on how to structure your home directory", "source_text": "Tips on how to structure your home directory\n\n# Tips on how to structure your home directory\n\nPublished on 2023-09-04. Modified on 2023-09-07.\n\nSomeone wrote me an email and asked if I could share some tips on how to\nstructure the $HOME directory, so here we go.\n\nStructuring or organizing directories is not much different from structuring\nor organizing other stuff and it really comes down to what makes the most\nsense to you - at least as long as you're only dealing with your own\ndirectories. As soon as you're dealing with an organization, things can very\nquickly get out of hand.\n\nThe main purpose behind any kind of organizing is efficiency. That really is\nthe keyword. You need to be able to easily and quickly find what you're\nlooking for and just as easily and quickly be able to store what needs to be\nstored.\n\nOver the years I have changed my directory structure for my home directory a\ncouple of times, but not so for about the last 10+ years because I have\nsettled on something that works really well for me.\n\nI don't like clutter and I try to keep things simple. If I need some kind of\nrule book in order to remember how to store my files in my home directory,\nthen this is a clear sign that something has gone wrong.\n\nIn my home directory I have all the basic hidden stuff which is a part of any\nmodern Unix operating system such as .config, .aliases, .profile, .gnupg,\n.mozilla, etc. Though I would prefer that all applications would respect the\nXDG_CONFIG_HOME, which defaults to $HOME/.config, I don't mess with that and\ngenerally don't care too much about that.\n\nIn the past I kept my $HOME in Git - the right way ;), which is a really great\nway to organize dotfiles. Today I still put all my dotfiles in Git because I\nlike to keep a history of changes, but I only leave those dotfiles in place\nwhich work identically across the different systems I use. The setup specific\ndotfiles is kept in a \"dotfiles\" directory and I then use symlinks (more about\nthat in a little while).\n\nRegarding normal files and directories I primarily use two methods of\norganizing, namely \"category\" and \"dates\".\n\nThis is my basic directory structure:\n\n    \n    \n    bin data edata mnt usr/dotfiles\n\nBesides from the above, I just leave the Desktop and Downloads directories,\nwhich different applications seem to want to shove down the throat of\neverybody. In the past I \"fought\" against those, because I generally don't use\nthem and I don't like them, but life is just too short to mess with crap like\nthat.\n\nUpdate 2023-09-04: You can set directories such as Desktop, Downloads and\nothers with the user-dirs.dirs - settings for XDG user dirs, which most\napplications should respect (thanks Hugo for pointing this out!)\n\nIn the bin directory I keep my shell scripts and personal binary executables\n(not stuff installed via the package manager).\n\nThe mnt directory I use for different mount points, like when I mount an SD\ncard, a USB disk, some of the shared storage I use in my homelab.\n\nIt looks something like this:\n\n    \n    \n    mnt \\foo \\bar \\baz\n\nI never auto mount, but generally use shell scripts for mounting. So if I have\na USB disk I call \"foo\", I have a shell script called mfoo. It doesn't matter\nhow the \"foo\" disk gets recognized by the system, the shell script will make\nsure that the disk gets mounted at mnt/foo each time, and if the disk is\nencrypted, it will prompt me for the passphrase, if I don't use a key.\n\nThe usr/dotfiles directory is kept in Git together with generic dotfiles that\nwork identically across all systems, like .aliases. I use symlinks to the\nrelevant files in the dotfiles directory. It looks something like this:\n\n    \n    \n    $ ls -l ~/usr/dotfiles/config/i3 freebsd-config linux-config\n    \n    \n    $ ls -l ~/.config/i3 config -> /home/foo/usr/dotfiles/config/i3/linux-config\n\nlinux-config is then a specific configuration file for i3 which I only use on\nmy Linux systems. This might be because the shortcut I use to run Firefox,\nstarts Firefox in a AppArmor controlled Firejail, which doesn't exist on\nFreeBSD. On FreeBSD I might use Capsicum to get a similar experience. Just as\nan example.\n\nI have a couple of other subdirectories in the $HOME/usr directory besides the\ndotfiles directory, but those are not really relevant to mention in detail for\nthis article (a directory for some outdated shell scripts, some wallpapers,\netc.)\n\nNOTE: Configuration files (dotfiles) can be managed in many different ways. I\nhave changed my approach a couple of times throughout the years. My preferred\nmethod is to keep my $HOME in Git. If you only run a single system or similar\nsystems I can highly recommend the method I describe in the tutorial I have\nlinked to.\n\nBut remember this, don't just follow what other people tell you to do, find\nthe way that makes you the most productive, the way that is best wired to \"fit\nyour brain, your way of thinking\" and then simply change that if you later\nfind a more productive way.\n\nThe data and edata directories are the two main directories where I keep all\nmy stuff. These two directories are ZFS datasets that run on a mirrored pool\nof disks that are separate from my root installation. I run both FreeBSD and\nseveral different Linux distributions on my main workstation and these each\nrun on their own set of disks.\n\nAll of this could be setup in other ways too, but I prefer this setup. I can\neasily mount both data and edata from both FreeBSD and Linux.\n\nThe difference between data and edata is that edata is a ZFS native encrypted\ndataset.\n\nBy utilizing ZFS I regularly use snapshots and ZFS send and receive for easy\nbackup to network storage. This can be done even without decrypting the\nencrypted dataset.\n\nYou could ask what the point is of having both an encryptet dataset and an\nunencryptet dataset, why not just put everything into the encryptet dataset?\n\nThe fact is that I would rather not have anything encryptet at all. Encryption\nis great for privacy, but it is an absolute horrible layer of complexity to\nput on top of an already complex layer of a filesystem and ZFS encryption is\nnot without its bugs, see issues 13533 and 14330.\n\nTIP: I highly recommend that you ALWAYS backup all your important data to\nmultiple different storage solutions and locations - it's okay to be paranoid\nabout important data.\n\nActually, you SHOULD be paranoid about important data. I learned this the\nreally hard way - a long time ago - when I had just finished writing a 200+ A4\npages book and then lost everything because of a silly mistake and had to\nstart all over and write the book again!\n\nIt is impossible to describe that very special feeling that arises when you\nhave just realized what just happened! Noooooooooooooo! Pleeeeeeaseeeeee\nNOOOOOOOOOOO! (utter despair and disbelief - LOL).\n\nSo, today I not only use ZFS send and receive, but I also copy data to other\nfilesystems all together, using rsync. For encryption I utilize both ZFS\nnative encryption, GELI (for my main FreeBSD root disks) and LUKS (for my main\nLinux root disks) and I also not only follow the 3-2-1 backup rule, but add\nfurther copies to multiple systems. That way, even if some bug is found that\nmight cause a problem for me, I have a high degree of being able to get my\nfiles without having to mess with the problem.\n\nI do NOT use cloud storage for anything important. I rather keep local copies\nat places like family, friends or in a safety deposit box (unfortunately,\nsafety deposit boxes are currently being removed from the banks in Denmark).\n\nIn the data directory I have a few subdirectories:\n\n    \n    \n    books notes source\n\nThe books directory contains books I have written or I am working on.\n\nThe source directory contains source code for various projects I work on.\n\nThe notes directory contains a huge amount of personal notes on everything\nfrom health to politics to computer related subjects. I write everything in\npure text, mainly in Markdown or just without any special markup. Everything\nis structured according to category or subject and it looks like this (short\nversion):\n\n    \n    \n    data/notes/ astronomy business electronics health it language ...\n\nEach main subject also has a subdirectory called files which I use for stuff I\nfind online related to the subject. Files in the files directory can be\nimages, text, audio and video. If I only have a few files, I just dump them\nall in the files directory, but if I have a lot, I organize them further by\nputting them in the relevant categories.\n\nWithin each category of directory I might also keep a hidden subdirectory\ncalled .outdated. I use this hidden directory to put stuff away that is, well,\noutdated, but might still come in handy.\n\nIt then looks something like this:\n\n    \n    \n    $ tree . \u2514\u2500\u2500 data \u2514\u2500\u2500 notes \u2514\u2500\u2500 it \u2514\u2500\u2500 operating-systems \u251c\u2500\u2500 freebsd \u2502 \u251c\u2500\u2500 .outdated \u2502 \u251c\u2500\u2500 files \u2502 \u2502 \u251c\u2500\u2500 audio \u2502 \u2502 \u251c\u2500\u2500 images \u2502 \u2502 \u251c\u2500\u2500 text \u2502 \u2502 \u2502 \u2514\u2500\u2500 why-we-migrated-away-from-y-at-foo.pdf \u2502 \u2502 \u2514\u2500\u2500 video \u2502 \u2502 \u2514\u2500\u2500 how-we-setup-y-at-z.mp4 \u2502 \u251c\u2500\u2500 how-to-do-x.md \u2502 \u2514\u2500\u2500 how-to-setup-y.md \u251c\u2500\u2500 linux \u2514\u2500\u2500 openbsd\n\nI always keep an exported shell variable that contains the location of my\nnotes. That way I can easily link to any other document or external file from\nwithin my notes and use Vim to open the file (if it's a text document) by\npressing gf or use Vim's build in ability to execute a shell command from\nwithin the document. I use that to view PDF files or play a video, etc.\n\nIn my notes I might have a Markdown link to a PDF file which looks like this:\n\n    \n    \n    This is the [foo document]($NOTES/it/operating-systems/freebsd/files/text/foo.pdf) relevant for information about foo.\n\nWhen you have setup a default application for reading PDF files, then from\nwithin Vim you can just place the cursor on the filename and then press gx and\nVim will open up the PDF file in the relevant PDF reader. Or you can copy and\npaste the path to the file and then open it with your PDF reader by typing !\nfrom within Vim (I generally use MuPDF or zathura for reading PDF documents):\n\n    \n    \n    :!mupdf $NOTES/it/operating-systems/freebsd/files/text/foo.pdf\n\nThis works for other applications as well, such as opening video with mpv or\nimages with something like feh.\n\nNOTE: Hyphen vs underscore in filenames and directory names?\n\nOriginally, when I stopped using Windows back in about 1998, I was used to\nusing spaces between words in filenames and directories. As I progressed into\nthe world of Linux and BSD, I changed all spaces to underscores, but since I\nhave done (and still do) a lot of web development I eventually settled on\nhyphens. I not only think it looks better, but the fact is that search engines\ninterpret hyphens in file and directory names as spaces between words.\nUnderscores are usually not recognized, and as such, their presence can\nnegatively affect search engine optimization. Even though files in my home\ndirectory are my private files and not something I put out on the web, I have\njust settled on using hyphens everywhere.\n\nFilename \"foo_bar_baz\" becomes \"foobarbaz\" on a search engine, whereas \"foo-\nbar-baz\" becomes \"foo bar baz\".\n\nAs mentioned, I also keep an encrypted directory called edata. I do that\nbecause I believe that it's important to encrypt private stuff in case your\ncomputer gets stolen.\n\nTIP: Remember that if you use encryption for anything which other family\nmembers might need to be able to access in case you pass away, you need to\nmake sure that they know how to do that!\n\nThe edata directory is organized in a similar fashion with \"categories\" being\nthe main structure.\n\n    \n    \n    documents \\letters \\foo \\bar \\receipts \\media \\family \\audio \\photos \\2022 \\2023 \\video \\2022 \\2023 \\foo \\photos \\2022 \\2023 \\video \\2023 \\projects \\foo \\documents \\email \\letters \\media \\photos \\2023 \\bar \\baz\n\nSubdirectories within documents and projects are further subdivided by\ncategories depending on the relevant context.\n\nTIP: I have one basic rule which I implement regarding naming files and\ndirectories. The rule is this: I need to be able to easily determine what\nsomething is just by looking at the name.\n\nIf you stumble upon a file that you don't know what is just by looking at the\nname of the file, open the file immediately and see what it is and then rename\nit to something that makes better sense the next time you happen to look at\nthe filename.\n\nIf you keep leaving files and directories in a mess, it quickly becomes very\ndifficult to fix later.\n\nI personally use long and descriptive file names whenever it's needed to keep\nme from having to open the file in order to determine what the file is about.\n\nI have many times seen a mess like this in someones directory (I believe we\nhave all been there at some point LOL):\n\n    \n    \n    document.pdf document2.pdf document3.pdf Document.pdf document-new.pdf new-new-document.pdf new-new-new-document.pdf old-document.pdf ...\n\nIf you're new to working with files and directories, you will most likely\nchange your structure and setup more than once - don't worry about it, that's\nnormal, it means you're evolving and improving your setup :)\n\nLast, but not least, I don't keep old data lying around forever. When I am\nsure something isn't useful any longer, I delete it.\n\nIf you have any comments or corrections please feel free to email them to me.\nAlso, if you found any of the content on this website useful consider\nsupporting me on Patreon ;)\n\n", "frontpage": true}
