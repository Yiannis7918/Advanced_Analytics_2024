{"aid": "40024639", "title": "Zed Multibuffers not planned for VSCode", "url": "https://github.com/microsoft/vscode/issues/192955", "domain": "github.com/microsoft", "votes": 2, "user": "behnamoh", "posted_at": "2024-04-13 17:36:53", "comments": 0, "source_title": "Add support for \"multi-buffers\" as seen in Zed \u00b7 Issue #192955 \u00b7 microsoft/vscode", "source_text": "Add support for \"multi-buffers\" as seen in Zed \u00b7 Issue #192955 \u00b7\nmicrosoft/vscode \u00b7 GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nmicrosoft / vscode Public\n\n  * Notifications\n  * Fork 27.5k\n  * Star 158k\n\nJump to bottom\n\n# Add support for \"multi-buffers\" as seen in Zed #192955\n\nClosed\n\nscottwillmoore opened this issue Sep 13, 2023 \u00b7 5 comments\n\nClosed\n\n# Add support for \"multi-buffers\" as seen in Zed #192955\n\nscottwillmoore opened this issue Sep 13, 2023 \u00b7 5 comments\n\nLabels\n\neditor-core Editor basic functionality feature-request Request for new\nfeatures or functionality workbench-editors Managing of editor widgets in\nworkbench window\n\nMilestone\n\nBacklog Candidates\n\n## Comments\n\n###\n\nscottwillmoore commented Sep 13, 2023 \u2022\n\n### What?\n\nThe new editor Zed has a feature titled \"multi-buffers\". It would be awesome\nif we could get support for this in Visual Studio Code.\n\n> Multi-buffers are edited much like ordinary buffers, but they contain\n> editable excerpts from multiple different files. They're used in multiple\n> ways in Zed. In the case of project search, you'll see an excerpt with a few\n> context lines surrounding every match.Multi-buffers allow you to perform\n> multi-cursor edits that span multiple files. When you save a multi-buffer,\n> every excerpted file is saved.\n\n### Why?\n\nThe use-case promoted by Zed uses this feature for search and replace across a\nproject. In my opinion this provides a better UI/UX than the current search\nand replace in Visual Studio Code. In my opinions it has some advantages:\n\n  * You can see more context around your search result\n  * You can edit your search result in-place\n  * You view your search result in the larger editor area, when compared with the compact side bar area\n\nHowever, I have an additional use-case, that I have not seen implemented. It\ncould be used to complement or extend nested files. For example, in the\nexplorer I have *.jsx and *.tsx files grouped with $(capture).module.css. It\nis annoying to switch between these two files, however with multi-buffers they\ncould be opened together in a single editor. This could be extended for a\nvariety of patterns:\n\n  * *.c with $(capture).h\n  * *.cpp with $(capture).h, $(capture).hpp\n  * *.css with $(capture).*.css\n  * *.go with $(capture)_test.go\n  * *.js with $(capture).*.js\n  * *.ts with $(capture).js, $(capture).*.js, $(capture).*.ts\n  * .gitignore with .gitattributes and .gitmodules\n  * package.json with package-lock.json\n  * tsconfig.json with tsconfig.*.json\n  * ...\n\nI am sure, given a suitable API extension authors will be able to find even\nmore use-cases for \"multi-buffers\".EDIT: I would love to hear other use-cases\nfrom users.  \n---  \nThe text was updated successfully, but these errors were encountered:  \n  \nVSCodeTriageBot added the triage-needed label Sep 13, 2023\n\nVSCodeTriageBot assigned bhavyaus Sep 13, 2023\n\nbhavyaus assigned rebornix and unassigned bhavyaus Sep 14, 2023\n\nVSCodeTriageBot removed the triage-needed label Sep 14, 2023\n\nrebornix assigned bpasero and unassigned rebornix Sep 15, 2023\n\nbpasero added feature-request Request for new features or functionality\neditor-core Editor basic functionality workbench-editors Managing of editor\nwidgets in workbench window labels Sep 16, 2023\n\nbpasero removed their assignment Sep 16, 2023\n\nMember\n\n###\n\nbpasero commented Sep 16, 2023\n\nWe might already have a feature request that allows to multi-select over\nmultiple editors.  \n---  \n  \nVSCodeTriageBot added this to the Backlog Candidates milestone Sep 16, 2023\n\nCollaborator\n\n###\n\nVSCodeTriageBot commented Sep 16, 2023\n\nThis feature request is now a candidate for our backlog. The community has 60\ndays to upvote the issue. If it receives 20 upvotes we will move it to our\nbacklog. If not, we will close it. To learn more about how we handle feature\nrequests, please see our documentation.Happy Coding!  \n---  \n  \n###\n\nxpe commented Oct 7, 2023 \u2022\n\nMy use case: I often have small text files (JSON for example) that I would\nlike to concatenate together for easy viewing and editing. I want this so much\nthat I started looking into writing a VS Code extension for it, but the\nexisting API support isn't what I need yet.Claim: multi-buffers should be\nfirst-class, not something requiring an extension.Why? In short, once you\nunderstand what multi-buffers can do -- relaxing the notion of one-buffer to\none-file -- it transforms what you can do with a text editor. The idea has\nbeen around a long time but too often unused.Let me an example: imagine being\nable to interleave various other documents, selectively inlining their content\nto serve some larger purpose/narrative. Yes, this will vary based on the\ndocument type, use case, and so on.\n\n  * What about viewing/reading one file that summarizes topical changes across multiple files?\n  * What about building i.e. derivative views of a code base? Bringing functions side-by-side that otherwise are scattered across a directory tree?\n\nBut what if the above were easy and didn't require coding or templating or\ncomplex commands? What if it was trivial with a text editor? I don't know if\nmy sense of potential and wonder is getting across... sorry if it isn't, but I\nhope if you understand what I'm saying, your eyes will open. \ud83e\udd85 \ud83e\udd2f  \n---  \n  \nCollaborator\n\n###\n\nVSCodeTriageBot commented Nov 6, 2023\n\nThis feature request has not yet received the 20 community upvotes it takes to\nmake to our backlog. 10 days to go. To learn more about how we handle feature\nrequests, please see our documentation.Happy Coding!  \n---  \n  \nCollaborator\n\n###\n\nVSCodeTriageBot commented Nov 16, 2023\n\n\ud83d\ude41 In the last 60 days, this feature request has received less than 20\ncommunity upvotes and we closed it. Still a big Thank You to you for taking\nthe time to create this issue! To learn more about how we handle feature\nrequests, please see our documentation.Happy Coding!  \n---  \n  \nVSCodeTriageBot closed this as not planned Won't fix, can't repro, duplicate,\nstale Nov 16, 2023\n\ngithub-actions bot locked and limited conversation to collaborators Dec 31,\n2023\n\nSign up for free to subscribe to this conversation on GitHub. Already have an\naccount? Sign in.\n\nLabels\n\neditor-core Editor basic functionality feature-request Request for new\nfeatures or functionality workbench-editors Managing of editor widgets in\nworkbench window\n\n6 participants\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
