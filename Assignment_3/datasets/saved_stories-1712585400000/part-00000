{"aid": "39967345", "title": "Workman Layout for Vim", "url": "https://axiomatic.neophilus.net/workman-layout-for-vim/", "domain": "neophilus.net", "votes": 1, "user": "rcarmo", "posted_at": "2024-04-08 08:08:54", "comments": 0, "source_title": "Axiomatic Semantics", "source_text": "Workman layout for Vim \u2013 Axiomatic Semantics\n\n# Axiomatic Semantics\n\n## Workman layout for Vim\n\nFor those of us who REALLY need to type using three layouts.\n\nAugust 13, 2013 Reading time: about 4 minutes (797 words).\n\nI\u2019ve recently switched keyboard layouts from Dvorak to Workman. Dvorak has\nbeen good to me over the past 5 years or so, but the philosophy behind it\nwasn\u2019t actualised in it\u2019s final design. Workman has been optimised for English\nand minimises finger strain etc etc. There\u2019s no point rabbiting on about it as\nall of my praises or critiques are already well fleshed out on the Workman\nwebsite.\n\nIt\u2019s been two weeks or so since the switch and I\u2019m at the proficiency stage\nwhere I\u2019m not yelling at the awkwardness of my inability to find a letter, but\nif the switch from Qwerty to Dvorak is any indication it\u2019ll be a couple of\nmonths until I\u2019m completely up to speed.\n\nI had a fantastic Vim map for Dvorak suggested by Adam Davis, which kept the\nQwerty h,j,k,l navigation keys in the same place; remapping sane Dvorak keys\nwith minimal disruption. So obviously something similar for Workman that\ndidn\u2019t disrupt Vim flow is needed.\n\nTaking the laziest approach first; google tells me there are only two current\nsuggestions. First, Matt Weolk has taken the complete remap Qwerty:Workman\napproach, which is outlined in this gist and takes the idea from colqer; a\nColemak solution to the same issue. I really don\u2019t like the blind approach\nthis method uses as I remember Vim keybindings more on their associations (y =\nyank), than muscle memory of their original Qwerty locations. The second\nsolution is a simple j \u2194 t switch discussed in this thread. Closer to what I\u2019m\nafter, and I used it for a while; but ultimately the navigation keys being\nseparated and not entirely on the home row doesn\u2019t sit with me.\n\nSo, here\u2019s my attempt at a decent Workman remapping for Vim:\n\n    \n    \n    nnoremap l o nnoremap o l nnoremap L O nnoremap O L nnoremap j n nnoremap n j nnoremap J N nnoremap N J nnoremap gn gj nnoremap gj gn nnoremap k e nnoremap e k nnoremap K E nnoremap E <nop> nnoremap gk ge nnoremap ge gk nnoremap h y onoremap h y nnoremap y h nnoremap H Y nnoremap Y H\n\nh,j,k,l are replaced by the Workman y,n,e,o home keys, with a few new\nassociations:\n\n  * (Y)ank -> (H)aul\n  * Search (N)ext -> (J)ump\n  * (E)nd word -> brea(K) of word [yeah, that one\u2019s a push...]\n  * (O)pen new line -> (L)ine\n\nConsidering I now use three different layouts depending on where I am, I\u2019ve\nhad to set up a layout remap function in my .vimrc. Here it is in it\u2019s present\nstate at the time of writing; check my dotfiles repository for updates though.\n\n    \n    \n    \" Keyboard ************************** function Keyboard(type) if a:type == \"dvorak\" call UnmapWorkman() nnoremap d h nnoremap h j nnoremap t k nnoremap n l nnoremap s : nnoremap S : nnoremap j d onoremap j d nnoremap l n nnoremap L N nnoremap - $ nnoremap _ ^ nnoremap N <C-w><C-w> nnoremap H 8<Down> nnoremap T 8<Up> nnoremap D <C-w><C-r> elseif a:type == \"workman\" call UnmapDvorak() \"(O)pen line -> (L)ine nnoremap l o nnoremap o l nnoremap L O nnoremap O L \"Search (N)ext -> (J)ump nnoremap j n nnoremap n j nnoremap J N nnoremap N J nnoremap gn gj nnoremap gj gn \"(E)nd of word -> brea(K) of word nnoremap k e nnoremap e k nnoremap K E nnoremap E <nop> nnoremap gk ge nnoremap ge gk \"(Y)ank -> (H)aul nnoremap h y onoremap h y nnoremap y h nnoremap H Y nnoremap Y H else \" qwerty call UnmapDvorak() call UnmapWorkman() endif endfunction function UnmapDvorak() \"Unmaps Dvorak keys silent! nunmap d silent! nunmap h silent! nunmap t silent! nunmap n silent! nunmap s silent! nunmap S silent! nunmap j silent! ounmap j silent! nunmap l silent! nunmap L silent! nunmap - silent! nunmap _ silent! nunmap N silent! nunmap H silent! nunmap T silent! nunmap D endfunction function UnmapWorkman() \"Unmaps Workman keys silent! nunmap h silent! ounmap h silent! nunmap j silent! nunmap k silent! nunmap l silent! nunmap y silent! nunmap n silent! nunmap e silent! nunmap o silent! nunmap H silent! nunmap J silent! nunmap K silent! nunmap L silent! nunmap Y silent! nunmap N silent! nunmap E silent! nunmap O endfunction function LoadKeyboard() let keys = $keyboard if (keys == \"workman\") call Keyboard(\"workman\") else call Keyboard(\"dvorak\") endif endfunction autocmd VimEnter * call LoadKeyboard() :noremap <Leader>q :call Keyboard(\"qwerty\")<CR>:echom \"Qwerty Keyboard Layout\"<CR> :noremap <Leader>d :call Keyboard(\"dvorak\")<CR>:echom \"Dvorak Keyboard Layout\"<CR> :noremap <Leader>w :call Keyboard(\"workman\")<CR>:echom \"Workman Keyboard Layout\"<CR>\n\n  * Vim\n  * Workman\n\n  * Newer Post\n  * Older Post\n\n\u00a9 2013\u20142023 - Tim DuBois\n\n  * ### Home\n\n  * ### About\n\n  * ### Papers\n\n  * ### Tags\n\n  * ### Archive\n\n  * ### Feed\n\n", "frontpage": false}
