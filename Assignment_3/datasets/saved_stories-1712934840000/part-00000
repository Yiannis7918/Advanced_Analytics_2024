{"aid": "40010729", "title": "Show HN: Dynmgrm \u2013 Operate DynamoDB with GORM (Golang OSS)", "url": "https://github.com/miyamo2/dynmgrm", "domain": "github.com/miyamo2", "votes": 1, "user": "miyamo2", "posted_at": "2024-04-12 09:12:38", "comments": 0, "source_title": "GitHub - miyamo2/dynmgrm: GORM DynamoDB Driver", "source_text": "GitHub - miyamo2/dynmgrm: GORM DynamoDB Driver\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nmiyamo2 / dynmgrm Public\n\n  * Notifications\n  * Fork 0\n  * Star 1\n\nGORM DynamoDB Driver\n\n### License\n\nMIT license\n\n1 star 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# miyamo2/dynmgrm\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n5 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmiyamo2[Chore] #68 Mod Logo (#69)ff33996 \u00b7\n\n## History\n\n42 Commits  \n  \n### .assets/logo\n\n|\n\n### .assets/logo\n\n| [Chore] #68 Mod Logo (#69)  \n  \n### .github\n\n|\n\n### .github\n\n| [CI/CD] #64 Switch the trigger of the release to CHANGELOG driven (#65)  \n  \n### internal/mocks\n\n|\n\n### internal/mocks\n\n| [Feat] #33 Add unit test for Dialector#Initialize (#36)  \n  \n### tests\n\n|\n\n### tests\n\n| [Feat] #58 Add Support gorm.DB.Transaction (#59)  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| [Feat] #1 Define struct of non-Scalar data types (#9)  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| Update CHANGELOG.md  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| [Chore] #68 Mod Logo (#69)  \n  \n### attribute_value.go\n\n|\n\n### attribute_value.go\n\n| [Refactor] of v0.1.1 (#53)  \n  \n### attribute_value_test.go\n\n|\n\n### attribute_value_test.go\n\n| [Refactor] of v0.1.1 (#53)  \n  \n### callbacks_registerer.go\n\n|\n\n### callbacks_registerer.go\n\n| [Feat] #33 Add unit test for Dialector#Initialize (#36)  \n  \n### db_opener.go\n\n|\n\n### db_opener.go\n\n| [Refactor] of v0.1.1 (#53)  \n  \n### dynmgrm.go\n\n|\n\n### dynmgrm.go\n\n| [Refactor] of v0.2.0 (#60)  \n  \n### dynmgrm_example_test.go\n\n|\n\n### dynmgrm_example_test.go\n\n| [Feat] #47 Rename Sets to Set (#49)  \n  \n### dynmgrm_test.go\n\n|\n\n### dynmgrm_test.go\n\n| [Refactor] of v0.2.0 (#60)  \n  \n### error_translator.go\n\n|\n\n### error_translator.go\n\n| [Feat] #2 Implements Dialector (#15)  \n  \n### error_translator_test.go\n\n|\n\n### error_translator_test.go\n\n| [Feat] #2 Implements Dialector (#15)  \n  \n### errors.go\n\n|\n\n### errors.go\n\n| [Feat] #2 Implements Dialector (#15)  \n  \n### expression_builder.go\n\n|\n\n### expression_builder.go\n\n| [Feat] #16 Integration Test With DynamoDB Local (#26)  \n  \n### expression_builder_test.go\n\n|\n\n### expression_builder_test.go\n\n| [Feat] #47 Rename Sets to Set (#49)  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| Bump github.com/aws/aws-sdk-go-v2/feature/dynamodb/attributevalue (#63)  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| Bump github.com/aws/aws-sdk-go-v2/feature/dynamodb/attributevalue (#63)  \n  \n### list_type.go\n\n|\n\n### list_type.go\n\n| [Refactor] of v0.2.0 (#60)  \n  \n### list_type_test.go\n\n|\n\n### list_type_test.go\n\n| [Refactor] of v0.1.1 (#53)  \n  \n### map_type.go\n\n|\n\n### map_type.go\n\n| [Refactor] of v0.2.0 (#60)  \n  \n### map_type_test.go\n\n|\n\n### map_type_test.go\n\n| [Refactor] of v0.1.1 (#53)  \n  \n### migrator.go\n\n|\n\n### migrator.go\n\n| [Feat] #2 Implements Dialector (#15)  \n  \n### mockgen.go\n\n|\n\n### mockgen.go\n\n| [Chore] #12 Rename Repo (#14)  \n  \n### secondary_index.go\n\n|\n\n### secondary_index.go\n\n| [Feat] #16 Integration Test With DynamoDB Local (#26)  \n  \n### secondary_index_example_test.go\n\n|\n\n### secondary_index_example_test.go\n\n| [Doc] #19 Add Examples (#48)  \n  \n### secondary_index_test.go\n\n|\n\n### secondary_index_test.go\n\n| [Feat] #16 Integration Test With DynamoDB Local (#26)  \n  \n### set_type.go\n\n|\n\n### set_type.go\n\n| [Refactor] of v0.2.0 (#60)  \n  \n### set_type_test.go\n\n|\n\n### set_type_test.go\n\n| [Refactor] of v0.1.1 (#53)  \n  \n## Repository files navigation\n\n# dynmgrm - GORM DynamoDB Driver\n\n## Features\n\nSupports the following PartiQL operations:\n\n  * Select\n\n    * With Secondary Index\n    * With begins_with function\n    * With contains function\n    * With size function\n    * With attribute_type function\n    * With MISSING operator\n  * Insert\n  * Update\n\n    * With SET clause\n\n      * With list_append function\n      * With set_add function\n      * With set_delete function\n    * With REMOVE clause\n  * Delete\n  * Create (Table | Index)\n\nSupports the following GORM features:\n\nCustom Clause:\n\n  * SecondaryIndex\n\nCustom Data Types:\n\n  * Set[string | int | float64 | []byte]\n\n  * List\n\n  * Map\n\n## Quick Start\n\n### Installation\n\n    \n    \n    go get github.com/miyamo2/dynmgrm\n\n### Usage\n\n    \n    \n    package main import ( \"github.com/miyamo2/dynmgrm\" \"gorm.io/gorm\" ) type Event struct { Name string `gorm:\"primaryKey\"` Date string `gorm:\"primaryKey\"` Host string Guest dynmgrm.Set[string] } func main() { db, err := gorm.Open(dynmgrm.New()) if err != nil { panic(err) } var dynamoDBWorkshop Event db.Table(\"events\").Where(`name=? AND date=?`, \"DynamoDB Workshop\", \"2024/3/25\").Scan(&dynamoDBWorkshop) dynamoDBWorkshop.Guest = append(dynamoDBWorkshop.Guest, \"Alice\") db.Save(&dynamoDBWorkshop) carolBirthday := Event{ Name: \"Carol's Birthday\", Date: \"2024/4/1\", Host: \"Charlie\", Guest: []string{\"Alice\", \"Bob\"}, } db.Create(carolBirthday) var daveSchedule []Event db.Table(\"events\"). Where(`date=? AND ( host=? OR CONTAINS(\"guest\", ?) )`, \"2024/4/1\", \"Dave\", \"Dave\"). Scan(&daveSchedule) tx := db.Begin() for _, event := range daveSchedule { if event.Host == \"Dave\" { tx.Delete(&event) } else { tx.Model(&event).Update(\"guest\", gorm.Expr(\"set_delete(guest, ?)\", dynmgrm.Set[string]{\"Dave\"})) } } tx.Model(&carolBirthday).Update(\"guest\", gorm.Expr(\"set_add(guest, ?)\", dynmgrm.Set[string]{\"Dave\"})) tx.Commit() var hostDateIndex []Event db.Table(\"events\").Clauses( dynmgrm.SecondaryIndex(\"host-date-index\"), ).Where(`host=?`, \"Bob\").Scan(&hostDateIndex) }\n\n## Contributing\n\nFeel free to open a PR or an Issue.\n\n## License\n\ndynmgrm released under the MIT License\n\n## Credits\n\n### Go gopher\n\nThe Go gopher was designed by Renee French. The design is licensed under the\nCreative Commons 3.0 Attributions license. Read this article for more details\n\n### Special Thanks\n\n  * JetBrainsMono\n\nJetBrainsMono is used for the caption of the dynmgrm logo.\n\n## About\n\nGORM DynamoDB Driver\n\n### Topics\n\ngo golang aws orm dynamodb gorm\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n1 star\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 5\n\nv0.3.0 Latest\n\nApr 6, 2024\n\n\\+ 4 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * miyamo2 miyamo2\n  * dependabot[bot]\n\n## Languages\n\n  * Go 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
