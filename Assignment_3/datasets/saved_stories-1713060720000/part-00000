{"aid": "40025634", "title": "The golden rule of PR reviews", "url": "https://jameshfisher.com/2023/10/07/the-golden-rule-of-code-review/", "domain": "jameshfisher.com", "votes": 1, "user": "HerrMonnezza", "posted_at": "2024-04-13 20:09:54", "comments": 0, "source_title": "The golden rule of PR reviews", "source_text": "The golden rule of PR reviews\n\n# The golden rule of PR reviews\n\nYou\u2019re reviewing Jane\u2019s pull request. It fixes a bug that stops many customers\nusing your software. Unfortunately, her variable names look strange. Do you\n\u201cApprove\u201d her PR, or do you \u201cRequest changes\u201d? Your choice here is between two\nproduct variants:\n\nProduct A| Product B  \n---|---  \nUsability| \u274c Some customers can't use it| \ud83c\udf89 Customers can use it  \nVariable names| \ud83d\ude10 No changes| \ud83e\udd14 Some questionable names  \n  \nIf you had to choose between Product A and Product B, which would you choose?\nThe bugfix clearly outweighs the variable name choices. Therefore, you should\napprove Jane\u2019s pull request. This is The Golden Rule of PR Review: If It\u2019s An\nImprovement, Approve It.\n\nWith the decision framed this way, no reasonable person would choose Product\nA. And yet in my experience, many reviewers would not approve Jane\u2019s PR! This\nis usually because they\u2019re not following the Golden Rule, but instead\nfollowing some other incorrect rule. Let\u2019s see some examples.\n\nJohn hit \u201cRequest changes\u201d on this PR, writing: \u201cI would have written this\nloop functionally. You can use a map function here.\u201d In doing so, John was\nimplicitly answering the question: \u201cIs this a change I would have made?\u201d But\nthis is the wrong question: you\u2019re different people, and there\u2019s more than one\nway to do it! Perhaps John was influenced by the possibility that he might be\nblamed for approving Jane\u2019s review. (And perhaps John was influenced by the\nunfortunate name \u201ccode review\u201d, which wrongly emphasizes \u201ccode\u201d as the thing\nthat matters.) As a response to John\u2019s review policy, Jane will instead\nrequest review from team members that she believes would have implemented the\nchange similarly.\n\nAlex hit \u201cRequest changes\u201d, writing: \u201cAll PRs should maintain or improve\ncoverage. Please add unit tests before merging.\u201d In doing so, Alex was\nimplicitly answering the question: \u201cIs every aspect of this PR an\nimprovement?\u201d But this too is a wrong question: almost everything is an\nengineering trade-off! Perhaps Alex was influenced by all those CI metrics\n(coverage, code size, bundle size, build time), which wrongly emphasize\naspects that are easily measurable, and which imply that there is no trade-off\namongst them. As a response to Alex\u2019s review policy, Jane will not bother\nsubmitting future improvements, because the cost of submitting a change is too\nhigh.\n\nBob hit \u201cRequest changes\u201d, writing: \u201cThe page looks bad on mobile. Please use\na responsive design.\u201d In doing so, Bob is implicitly answering the question:\n\u201cIs this the ideal implementation?\u201d But this is yet another wrong question:\nproduct development is iterative. Perhaps Bob was influenced by Gitflow, an\nantiquated style in which \u201cdevelopers create a feature branch and delay\nmerging it to the main trunk branch until the feature is complete.\u201d As a\nresponse to Bob\u2019s review policy, changes will pile up on long-running\n\u201cfeature\u201d branches, leading to slower software delivery.\n\nSometimes people complain about reviewers being \u201cpetty tyrants\u201d, drunk on the\nsmall amount of power that this task gives them. I don\u2019t think this is the\nmain reason for overly strict reviews. Rather, I think the primary cause is\nthat reviewers are not taught the Golden Rule: If It\u2019s An Improvement, Approve\nIt.\n\nDiscussion on Hacker News.\n\nTagged #programming.\n\n\ud83d\udc4b I'm Jim, a full-stack product engineer. Want to build an amazing product and\na profitable business? Read more about me or Get in touch!\n\n### Similar posts\n\nExecutables in npm?\n\nNPM packages can contain executables, not just Node.js modules. NPM provides\nfeatures to help distribute and run these executables, such as the bin field\nin package.json and the npm run-script command. 2020-10-02\n\nWhy is the contentRect of my NSWindow ignored?\n\nCalling setFrameAutosaveName on an NSWindow causes its size and position to be\nsaved to user defaults, overriding the contentRect passed to the constructor.\nTo avoid this, do not call setFrameAutosaveName. 2020-07-10\n\nWhat is simulated annealing?\n\nSimulated annealing is a variation of trial-and-error optimization that\ngenerates mutations of the current best guess, and gradually reduces the\nmagnitude of the mutations over time, similar to how metals cool. 2019-05-28\n\nBrowser webcam hello world\n\nDemo of the user\u2019s webcam in a <video> element, using the\nnavigator.mediaDevices.getUserMedia() API. 2019-05-06\n\nNode.js addon hello world\n\nI create a native Node.js addon called addon in C++ using node-gyp. The addon\nexports a hello() function. 2019-04-20\n\nElectron hello world\n\nInstalling Electron, creating an HTML web page, and writing the main entry\npoint script to load the page. 2019-04-19\n\n### Similar posts\n\nExecutables in npm?\n\nNPM packages can contain executables, not just Node.js modules. NPM provides\nfeatures to help distribute and run these executables, such as the bin field\nin package.json and the npm run-script command. 2020-10-02\n\nWhy is the contentRect of my NSWindow ignored?\n\nCalling setFrameAutosaveName on an NSWindow causes its size and position to be\nsaved to user defaults, overriding the contentRect passed to the constructor.\nTo avoid this, do not call setFrameAutosaveName. 2020-07-10\n\nWhat is simulated annealing?\n\nSimulated annealing is a variation of trial-and-error optimization that\ngenerates mutations of the current best guess, and gradually reduces the\nmagnitude of the mutations over time, similar to how metals cool. 2019-05-28\n\nBrowser webcam hello world\n\nDemo of the user\u2019s webcam in a <video> element, using the\nnavigator.mediaDevices.getUserMedia() API. 2019-05-06\n\nNode.js addon hello world\n\nI create a native Node.js addon called addon in C++ using node-gyp. The addon\nexports a hello() function. 2019-04-20\n\nElectron hello world\n\nInstalling Electron, creating an HTML web page, and writing the main entry\npoint script to load the page. 2019-04-19\n\n### More by Jim\n\nWhat does the dot do in JavaScript?\n\nfoo.bar, foo.bar(), or foo.bar = baz - what do they mean? A deep dive into\nprototypical inheritance and getters/setters. 2020-11-01\n\nSmear phishing: a new Android vulnerability\n\nTrick Android to display an SMS as coming from any contact. Convincing\nphishing vuln, but still unpatched. 2020-08-06\n\nA probabilistic pub quiz for nerds\n\nA \u201ctrue or false\u201d quiz where you respond with your confidence level, and the\noptimal strategy is to report your true belief. 2020-04-26\n\nTime is running out to catch COVID-19\n\nSimulation shows it\u2019s rational to deliberately infect yourself with COVID-19\nearly on to get treatment, but after healthcare capacity is exceeded, it\u2019s\nbetter to avoid infection. Includes interactive parameters and visualizations.\n2020-03-14\n\nThe inception bar: a new phishing method\n\nA new phishing technique that displays a fake URL bar in Chrome for mobile. A\nkey innovation is the \u201cscroll jail\u201d that traps the user in a fake browser.\n2019-04-27\n\nThe hacker hype cycle\n\nI got started with simple web development, but because enamored with\nincreasingly esoteric programming concepts, leading to a \u201ctrough of hipster\ntechnologies\u201d before returning to more productive work. 2019-03-23\n\nProject C-43: the lost origins of asymmetric crypto\n\nBob invents asymmetric cryptography by playing loud white noise to obscure\nAlice\u2019s message, which he can cancel out but an eavesdropper cannot. This\nidea, published in 1944 by Walter Koenig Jr., is the forgotten origin of\nasymmetric crypto. 2019-02-16\n\nHow Hacker News stays interesting\n\nHacker News buried my post on conspiracy theories in my family due to\noverheated discussion, not censorship. Moderation keeps the site focused on\ninteresting technical content. 2019-01-26\n\nMy parents are Flat-Earthers\n\nFor decades, my parents have been working up to Flat-Earther beliefs. From\nEgyptology to Jehovah\u2019s Witnesses to theories that human built the Moon\nbillions of years in the future. Surprisingly, it doesn\u2019t affect their\nsuccessful lives very much. For me, it\u2019s a fun family pastime. 2019-01-20\n\nThe dots do matter: how to scam a Gmail user\n\nGmail\u2019s \u201cdots don\u2019t matter\u201d feature lets scammers create an account on, say,\nNetflix, with your email address but different dots. Results in convincing\nphishing emails. 2018-04-07\n\nThe sorry state of OpenSSL usability\n\nOpenSSL\u2019s inadequate documentation, confusing key formats, and deprecated\ninterfaces make it difficult to use, despite its importance. 2017-12-02\n\nI hate telephones\n\nI hate telephones. Some rational reasons: lack of authentication, no spam\nfiltering, forced synchronous communication. But also just a visceral fear.\n2017-11-08\n\nThe Three Ts of Time, Thought and Typing: measuring cost on the web\n\nBusinesses often tout \u201cfree\u201d services, but the real costs come in terms of\ntime, thought, and typing required from users. Reducing these \u201cThree Ts\u201d is\nkey to improving sign-up flows and increasing conversions. 2017-10-26\n\nGranddad died today\n\nGranddad died. The unspoken practice of death-by-dehydration in the NHS. The\nLiverpool Care Pathway. Assisted dying in the UK. The importance of planning\nin end-of-life care. 2017-05-19\n\nHow do I call a program in C, setting up standard pipes?\n\nA C function to create a new process, set up its standard input/output/error\npipes, and return a struct containing the process ID and pipe file\ndescriptors. 2017-02-17\n\nYour syntax highlighter is wrong\n\nSyntax highlighters make value judgments about code. Most highlighters judge\nthat comments are cruft, and try to hide them. Most diff viewers judge that\ncode deletions are bad. 2014-05-11\n\nThis page copyright James Fisher 2023. Content is not associated with my\nemployer. Found an error? Edit this page.\n\nJim Fisher\n\nCV\n\nSpeaking\n\nBlogroll\n\nRSS\n\nTigYog\n\nKickabout\n\n", "frontpage": false}
