{"aid": "39967685", "title": "Demystifying the Shadow DOM", "url": "https://thetshaped.dev/p/demystifying-the-shadow-dom", "domain": "thetshaped.dev", "votes": 1, "user": "thunderbong", "posted_at": "2024-04-08 09:03:17", "comments": 0, "source_title": "Demystifying the Shadow DOM", "source_text": "Demystifying the Shadow DOM - by Petar Ivanov\n\n# The T-Shaped Dev\n\nShare this post\n\n#### Demystifying the Shadow DOM\n\nthetshaped.dev\n\n#### Discover more from The T-Shaped Dev\n\nPractical tips helping level up your engineering skills. Career, Web, Software\nDesign, Architecture & Productivity.\n\nOver 3,000 subscribers\n\nContinue reading\n\nSign in\n\n# Demystifying the Shadow DOM\n\n### A Web Developer's secret weapon\n\nPetar Ivanov\n\nApr 07, 2024\n\n13\n\nShare this post\n\n#### Demystifying the Shadow DOM\n\nthetshaped.dev\n\n2\n\nShare\n\n#\n\nIntro\n\nLast year I taught Advanced JavaScript classes at the local university. One of\nthe topics I explained was about the Shadow DOM. Since I wasn\u2019t very familiar\nwith it, I had to dig deeper and understand its benefits, drawbacks, and use\ncases. After reading more about it, I thought that more developers should get\nfamiliar with it since it\u2019s a fascinating technology worth being in one\u2019s\ntoolbox.\n\nAfter reading this article, you\u2019ll learn:\n\n  * what is Shadow DOM\n\n  * its benefits and drawbacks\n\n  * use cases and examples\n\nThe T-Shaped Dev is a reader-supported publication. To receive new posts and\nsupport my work, consider becoming a free or paid subscriber.\n\n#\n\nWhat is Shadow DOM?\n\nShadow DOM allows developers to attach a hidden, separate DOM to an element in\nthe regular DOM tree. The \u201cshadow\u201d DOM has its own separate environment. This\nmeans that the styles and scripts defined in the \u201cshadow\u201d DOM don\u2019t clash with\nthe rest of the document.\n\nThe element from the normal DOM where we attach the Shadow DOM is called\nShadow Host. Inside the Shadow DOM this element is called Shadow Root.\n\nYou can think of the Shadow DOM like a hidden space on a website where\ndevelopers can keep things neat and organized without messing up the rest of\nthe website.\n\nSource: MDN\n\n##\n\nOpen and Closed Shadow DOM\n\nWhen we\u2019re attaching a Shadow DOM to an element from the normal DOM, we do it\nin two modes: { mode: \"open\" } and { mode: \"closed\" }. With the mode set to\nopen, the JavaScript in the website is able to access the internals of our\nShadow DOM. With closed, that\u2019s not the case.\n\n#\n\nBenefits of using Shadow DOM\n\n##\n\nEncapsulation from CSS and Javascript\n\nShadow DOM ensures that the styles and scripts defined within it don\u2019t leak\nout, preventing accidental styling or manipulation of other elements. It works\nthe other way around as well, so it prevents external styles and scripts to\nchange something inside the Shadow DOM.\n\n##\n\nReusability\n\nComponents in Shadow DOM can be reused across different parts of an\napplication or even different applications, ensuring consistency and reducing\nduplication.\n\n##\n\nMaintainability\n\nBy isolating components, the DOM structure becomes easier to manage and\nunderstand.\n\n#\n\nDrawbacks of using Shadow DOM\n\n##\n\nLearning Curve\n\nUnderstanding and effectively utilizing Shadow DOM concepts can be challenging\nand time-consuming, especially for new developers. It introduces additional\ncomplexity in component management.\n\n##\n\nPotential Security Concerns\n\nEven when using a closed Shadow DOM in your application that\u2019s not a strong\nsecurity mechanism because we can still manipulate the Shadow Host from the\noutside. This mechanism does not entirely isolate the component from all types\nof interactions and attacks, especially those that can act through the Shadow\nHost or operate with higher privileges like Browser Extension for password\nmanagement.\n\n#\n\nUse Cases and Examples\n\n  1. Browser Extensions and Widgets. For example, I have the Grammarly\u2019s extension for Chrome and they use Shadow DOM for its widget. If you expect your page\u2019s DOM, you will see the Shadow DOM as part of the normal DOM. See the image below:\n\n  2. The <video> HTML element where there\u2019re default controls exposed by the browser. We see just a video element in the DOM, but it contains buttons and some other stuff inside its Shadow DOM.\n\n  3. Component Libraries. We can build a set of components to be reused across projects. Since they\u2019re isolated, they\u2019ll work consistently.\n\n#\n\nConclusion\n\nThe Shadow DOM is a powerful tool in the web developer\u2019s toolkit. It offers\nthe ability to keep our web components tidy, reusable, and maintainable.\n\n> \ud83d\udca1 As with every technology, it has its benefits and drawbacks. The key is\n> knowing when and how to use it effectively.\n\nIf you want to dig deeper into the topic, you can check MDN\u2019s documentation on\nShadow DOM: here.\n\n#\n\n\ud83d\udce3 Articles worth reading:\n\n  * How Disney+ Scaled to 11 Million Users on Launch Day by System Design Newsletter\n\n  * Leveraging Side Projects for Career Growth in Engineering by The Hybrid Hacker\n\n  * Simplifying as much as possible is the way to go in the engineering industry by Engineering Leadership\n\n  * Why I write a newsletter every week even with a full-time software engineering job by High Growth Engineer\n\n#\n\n\ud83d\uddde\ufe0f Other articles people like:\n\n#### 3 software development principles I wish I knew earlier in my career\n\nPetar Ivanov\n\n\u00b7\n\nMar 24\n\nRead full story\n\n#### SOLID Principles: Writing Robust & Maintainable Code (with TypeScript\nexamples)\n\nPetar Ivanov\n\n\u00b7\n\nFeb 1\n\nRead full story\n\n#### How to better structure your next Node.js project? The Modular Approach.\n\nPetar Ivanov\n\n\u00b7\n\nOctober 31, 2023\n\nRead full story\n\n### Subscribe to The T-Shaped Dev\n\nBy Petar Ivanov \u00b7 Launched 9 months ago\n\nPractical tips helping level up your engineering skills. Career, Web, Software\nDesign, Architecture & Productivity.\n\n13 Likes\n\n\u00b7\n\n2 Restacks\n\n13\n\nShare this post\n\n#### Demystifying the Shadow DOM\n\nthetshaped.dev\n\n2\n\nShare\n\n2 Comments\n\nBasma TahaAn Engineer's Echo16 hrs agoLiked by Petar IvanovVery well written\narticle and straightforward advice, Petar. Thank you for sharing!Expand full\ncommentLike (1)ReplyShare  \n---  \n  \n1 reply by Petar Ivanov\n\n1 more comment...\n\n3 software development principles I wish I knew earlier in my career\n\nAnd the power of YAGNI, KISS, and DRY\n\nMar 24 \u2022\n\nPetar Ivanov\n\n53\n\nShare this post\n\n#### 3 software development principles I wish I knew earlier in my career\n\nthetshaped.dev\n\n10\n\nSOLID Principles: Writing Robust & Maintainable Code (with TypeScript\nexamples)\n\nAnd why change and speed matter in today's world and competition.\n\nFeb 1 \u2022\n\nPetar Ivanov\n\n37\n\nShare this post\n\n#### SOLID Principles: Writing Robust & Maintainable Code (with TypeScript\nexamples)\n\nthetshaped.dev\n\n2\n\nStay Positive and \u201cit is what it is\u201d or The Power of Positive Thinking\n\nToday we read many success stories but there're many unsuccessful ones from\nwhich we can learn a lot. That's the purpose of today's articles - to share...\n\nFeb 28 \u2022\n\nPetar Ivanov\n\n25\n\nShare this post\n\n#### Stay Positive and \u201cit is what it is\u201d or The Power of Positive Thinking\n\nthetshaped.dev\n\n2\n\nReady for more?\n\n\u00a9 2024 Petar Ivanov\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great writing\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
