{"aid": "39960190", "title": "Minibone: practical end-to-end encryption for web apps", "url": "https://github.com/backbone-hq/minibone", "domain": "github.com/backbone-hq", "votes": 5, "user": "kpdemetriou", "posted_at": "2024-04-07 12:04:49", "comments": 0, "source_title": "GitHub - backbone-hq/minibone: A compact, versatile, and misuse-resistant library for end-to-end-encryption", "source_text": "GitHub - backbone-hq/minibone: A compact, versatile, and misuse-resistant\nlibrary for end-to-end-encryption\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nbackbone-hq / minibone Public\n\n  * Notifications\n  * Fork 0\n  * Star 2\n\nA compact, versatile, and misuse-resistant library for end-to-end-encryption\n\n### License\n\nApache-2.0 license\n\n2 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# backbone-hq/minibone\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nBackbone AuthorsDependency reshuffle35f9061 \u00b7\n\n## History\n\n2 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Initial commit  \n  \n### media\n\n|\n\n### media\n\n| Initial commit  \n  \n### src\n\n|\n\n### src\n\n| Initial commit  \n  \n### tests\n\n|\n\n### tests\n\n| Initial commit  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| Initial commit  \n  \n### LICENSE.txt\n\n|\n\n### LICENSE.txt\n\n| Initial commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| Dependency reshuffle  \n  \n### SECURITY.md\n\n|\n\n### SECURITY.md\n\n| Initial commit  \n  \n### package.json\n\n|\n\n### package.json\n\n| Dependency reshuffle  \n  \n### rollup.config.js\n\n|\n\n### rollup.config.js\n\n| Initial commit  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| Initial commit  \n  \n### yarn.lock\n\n|\n\n### yarn.lock\n\n| Initial commit  \n  \n## Repository files navigation\n\nMinibone is a compact, versatile, and misuse-resistant library designed to\nmake incorporating end-to-end encryption in your applications remarkably\nsimple. It allows you to store and manage your users' sensitive data while\nensuring that only the users themselves can access and decrypt the information\n\u2014 helping you minimize the blast radius of breaches, meet compliance\nrequirements, enhance privacy, and build trust.\n\nBuilding secure-by-design applications is hard. Minibone makes it practical.\n\n### \ud83c\udfd7\ufe0f Background\n\nMinibone is built atop the Web Crypto API. It's restricted to a conservative\nsuite of symmetric algorithms for quantum resistance and robustness.\n\nSpecifically, Minibone uses AES-GCM-256 for encryption, HKDF-SHA-256 for key\nderivation, and PBKDF2-SHA-256 with 500,000 iterations for password-based key\nderivation. Minibone also opts to keep its dependencies to the bare minimum to\nreduce the risk of supply-chain attacks.\n\n### \u2622\ufe0f Threat Model\n\nMinibone is designed to run on a client device (e.g., your desktop, mobile, or\nweb-based app), storing data with a provider (e.g., a SaaS platform) through a\ncommunication channel (e.g., HTTPS). In this scenario, Minibone is designed to\nassure confidentiality and integrity, but not availability [1] or freshness\n[2], when the provider and/or the communication channel are compromised.\n\nWe assume that the client application and device are not compromised and not\notherwise vulnerable to side-channel attacks.\n\n  1. A malicious provider could selectively delete data they store. A compromised communication channel could selectively drop messages based on metadata.\n  2. A malicious provider could selectively revert data to earlier versions. A compromised communication channel could replay messages associated with earlier versions.\n\n### \ud83d\udcbe Installation\n\nMinibone is hosted on NPM. You can add it to your project by running the npm\ncommand below or an equivalent command in your package manager.\n\n    \n    \n    npm i minibone\n\n### \ud83d\udcc7 Usage\n\n    \n    \n    import Minibone from 'minibone' // Define a unique service identifier const serviceIdentifier: any = 'my-unique-service-identifier' // Virtual API, communication channel and storage provider class Backend { private userBundles: Map<string, Uint8Array> = new Map() private dataBundles: Map<string, Uint8Array> = new Map() registerUser = async (uid: string, bundle: Uint8Array): Promise<void> => {this.userBundles.set(uid, bundle)} fetchUser = async (uid: string): Promise<Uint8Array> => this.userBundles.get(uid) ?? new Uint8Array() putData = async (uid: string, data: Uint8Array): Promise<void> => {this.dataBundles.set(uid, data)} fetchData = async (uid: string): Promise<Uint8Array> => this.dataBundles.get(uid) ?? new Uint8Array() } const virtualBackend = new Backend(); // Register a user; initialize their minibone instance const minibone: Minibone = await Minibone.create() // Encrypt and send the user's minibone to the provider const userName: any = 'some-unique-user-name' const payload: Uint8Array = await minibone.save('secure-user-secret', [serviceIdentifier, userName]) await virtualBackend.registerUser(userName, payload) // Encrypt user data const data: any = { sq6wmgv2zcsrix6t: 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION.', } const encrypted: Uint8Array = await minibone.encrypt(data) await virtualBackend.putData(minibone.uid, encrypted) // Fetch and load the user's minibone. You probably want to guard payload retrieval behind multi-factor authentication in production. const payload: Uint8Array = await virtualBackend.fetchUser(userName) const loadedMinibone: Minibone = await Minibone.load(payload, 'secure-user-secret', [serviceIdentifier, userName]) // Decrypt data using the reconstructed minibone const fetched: Uint8Array = await virtualBackend.fetchData(minibone.uid) const decryptedData: any = await loadedMinibone.decrypt(fetched)\n\n### \ud83d\udce2 Caveats\n\nMinibone is designed to be simple to use and difficult to abuse. That said,\nthere are a few important aspects to keep in mind when interfacing with\nMinibone.\n\n  1. It's important for the context vector (the second parameter of minibone.save and third parameter of Minibone.load) to be globally unique to reduce the risk of key reuse and maximize the marginal cost of rainbow table attacks.\n  2. When prompting end users for a passphrase or master secret, this secret must remain client-side. We recommend using a battle-tested password strength estimator (e.g., zxcvbn). User secrets should be deleted immediately after use to make it just that bit harder for attackers.\n\n### \ud83e\udde9 Limitations\n\nMinibone relies solely on symmetric cryptography. While this makes it robust\nagainst a number of contemporary and future attacks, it also makes data\nsharing, assured identity, access control, and real-time collaborative\nworkflows infeasible to implement.\n\nMinibone's enterprise counterpart, Backbone, was designed from first\nprinciples to support complex multi-user, multi-enterprise workflows under\ntotal end-to-end encryption with a stricter threat model.\n\nIf these are a priority, reach out to us by emailing us at root@backbone.dev.\n\nBuilt with \ud83e\uddb4 by Backbone\n\n## About\n\nA compact, versatile, and misuse-resistant library for end-to-end-encryption\n\n### Topics\n\nsecurity cryptography encryption webcrypto e2ee end-to-end-encryption\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\n### Security policy\n\nSecurity policy\n\nActivity\n\nCustom properties\n\n### Stars\n\n2 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * TypeScript 97.8%\n  * JavaScript 2.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
