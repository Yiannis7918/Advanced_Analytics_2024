{"aid": "40030188", "title": "Linux fu: getting started with systemd", "url": "https://hackaday.com/2024/04/11/linux-fu-getting-started-with-systemd/", "domain": "hackaday.com", "votes": 3, "user": "drpixie", "posted_at": "2024-04-14 10:43:04", "comments": 0, "source_title": "Linux Fu: Getting Started With Systemd", "source_text": "Linux Fu: Getting Started With Systemd | Hackaday\n\nSkip to content\n\n# Hackaday\n\n# Linux Fu: Getting Started With Systemd\n\n40 Comments\n\n  * by:\n\nAl Williams\n\nApril 11, 2024\n\nI will confess. I started writing this post about some stupid systemd tricks.\nHowever, I wanted to explain a little about systemd first, and that wound up\nbeing longer than the tricks. So this Linux Fu will be some very fundamental\nsystemd information. The next one will have some examples, including how to\nautomount a Raspberry Pi Pico. Of course, by the end of this post, you\u2019ll have\nonly scratched the surface of systemd, but I did want to give you some context\nfor reading through the rest of it.\n\nLike many long-time Unix users, I\u2019m not a big fan of systemd. Then again, I\u2019m\nalso waiting for the whole \u201cwindows, icon, mouse, pointer\u201d fad to die down.\nLike it or not, systemd is here and probably here to stay for the foreseeable\nfuture. I don\u2019t want to get into a flame war over systemd. Love it or hate it,\nit is a fact of life. I will say that it does have some interesting features.\nI will also say that the documentation has gotten better over time. But I will\nalso say that it made many changes that perhaps didn\u2019t need to be made and\nmade some simple things more complicated than they needed to be.\n\nIn the old days, we used \u201cinit scripts,\u201d and you can still do so if you are\nreally motivated. They weren\u2019t well documented either, but it was pretty easy\nto puzzle out the shell scripts that would run, and we all know how to write\nshell scripts. The systemd way is to use services that are not defined by\nshell scripts. However, systemd tries to do lots of other things, too. It can\nreplace cron and run things periodically. It can replace inetd, syslog, and\nmany other traditional services. This is a benefit or a drawback, depending on\nyour point of view.\n\n(Editor\u2019s note: And this logging functionality was exactly what was abused in\nlast week\u2019s insane liblzma / ssh backdoor.)\n\nConfiguring systemd requires you to create files in one of several locations.\nIn systemd lingo, they are \u201cunits.\u201d For the purpose of this Linux Fu, we\u2019ll\nlook at only a few kinds of units: services, mounts, and timers. Services let\nyou run programs in response to something like system start-up. You can\nrequire that certain other services are already running or are not running and\nmany other options. If the service dies, you can ask systemd to automatically\nrestart it, or not. Timers can trigger a service at a particular time, much\nlike cron does. Another unit you\u2019ll run into are sockets that represent \u2014 you\nguessed it \u2014 a network socket.\n\n## Basics\n\nIf you haven\u2019t used systemd, the main interface to it is systemctl (not\nsysctl, which is something different). With it, you can enable and disable\n\u201cunits,\u201d which are usually \u201cservices.\u201d So, for example, my ssh server is a\nservice unit. By defining a unit, someone could say, \u201cWell, if you are\nstarting in multiuser mode, wait for networking to be available and run the\nssh server.\u201d Or, sort of like inetd, run the ssh server when someone opens a\nconnection on port 22. Not all units are services. Some are network sockets,\nand some are timers. There are other kinds, too. A timer is like a cron job.\nYou can set them up to run every so often.\n\nSystemd maintains two sets of units. One set is for the system, and you need\nto be root to work with those. But it also manages user-level things. For\nexample, your sound server, probably pulseaudio or pipewire, has a systemd\nservice unit. Not only does it launch the service, it restarts it if it dies.\nIf you change a unit file, you have to tell systemd to reread all the files\nwith systemctl daemon-reload. You can enable, disable, start, and stop\nservices and other units with the systemctl command, too. There\u2019s also a way\nto mask and unmask units, which is like a super disable.\n\nWhile the documentation has become better over the years, the format for the\nunits is still pretty hairy because there are so many options available. Most\nof the time, you only need a small subset of the many available options.\n\n## For Example\n\nHere\u2019s a fairly simple service unit:\n\n12345678910111213141516171819202122| [Unit]Description=OpenBSD Secure Shell\nserverDocumentation=man:sshd(8) man:sshd_config(5)After=network.target\nauditd.serviceConditionPathExists=!/etc/ssh/sshd_not_to_be_run[Service]EnvironmentFile=-/etc/default/sshExecStartPre=/usr/sbin/sshd\n-tExecStart=/usr/sbin/sshd -D $SSHD_OPTSExecReload=/usr/sbin/sshd\n-tExecReload=/bin/kill -HUP $MAINPIDKillMode=processRestart=on-\nfailureRestartPreventExitStatus=255Type=notifyRuntimeDirectory=sshdRuntimeDirectoryMode=0755[Install]WantedBy=multi-\nuser.targetAlias=sshd.service  \n---|---  \n  \nYou can probably puzzle most of that out. Here\u2019s a very complicated service\nunit:\n\n123456789101112131415161718192021222324252627282930313233343536|\n[Unit]Description=Entropy Daemon based on the HAVEGE\nalgorithmDocumentation=man:haveged(8)\nhttp://www.issihosts.com/haveged/DefaultDependencies=noAfter=apparmor.service\nsystemd-tmpfiles-setup.service systemd-tmpfiles-setup-\ndev.serviceBefore=sysinit.target shutdown.targetConflicts=shutdown.target#\nRNDADDENTROPY ioctl requires host-level CAP_SYS_ADMIN, fails in unprivileged\ncontainerConditionVirtualization=!container[Service]EnvironmentFile=-/etc/default/havegedExecStart=/usr/sbin/haveged\n--Foreground --verbose=1 $DAEMON_ARGSRestart=alwaysSuccessExitStatus=137\n143SecureBits=noroot-\nlockedCapabilityBoundingSet=CAP_SYS_ADMINPrivateTmp=truePrivateDevices=truePrivateNetwork=trueProtectSystem=fullProtectHome=trueProtectHostname=trueProtectKernelLogs=trueProtectKernelModules=trueRestrictNamespaces=trueRestrictRealtime=trueLockPersonality=trueMemoryDenyWriteExecute=trueSystemCallArchitectures=nativeSystemCallFilter=@basic-\nio @file-system @io-event @network-io @signalSystemCallFilter=arch_prctl brk\nioctl mprotect sysinfo[Install]WantedBy=sysinit.target  \n---|---  \n  \nThis online form takes the tedium out of writing this purely fictional service\n(link in text).\n\nWhoa! There\u2019s a lot to parse there. You can find all the documentation, of\ncourse. But many people copy some starter service and modify it. Another\noption is to use a wizard to help you create your unit files. For example, you\ncan find some online. Fill out the forms on the left and observe the file on\nthe right. Installation instructions are up top. If you don\u2019t know what a\nfield asks for, there\u2019s a little info button to give you some help text. You\ncan often pick things from a drop-down. Sure, you can write it all yourself,\nbut this does make it a little easier.\n\nIf you want to make a timer, you need a service file and a timer file. There\u2019s\nan online wizard for that, too. It isn\u2019t quite as helpful, and you need to\nunderstand how systemd represents time intervals. This is a bit more\ncomplicated than cron because you can set times relative to the timer\u2019s\nactivation, the time of system boot, or relative to the timer\u2019s last\nactivation. You can also set specific dates and times, add a random delay, or\nmake timers persist.\n\nThat last option is like using anacron. Suppose you have a timer set to run at\n1 AM daily on a laptop. The problem is that by 1 AM, the laptop is probably\noff. A persistent timer will realize that when you turn the laptop on at 8 AM\nthat it should have run the 1 AM trigger, and then do so.\n\n## There\u2019s More...\n\nA similar web page can make your timers, too.\n\nThere is so much more to know about units. Some of that is related to\nfeatures. Some of it is related to quirks. For example, comments can\u2019t go at\nthe end of a line \u2014 they have to be on their own line. For another example,\nspecial characters in the file names get hex escapes (this will be important\nlater). To further complicate things, there are ways to make templates and add\nin pieces. All of that is beyond the scope of this post, but be aware, I\u2019m\npainting the simplest possible picture of the systemd universe.\n\nThe other problem is exactly where to put your unit files. They are scattered\neverywhere, and while there is a good reason for where they live, it is still\nannoying.\n\nThe short version is you should probably put system units in\n/etc/systemd/system unless you have a good reason to put it somewhere else.\nUnits for all users can go in /etc/systemd/user. If you want a unit just for\none user, try ~/.config/systemd/user. If you are looking for the location of\nan existing unit, usually \u201csystemctl status xxx.service\u201d will tell you.\nOtherwise, try \u201csystemctl show -P FragmentPath xxx.service.\u201d\n\nIf you want to read the actual documentation:\n\n> System unit directories\n>\n> The systemd system manager reads unit configuration from various\n> directories. Packages that want to install unit files shall place them in\n> the directory returned by pkg-config systemd \u2013variable=systemdsystemunitdir.\n> Other directories checked are /usr/local/lib/systemd/system and\n> /usr/lib/systemd/system. User configuration always takes precedence. pkg-\n> config systemd \u2013variable=systemdsystemconfdir returns the path of the system\n> configuration directory. Packages should alter the content of these\n> directories only with the enable and disable commands of the systemctl(1)\n> tool. Full list of directories is provided in systemd.unit(5).\n>\n> User unit directories\n>\n> Similar rules apply for the user unit directories. However, here the XDG\n> Base Directory specification is followed to find units. Applications should\n> place their unit files in the directory returned by pkg-config systemd\n> \u2013variable=systemduserunitdir. Global configuration is done in the directory\n> reported by pkg-config systemd \u2013variable=systemduserconfdir. The enable and\n> disable commands of the systemctl(1) tool can handle both global (i.e. for\n> all users) and private (for one user) enabling/disabling of units. Full list\n> of directories is provided in systemd.unit(5).\n\n## Stupid Trick #0: Run Some Program on Startup\n\nThis isn\u2019t really a trick, but I wanted at least one example this time to show\nyou how simple a homebrew service can be.\n\nIn an earlier post, I used a cheap \u201csmart display\u201d to show Hackaday\u2019s RSS\nfeed. If you want that to run on startup \u2014 or you just want the normal Python\ncode to get the system status display \u2014 you need to run it somewhere. Sure,\nyou could execute it by hand or put it in your startup files. But the systemd\nway to do it is with a unit. Here\u2019s mine:\n\n12345678910| [Unit]Description=[Operate Smart\nDisplay][Service]Type=simpleStandardOutput=journalExecStart=/home/alw/apps/turing-\nsmart-screen-python-3.1.0/service[Install]WantedBy=default.target  \n---|---  \n  \nThat\u2019s easy enough. It defines a simple service that outputs to the journal.\nIt starts by default. Piece of cake. Next time, we\u2019ll see a few more simple\nexamples and maybe that will spur you to write your own unit files. Watch for\nit!\n\nPosted in Linux HacksTagged linux, systemd\n\n### Read more from this series: Linux-Fu\n\nLinux Fu: Getting Started With Systemd\n\nLinux Fu: Forward To The Past!\n\nLinux Fu: Curling C\n\nLinux Fu: Where\u2019s That Darn File?\n\nLinux Fu: Name That Tune\n\nLinux Fu: Preprocessing Beyond Code\n\nLinux Fu: Easy Kernel Debugging\n\nLinux Fu: Customizing Printf\n\nLinux Fu: Deep Git Rebasing\n\nLinux Fu: Build A Better Ls\n\nSee all articles in this series \u2192\n\n## 40 thoughts on \u201cLinux Fu: Getting Started With Systemd\u201d\n\n  1. Zoe Nagy says:\n\nApril 11, 2024 at 7:13 am\n\nSupervisord should be instead, it\u2019s like cron for services, one file to\noverview.\n\nReport comment\n\nReply\n\n    1. It's all so tiresome. says:\n\nApril 12, 2024 at 10:16 am\n\nThank you for posting this interesting alternative. It\u2019s over 5 years old, yet\nI\u2019ve never heard or seen it before this comment.\n\nReport comment\n\nReply\n\n  2. Grumpy Flaming Graybeard says:\n\nApril 11, 2024 at 7:48 am\n\nMisguided goals of all kinds, systemd being just one of them, may be \u201chere to\nstay,\u201d but that doesn\u2019t mean everyone has to join (or is joining) the lemmings\nrunning towards the edge of the cliff. Systemd\u2019s authors appear to want it to\ndo everything. That is a fundamentally misguided design goal. As a long-time\nUnix user, you surely do know better and it would have been a service to\nreaders to at least point out 1) Linux distros exist that omit systemd, and 2)\nthe objective fact that systemd\u2019s attack surface is vast. Fortunately, the\neditor did...sort of, and comments can do the rest.\n\nMore generally, complexity is anathema to determinism, and I still expect my\nIT to be deterministic. Given that more and more lemmings seem to be OK\nletting go of that expectation and they\u2019re now even learning to trust\n\u201cstochastic parrots,\u201d opportunities for bad actors just keep increasing.\n\nReport comment\n\nReply\n\n    1. Al Williams says:\n\nApril 11, 2024 at 9:22 am\n\nI really don\u2019t want to give the impression that I\u2019m a systemd apologist. But\nit is sort of like the dvorak keyboard. QWERTY is objectively worse, but\nunless you never touch anyone else\u2019s computer you should probably learn how to\ntype on QWERTY. I may elect not to use systemd \u2014 you can remove it, roll your\nown distro, or find a distro that doesn\u2019t use it. But for most of the people I\nhave to interact with, it is there and \u2014 sorry \u2014 it isn\u2019t going away soon no\nmatter how much you and I might wish for that.\n\nWe are seeing more and more software that isn\u2019t \u201cunixy\u201d and we are suffering\nfor it. But I don\u2019t see any indication that the tide is changing anytime in\nthe near future, as sorry as I am to have to say that.\n\nReport comment\n\nReply\n\n      1. Ostracus says:\n\nApril 11, 2024 at 9:34 am\n\nSuffering I imagine for those inducted into the role of \u201ccustomer support\u201d be\nit job, or family. Besides geeks are suppose to love challenges.\n\nReport comment\n\nReply\n\n      2. Greg A says:\n\nApril 11, 2024 at 12:08 pm\n\neh, i don\u2019t think we need to learn how to use systemd. other people use it,\njust like people use android zygote or whatever replaced \u201cKicker\u201d et al on\nmacos, or whatever the heck nightmare manages sessions on Windows NT 10. they\nuse it but they don\u2019t know how it works, and if i sit down at their PC for a\nfew minutes, i won\u2019t have to know either. the one thing about these systems is\nthat mostly they \u201cjust work\u201d. as an outsider, you don\u2019t need to get to the\nbottom of it. and on my own pc where i do need to get to the bottom of it, OH\nMY GOD, it is so easy to just uninstall systemd and bugs i didn\u2019t even know\nabout fix themselves immediately!\n\nthe thing that really frustrates me about systemd is that when you really do\nneed to learn to use it...generally because you\u2019re trying to deploy a novel\napplication of some sort in an environment you\u2019re forbidden to uninstall\nsystemd from...it\u2019s very hard to make productive use of boilerplate examples.\nyou need to understand what all the keywords mean, After vs. Requires vs.\nWants kind of questions become of paramount importance. so you read the Unit /\nService reference documentation and you still will find you need to unravel\nsome chain of dependencies in already-existing services. and no sooner do you\nembark on that journey than you learn that there are abundant like ... i just\nimagine it must look like literally if (!strcmp(service->name,\n\u201cgetty@.service\u201d)) kind of bs inside systemd itself. you can\u2019t unravel it. the\nexisting OS-provided services don\u2019t actually obey the abstraction you learned\nin the tutorial.\n\nso inevitably you wind up either shooting in the dark or on a soul-crushing\ndeep dive that no tutorial can prepare you for. some people *do* need to\nunderstand systemd but they\u2019re not going to have a gentle introduction to it.\ni really did try exactly what this article would suggest \u2014 do it the systemd\nway by learning one thing after another about systemd \u2014 and i really did hit\nthe wall that *systemd does not work in the way it\u2019s documented because the\nvast majority of it is below the surface of the water ripping giant holes in\nthe side of the titanic*.\n\nReport comment\n\nReply\n\n  3. medix says:\n\nApril 11, 2024 at 8:06 am\n\nJust went through this to set up a daily reboot service with a timer as a\nquick-fix for a memory leak on a kiosk system.\n\nI was having problems with a reboot loop, until I learned that the reboot\nservice should not have the [Install] section included, unless you want the\nservice to be started on every boot.\n\nWorks like a charm now.\n\nReport comment\n\nReply\n\n  4. Ale says:\n\nApril 11, 2024 at 8:11 am\n\nservices ?... that\u2019s a windows term.\n\nReport comment\n\nReply\n\n    1. Gravis says:\n\nApril 11, 2024 at 8:59 am\n\nA daemon is a specific program (e.g. diskmand) that runs in the background\nperforming one or more tasks. A service is the name for the type of task to be\ndone (e.g. disk management).\n\nSo, a service (disk management) is implemented by a daemon (diskmand).\n\nReport comment\n\nReply\n\n  5. Greg A says:\n\nApril 11, 2024 at 8:55 am\n\nugh so much to disagree with. systemd is *not* here to stay \u2014 they\u2019ve\ndemonstrated that their fundamental goal is to constantly break everything.\nsure i hate it but if i loved it, that\u2019s what i\u2019d love about it too. there\u2019s\nnothing else there to love. they break everything. and that is lovable, for a\ncertain kind of moss-free rolling stone. so systemd isn\u2019t here to stay,\nbecause it will be broken again and again. you won\u2019t be able to recognize it\nin a decade. it\u2019ll be something totally different.\n\nso it sounds like there\u2019s nothing worthwhile to learn about systemd but i\nfound that not to be the case. you can learn that they\u2019re for breaking\neverything constantly and you\u2019re against that, and once you learn it, you know\nyou don\u2019t want to use it, and don\u2019t have to. and that\u2019s the other thing wrong\nwith this article. you just simply don\u2019t have to. you can opt out.\n\ni spent a couple days learning systemd because i believed the errant premise\nof this document and i eventually learned, *i could not do what i want with\nsystemd without hacking its C source code*. because that\u2019s all it is \u2014\nsystemd\u2019s developers fundamentally do not believe in the abstractions that\nthey\u2019ve built up (unit / service / Before= / After= / ...) and everything it\naccomplishes in practice uses one-off hacks and magic features that somehow\ngot shipped as production. the actual work isn\u2019t done in shell scripts and\nconfiguration files, but in obscure undocumented hacks implementing\ncomplicated (and, imo, wrong) heuristics in C. so i followed the \u201cdebian\nwithout systemd\u201d tutorial, and now i use devuan.\n\nof course, if you want effortless integrated gnome environment and don\u2019t mind\nbeing completely unable to get to the bottom of any problem that comes\nup...then by all means, windows 95^H^H^H i mean systemd is right there for\nyou. it certainly has its place. i\u2019m not against other people using it, or\n\u2018desktop distributions\u2019 embracing it. but the important thing is: if systemd\ndoesn\u2019t have a place in your heart then you don\u2019t have to use it.\n\nReport comment\n\nReply\n\n    1. Joseph Eoff says:\n\nApril 11, 2024 at 9:09 am\n\nI always have to chuckle when I see people ranting about systemd. It reminds\nme of System D as practiced by the marines in \u201cFalkenberg\u2019s Legion.\u201d\n\nhttps://bookreadfree.com/354933/8732192\n\n> \u201cWhat are they doing?\u201d Falkenberg asked.\n\n\u201cYou name it. They\u2019ve taken over a couple of taverns and won\u2019t let anybody in\nwithout their permission, for one thing. And they have fights with street\ngangs every night.\n\n\u201cWe could live with all that, but they go to other parts of town, too. Lots of\nthem. They go into taverns and drink all night, then say they can\u2019t pay. If\nthe owner gets sticky, they wreck the place. ...\u201d\n\n\u201cAnd they\u2019re gone before your patrols get there,\u201d Falkenberg finished for him.\n\u201cIt\u2019s an old tradition. They call it System D, and more planning effort goes\ninto that operation than I can ever get them to put out in combat. I\u2019ll try to\nput a stop to System D, anyway.\u201d\n\nReport comment\n\nReply\n\n    2. Grumpy Flaming Graybeard says:\n\nApril 12, 2024 at 9:28 am\n\nThanks for hitting all the point I missed aiming for brevity, especially the\nWin95 comparison. Spot on! They\u2019ve already added a BSOD. Now all the systemd\ndevs need to add is the Registry and they will have achieved Win95\n\u201cperfection\u201d...on top of the Linux kernel, no less! Oh, the ironies...\n\nReport comment\n\nReply\n\n  6. David Kuder says:\n\nApril 11, 2024 at 9:47 am\n\nBack when systemd was just starting to take off, I remember someone also came\nout with a makefile based init system that didn\u2019t go anywhere. /sbin/init was\nmostly just a wrapper for make -C /etc/init.d -j CPUCOUNT and through makefile\nmagic dependancies would be resolved and should something fail the wrapper\nscript would catch the fallout and start an emergency shell if needed. It\u2019s\ninteresting the contrast between systemd and BSD startup scripts of old, or\neven stranger init systems like OpenVMS (it\u2019s all DCL, all the way down, with\na very linear startup progression) or AS/400 (you get a subsystem, and you get\na subsystem.. we all get subsystems!)\n\nReport comment\n\nReply\n\n  7. Scott Johnson says:\n\nApril 11, 2024 at 10:21 am\n\nMy favorite command involving systemd: apt remove systemd.\n\nReport comment\n\nReply\n\n    1. Stappers says:\n\nApril 11, 2024 at 12:15 pm\n\nPlease elaborate. What \u201capt install\u201d was done before that \u201capt remove\u201d?\n\nAnd please mention which \u201capt based distro\u201d you are using.\n\nReport comment\n\nReply\n\n      1. Wejn says:\n\nApril 12, 2024 at 5:57 am\n\nDevuan?\n\nReport comment\n\nReply\n\n        1. Stappers says:\n\nApril 13, 2024 at 3:44 am\n\nDevuan is not installed with systemd, so no need for `apt remove systemd`.\n\nMy question, \u2018What \u201capt install\u201d was done before that \u201capt remove\u201d?\u2019, in other\nwords:\n\nWhen systemd is removed, there needs to be another /sbin/init, which package\ndoes provide it?\n\nReport comment\n\nReply\n\n  8. Greg Chabala says:\n\nApril 11, 2024 at 11:33 am\n\nNot to pile on about on a systemd article that is at least as good as systemd\ndeserves, but I\u2019d also like to see a write up on systemd alternatives. If\nanything, the xz incident should push more people to think about getting away\nfrom systemd, and more guides about that will help.\n\nI\u2019m still using crontab and @reboot for starting services, and I\u2019m sure\nthere\u2019s plenty of tips and best practices around that we could be sharing\ninstead of talking about systemd unit files.\n\nReport comment\n\nReply\n\n  9. Panondorf says:\n\nApril 11, 2024 at 11:42 am\n\nI\u2019ve been using Linux as my desktop for 26 years. For the majority of them it\nhas been Gentoo although there was Debian before and various RPM based distros\nbefore that. (Adjusting expectations for the time period... nothing will ever\ntouch Mandrake for Desktop use)\n\nAnyway... I resisted SystemD. Until I really really wanted to try Anbox. And\nso I had to switch. Turned out I didn\u2019t like Anbox all that much. But SystemD\nwas already working.\n\nAnd that is what it has done. It has worked. No, I don\u2019t notice any advantage\nover OpenRC. But I haven\u2019t noticed much of a disadvantage either. Certainly\nnot enough to make the effort to switch back.\n\nAnd honestly.. every version of every distro had such different helper\nfunctions and workflow to learn for writing an init script... The very few\ntimes I\u2019ve had to write a unit... have been much more straightforward.\n\nI do hate the wordy names though. Even though it\u2019s rarely necessary every\nexample wants one to type the .service or .timer in every command. Every\ninitscript I have ever started or stopped has been much shorter named!\n\nAnd the order of arguments to systemctl is just plain STUPID. \u201csystemctl xable\nblah.service\u201d. But you are likely to type two commands, one to start it and\none to enable it. Make the action, start/enable/disable go last. That way one\ncan just hit the up error, backspace over the action (or Alt-bkspc) and type\nthe second action. Don\u2019t put the action in the middle! What was wrong with\nthose people?!!?\n\nBut no, since installing SystemD my system has not failed, been hacked or\nreally had anything bad happen to it that was a result of the switch.\n\nSo not in love with SystemD. But don\u2019t see a need to switch back either.\n\nReport comment\n\nReply\n\n    1. Steven Clark says:\n\nApril 11, 2024 at 12:16 pm\n\nI think it\u2019s more so you can say: systemctl enable foo barr.path baz.socket\n\nReport comment\n\nReply\n\n      1. Mdl says:\n\nApril 11, 2024 at 2:58 pm\n\nAlso, not all actions require a unit file and may require other flags, so\n`systemctl [action] [actions options]` makes more sense semantically.\n\nThis is different from `service [service] [services action]`, where the action\nwas more service-specific\n\nReport comment\n\nReply\n\n    2. PreferLinux says:\n\nApril 11, 2024 at 5:01 pm\n\nsystemctl enable \u2013now _____ should do what you\u2019re after even better.\n\nReport comment\n\nReply\n\n    3. Greg A says:\n\nApril 11, 2024 at 5:03 pm\n\nyeah i can really relate to this narrative, and i wish it was mine. i am\ndefinitely past the need to tear up everything i use \u2014 if it works i don\u2019t\nhave to touch it. i used macosx for about 5 years and i used it just like you\nare using systemd. it simply worked. i had a brief battle with Kicker but i\nwas able to work out the one undocumented thing i was hung up on and then it\nworked exactly how i wanted it to, even though i didn\u2019t understand how it was\nreally all tied together.\n\nand of course i use android every day and i simply accept that a lot of the\nOS-provided APIs *don\u2019t work and i will never get to the bottom of it*. isn\u2019t\nthat a funny way to tolerate software that \u201cjust works\u201d lol\n\ni definitely agree it\u2019s good to let a sleeping dog lie and i wish systemd\nhadn\u2019t both failed to meet my needs and assertively interfered with all my\nworkarounds. i would definitely still use systemd if i had an experience like\nyours.\n\nReport comment\n\nReply\n\n    4. Lucas says:\n\nApril 12, 2024 at 8:56 am\n\nreversing the commands would be easy with a custom script. i do that for `mv`\nin case i want to move a bunch of files to one directory (or just easily move\na file back that i recently moved, that has a long path). something like\n`function vm() { destination=$1; shift; mv $@ $destination; }`. you could do\n`function sysctl() { service=$1; shift; for action in \u201c$@\u201d; do systemctl\n$action $service; done; }` and run it as `sysctl blah.service start enable` in\none go.\n\nReport comment\n\nReply\n\n  10. Steven Clark says:\n\nApril 11, 2024 at 12:05 pm\n\nAn important detail for everyone\u2019s sanity: /lib/systemd/ is the default\nservice files and config with no customizations or enablement by the operator,\nlike turning on services that aren\u2019t on by default. /run/systemd/ is where the\nauto-created units go for things like mount points and the wrappers for\nsysvinit compatibility. It can and happily *will* override things in\n/lib/systemd/ as it\u2019s specific to your system state. /etc/systemd/ is where\nmost of the symlinks that define what\u2019s enabled or disables go, as well as\nwhere any per-system customization goes. It overrides both /lib/systemd/ and\n/var/systemd/ and is essentially the last word. Everything in the systemd\ngraph gets a file or symlink in one of these.\n\nReport comment\n\nReply\n\n  11. Sum Gai says:\n\nApril 11, 2024 at 3:39 pm\n\nI hated systemd until i wrote my first unit. Then, I wondered why things\nweren\u2019t this simple earlier. It may have excessive scope, but denying its\nutility, especially for things that have no viable alternatives, is to limit\noneself to inferior tools.\n\nI have some remarks for a follow-up post:\n\n\u2013 You missed the most important part of timers: unlike cron, they prevent\nduplicate jobs. I\u2019ve seen many systems brought down by long-running crons\npiling up, and that\u2019s just not a problem with timers. \u2013 The excellent cgroup-\nbased isolation for all units (much of which is optional) is seemingly\nunavailable with other tools unless you\u2019re actually running things in a full\ncontainer system. \u2013 The resource controls offered by systemd.exec allow for\nfar more effective limitations than other tools. The ability to easily set a\nmemory limit for a large process and set its CPU and I/O shares low is\nfantastic. If you want to see how much better it is, run a heavy process with\nnice -n 19, then run it again with a single share via systemd, and see how\nmuch more responsive your system is. \u2013 Systemd is so far the only available\ntool for enabling KSM on processes that aren\u2019t VMs. \u2013 You can use the fabulous\nsystemd-run command to run processes in transient units, and can make use of\nevery systemd control for said units. Very nice for resource limits on one-\noffs, or backgrounding a long-running process with full journald log capture\nand no need for tmux. This saved my bacon at work once, as I needed to run\nmultiple long-running one-off processes across the fleet, but one cannot do so\nwith Ansible and tmux. You can with Ansible and systemd-run, however.\n\nReport comment\n\nReply\n\n    1. Mordae says:\n\nApril 11, 2024 at 11:48 pm\n\nThanks for going in and countering all that cheap negativity.\n\nI sign everything you\u2019ve written. As a sysadmin, I consider those features you\nhave mentioned absolutely critical. I\u2019ve never looked back and thoroughly\nenjoyed the day we\u2019ve finally migrated away from OS versions that did not have\nsystemd.\n\nReport comment\n\nReply\n\n      1. Greg A says:\n\nApril 12, 2024 at 12:26 pm\n\nit doesn\u2019t counter my negativity, anyways. people who need the features badly\nenough to justify the expense of the deep dive to get started obviously find\nit useful. i would never say that\u2019s not the case. and so far as i can tell, it\ndoesn\u2019t look like Sum Gai would criticize my point that if you want to\nleverage the power of tools that do one thing well, then systemd isn\u2019t going\nto help you.\n\ni mean, if you live in a world where long-running cron jobs piling up has been\na problem for you then there is absolutely no denying that cron is the wrong\ntool for that job!\n\nmy point isn\u2019t that systemd is awful at everything, but that it is awful\nspecifically for my needs, and the attitude that i have to learn to get along\nwith it is fundamentally wrong. i don\u2019t have to misuse systemd anymore than\nyou all have to misuse cron!\n\nReport comment\n\nReply\n\n  12. cmholm says:\n\nApril 11, 2024 at 4:48 pm\n\nAl\u2019s right, we\u2019re stuck with this desktop-wagging-the-server thing for a\nwhile. But, we don\u2019t have to be. The things that systemd solves only exist for\ndesktop system with attached mouse/keyboard/monitor, running a GUI and having\nto deal with USB plug-ins, WiFi connections, etc.\n\nServers (including most SBCs), which are still the main Linux platform, don\u2019t\nneed that crap. They need maintainability and security that can be managed by\nthe people running them, one bloody /etc/init.d/item at a time.\n\nThe day the US defense agencies find that their servers are pwned from head to\ntail because the systemd maintainers had too many balls in the air, it will be\ngone, as well as any Federal IT contractor that doesn\u2019t make it happen\nforthwith.\n\nReport comment\n\nReply\n\n  13. The Commenter Formerly Known As Ren says:\n\nApril 11, 2024 at 5:18 pm\n\nInstall may be harder/confusing next time, but my PC is getting long in the\ntooth (15 years old?), and I plan on installing Devuan (w/o a Windows\npartition) on my next PC to get rid of systemd on the current one.\n\nReport comment\n\nReply\n\n    1. Slim W. says:\n\nApril 11, 2024 at 8:51 pm\n\nI ditched Windows entirely, and have been on devuan since the first stable\nrelease. The only reason I kept Windows was gaming, and Steam+Proton has got\nthat covered now. You might find a couple multiplayer shooters that won\u2019t work\nbecause of cheat protection or copy protection, but they\u2019re few and far\nbetween now.\n\nReport comment\n\nReply\n\n      1. The Commenter Formerly Known as Ren says:\n\nApril 12, 2024 at 9:40 am\n\nI kept Win7 because some apps (such as connecting a cell phone to the PC)\ndidn\u2019t have Linux equivalents. But, I never gave Wine a second chance, way\nback when, I\u2019ve heard it is much better now.\n\nReport comment\n\nReply\n\n  14. C says:\n\nApril 11, 2024 at 10:03 pm\n\nHow to get started with systems? Don\u2019t..... Fixed it.\n\nReport comment\n\nReply\n\n  15. TouchGrass says:\n\nApril 11, 2024 at 10:19 pm\n\nYou kids get off my yard!\n\nReport comment\n\nReply\n\n    1. The Commenter Formerly Known as Ren says:\n\nApril 12, 2024 at 9:41 am\n\nB^)\n\nReport comment\n\nReply\n\n  16. Drone says:\n\nApril 11, 2024 at 10:39 pm\n\nMAYBE THERE IS A BETTER WAY?\n\n* Category:Linux distributions without systemd\n\nhttps://en.wikipedia.org/wiki/Category:Linux_distributions_without_systemd\n\n* What are the best Linux distros that don\u2019t use systemd?\n\nhttps://www.slant.co/topics/18348/~linux-distros-that-don-t-use-systemd\n\n* No systemd\n\nhttps://nosystemd.org/\n\n* open-source operating systems without systemd in the default installation\n\nhttps://www.without-systemd.org/wiki/index_php/Main_Page/\n\n* Here are 14 Systemd-Free Linux Distributions\n\nhttps://itsfoss.com/systemd-free-distros/\n\n* The Best Linux Distributions Without systemd\n\nhttps://www.howtogeek.com/713847/the-best-linux-distributions-without-systemd/\n\nReport comment\n\nReply\n\n  17. It's all so tiresome. says:\n\nApril 12, 2024 at 3:33 am\n\nOut of busybox, freebsd rc, openrc, sysvinit, and runit the only init system\nthat has a proven track record of ruining my projects since 2018 (debian\njessie) is systemd. It boots slower on low end embedded systems (an extra 1-2\nseconds counts in some applications) It can sometimes wait for minutes when\npowering down (2+ seconds for clean poweroff can be a deal breaker in most of\nmy use cases) It adds extra complexity where non is needed (why do I need to\nhave a service manager when the service can be run in a shell while loop\ncalled from rc.local?) It introduces dependency hell for small projects (I\ndon\u2019t want to pull in 20+ libraries for a minimal desktop)\n\nPeople will accuse me of not configuring things properly. To them I ask: Why\nshould I have to constantly reconfigure everything out of the box when the old\nway JUST WERKd, and still JUST WERKS? Others will accuse me of being stuck in\nthe past. To them I say: I think I\u2019ll stick with the old way if the price of\nthe new way is the opportunity to brick your motherboard. I think I\u2019ll stick\nwith things that have given me 20+ years of reliable, predictable behavior,\nthat run extremely well on $9 computers, and obscenely well on $50+ computers.\n\nReport comment\n\nReply\n\n    1. The Commenter Formerly Known as Ren says:\n\nApril 12, 2024 at 9:44 am\n\n\u201cI think I\u2019ll stick with things that have given me 20+ years of reliable,\npredictable behavior,\u201d\n\nLike my 2004 Honda CR-V.\n\nReport comment\n\nReply\n\n  18. zelea2 says:\n\nApril 12, 2024 at 3:43 am\n\nI also dislike systemd and I still prefer to run debian rather than devuan. To\nremove it from a recent debian system: # apt-get install sysvinit-core\nsysvinit-utils # cp /usr/share/sysvinit/inittab /etc/inittab (you may also\nneed to edit /etc/default/grub if you use it) then place in\n/etc/apt/preferences (so that it won\u2019t get installed again when updating)\nPackage: systemd* Pin: origin * Pin-Priority: -1 and finally remove and reboot\n# apt-get remove \u2013purge \u2013auto-remove systemd\n\nI also replace udev (which is another troublesome package by the same author)\nwith eudev and fix it in /etc/apt/preferences too.\n\nReport comment\n\nReply\n\n    1. The Commenter Formerly Known as Ren says:\n\nApril 12, 2024 at 9:44 am\n\nThank you!\n\nReport comment\n\nReply\n\n### Leave a ReplyCancel reply\n\nPlease be kind and respectful to help make the comments section excellent.\n(Comment Policy)\n\nThis site uses Akismet to reduce spam. Learn how your comment data is\nprocessed.\n\n# Search\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe\n\n# If you missed it\n\n  * ## Chandra X-ray Observatory Threatened By Budget Cuts\n\n39 Comments\n\n  * ## In A Twist, Humans Take Jobs From AI\n\n40 Comments\n\n  * ## Heating Mars On The Cheap\n\n74 Comments\n\n  * ## Where Graph Theory Meets The Road: The Algorithms Behind Route Planning\n\n31 Comments\n\n  * ## Space Mirrors: Dreams Of Turning The Night Into Day Around The Clock\n\n28 Comments\n\nMore from this category\n\n# Our Columns\n\n  * ## Hackaday Podcast Episode 266: A Writer\u2019s Deck, Patching Your Battleship, And Fact-Checking The Eclipse\n\nNo comments\n\n  * ## This Week In Security: BatBadBut, DLink, And Your TV Too\n\n19 Comments\n\n  * ## FLOSS Weekly Episode 778: OctoPrint \u2014 People Are Amazing At Breaking Things\n\n6 Comments\n\n  * ## Ultimate Power: Lithium-Ion Packs Need Some Extra Circuitry\n\n14 Comments\n\n  * ## Hackaday Links: April 7, 2024\n\n12 Comments\n\nMore from this category\n\n# Search\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe\n\n# If you missed it\n\n  * ## Chandra X-ray Observatory Threatened By Budget Cuts\n\n39 Comments\n\n  * ## In A Twist, Humans Take Jobs From AI\n\n40 Comments\n\n  * ## Heating Mars On The Cheap\n\n74 Comments\n\n  * ## Where Graph Theory Meets The Road: The Algorithms Behind Route Planning\n\n31 Comments\n\n  * ## Space Mirrors: Dreams Of Turning The Night Into Day Around The Clock\n\n28 Comments\n\nMore from this category\n\n# Categories\n\n# Our Columns\n\n  * ## Hackaday Podcast Episode 266: A Writer\u2019s Deck, Patching Your Battleship, And Fact-Checking The Eclipse\n\nNo comments\n\n  * ## This Week In Security: BatBadBut, DLink, And Your TV Too\n\n19 Comments\n\n  * ## FLOSS Weekly Episode 778: OctoPrint \u2014 People Are Amazing At Breaking Things\n\n6 Comments\n\n  * ## Ultimate Power: Lithium-Ion Packs Need Some Extra Circuitry\n\n14 Comments\n\n  * ## Hackaday Links: April 7, 2024\n\n12 Comments\n\nMore from this category\n\n# Recent comments\n\n  * Hal on M17 Digital Communications Go From Strength To Strength\n  * paulvdh on No Lathe? Build Your Own\n  * elwing on Who\u2019s Afraid Of A CRT?\n  * shinsukke on A Slew Of AI Courses To Get Yourself Up To Speed\n  * Matthias on Do You Trust Your Cheap Fuses?\n  * paulvdh on No Lathe? Build Your Own\n  * Reluctant Cannibal on A Slew Of AI Courses To Get Yourself Up To Speed\n  * Fil Fer on Vintage Particle Counter Is A Treasure Trove Of Classic Parts\n  * Stevie on Who\u2019s Afraid Of A CRT?\n  * Andrew on Delays And Timers In LTSpice (no 555)\n\n# Now on Hackaday.io\n\n  * kelvinA has updated the log for Coaxial8or [gd0144].\n  * bob099 started following Hack Chat Transcripts.\n  * Vlad Conut liked Power Bank 3A.\n  * stepping-razor liked Hackaday HalloWing Case.\n  * bob099 liked Multimeter.\n  * ico621 liked Hacks and tricks.\n  * ico621 liked The Devil is in the Details.\n  * Error_404 liked keezyboost40.\n  * Piotr has updated the log for Input for home automation.\n  * Piotr has added a new log for Input for home automation.\n\n  * Home\n  * Blog\n  * Hackaday.io\n  * Tindie\n  * Hackaday Prize\n  * Video\n  * Submit A Tip\n  * About\n  * Contact Us\n\n# Never miss a hack\n\nFollow on facebook Follow on twitter Follow on youtube Follow on rss Contact\nus\n\n# Subscribe to Newsletter\n\nCopyright \u00a9 2024 | Hackaday, Hack A Day, and the Skull and Wrenches Logo are Trademarks of Hackaday.com | Privacy Policy | Terms of Service | Digital Services Act Powered by WordPress VIP\n\nBy using our website and services, you expressly agree to the placement of our\nperformance, functionality and advertising cookies. Learn more\n\nLoading Comments...\n\n", "frontpage": false}
