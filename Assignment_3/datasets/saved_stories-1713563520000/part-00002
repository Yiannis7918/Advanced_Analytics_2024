{"aid": "40088319", "title": "Penzai: JAX Research Toolkit for Neural Networks", "url": "https://github.com/google-deepmind/penzai", "domain": "github.com/google-deepmind", "votes": 3, "user": "ubj", "posted_at": "2024-04-19 15:50:26", "comments": 0, "source_title": "GitHub - google-deepmind/penzai: A JAX research toolkit for building, editing, and visualizing neural networks.", "source_text": "GitHub - google-deepmind/penzai: A JAX research toolkit for building, editing,\nand visualizing neural networks.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ngoogle-deepmind / penzai Public\n\n  * Notifications\n  * Fork 1\n  * Star 112\n\nA JAX research toolkit for building, editing, and visualizing neural networks.\n\npenzai.readthedocs.io/\n\n### License\n\nApache-2.0 license\n\n112 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# google-deepmind/penzai\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n2 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ndanieldjohnsonandPenzai DevelopersFix documentation formatting and links, add\nREADME image.Apr 19, 202404dc170 \u00b7 Apr 19, 2024Apr 19, 2024\n\n## History\n\n6 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Fix unittest workflow Python version.| Apr 17, 2024  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| Initial export of Penzai.| Apr 17, 2024  \n  \n### docs\n\n|\n\n### docs\n\n| Fix documentation formatting and links, add README image.| Apr 19, 2024  \n  \n### notebooks\n\n|\n\n### notebooks\n\n| Initial release version 0.1.0 + update docs| Apr 18, 2024  \n  \n### penzai\n\n|\n\n### penzai\n\n| Initial release version 0.1.0 + update docs| Apr 18, 2024  \n  \n### tests\n\n|\n\n### tests\n\n| Initial export of Penzai.| Apr 17, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial release version 0.1.0 + update docs| Apr 18, 2024  \n  \n### .pylintrc\n\n|\n\n### .pylintrc\n\n| Initial export of Penzai.| Apr 17, 2024  \n  \n### .readthedocs.yaml\n\n|\n\n### .readthedocs.yaml\n\n| Fix documentation builds and update docs theme.| Apr 18, 2024  \n  \n### AUTHORS\n\n|\n\n### AUTHORS\n\n| Initial export of Penzai.| Apr 17, 2024  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| Initial export of Penzai.| Apr 17, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial export of Penzai.| Apr 17, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Fix documentation formatting and links, add README image.| Apr 19, 2024  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| Initial release version 0.1.0 + update docs| Apr 18, 2024  \n  \n### run_tests.py\n\n|\n\n### run_tests.py\n\n| Initial export of Penzai.| Apr 17, 2024  \n  \n## Repository files navigation\n\n# Penzai\n\n> \u76c6 (\"pen\", tray) \u683d (\"zai\", planting) - an ancient Chinese art of forming\n> trees and landscapes in miniature, also called penjing and an ancestor of\n> the Japanese art of bonsai.\n\nPenzai is a JAX library for writing models as legible, functional pytree data\nstructures, along with tools for visualizing, modifying, and analyzing them.\nPenzai focuses on making it easy to do stuff with models after they have been\ntrained, making it a great choice for research involving reverse-engineering\nor ablating model components, inspecting and probing internal activations,\nperforming model surgery, debugging architectures, and more. (But if you just\nwant to build and train a model, you can do that too!)\n\nWith Penzai, your neural networks could look like this:\n\nPenzai is structured as a collection of modular tools, designed together but\neach useable independently:\n\n  * penzai.nn (pz.nn): A declarative combinator-based neural network library and an alternative to other neural network libraries like Flax, Haiku, Keras, or Equinox, which exposes the full structure of your model's forward pass in the model pytree. This means you can see everything your model does by pretty printing it, and inject new runtime logic with jax.tree_util. Like Equinox, there's no magic: models are just callable pytrees under the hood.\n\n  * penzai.treescope (pz.ts): A superpowered interactive Python pretty-printer, which works as a drop-in replacement for the ordinary IPython/Colab renderer. It's designed to help understand Penzai models and other deeply-nested JAX pytrees, with built-in support for visualizing arbitrary-dimensional NDArrays.\n\n  * penzai.core.selectors (pz.select): A pytree swiss-army-knife, generalizing JAX's .at[...].set(...) syntax to arbitrary type-driven pytree traversals, and making it easy to do complex rewrites or on-the-fly patching of Penzai models and other data structures.\n\n  * penzai.core.named_axes (pz.nx): A lightweight named axis system which lifts ordinary JAX functions to vectorize over named axes, and allows you to seamlessly switch between named and positional programming styles without having to learn a new array API.\n\n  * penzai.data_effects (pz.de): An opt-in system for side arguments, random numbers, and state variables that is built on pytree traversal and puts you in control, without getting in the way of writing or using your model.\n\nDocumentation on Penzai can be found at https://penzai.readthedocs.io.\n\n## Getting Started\n\nIf you haven't already installed JAX, you should do that first, since the\ninstallation process depends on your platform. You can find instructions in\nthe JAX documentation. Afterward, you can install Penzai using\n\n    \n    \n    pip install penzai\n\nand import it using\n\n    \n    \n    import penzai from penzai import pz\n\n(penzai.pz is an alias namespace, which makes it easier to reference common\nPenzai objects.)\n\nWhen working in an Colab or IPython notebook, we recommend also configuring\nPenzai as the default pretty printer, and enabling some utilities for\ninteractive use:\n\n    \n    \n    pz.ts.register_as_default() pz.ts.register_autovisualize_magic() pz.enable_interactive_context() # Optional: enables automatic array visualization pz.ts.active_autovisualizer.set_interactive(pz.ts.ArrayAutovisualizer())\n\nHere's how you could initialize and visualize a simple neural network:\n\n    \n    \n    from penzai.example_models import simple_mlp mlp = pz.nn.initialize_parameters( simple_mlp.MLP.from_config([8, 32, 32, 8]), jax.random.key(42), ) # Models and arrays are visualized automatically when you output them from a # Colab/IPython notebook cell: mlp\n\nHere's how you could capture and extract the activations after the elementwise\nnonlinearities:\n\n    \n    \n    mlp_with_captured_activations = pz.de.CollectingSideOutputs.handling( pz.select(mlp) .at_instances_of(pz.nn.Elementwise) .insert_after(pz.de.TellIntermediate()) ) output, intermediates = mlp_with_captured_activations( pz.nx.ones({\"features\": 8}) )\n\nTo learn more about how to build and manipulate neural networks with Penzai,\nwe recommend starting with the \"How to Think in Penzai\" tutorial, or one of\nthe other tutorials in the Penzai documentation.\n\nThis is not an officially supported Google product.\n\n## About\n\nA JAX research toolkit for building, editing, and visualizing neural networks.\n\npenzai.readthedocs.io/\n\n### Topics\n\nvisualization neural-networks interpretability fine-tuning jax\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n112 stars\n\n### Watchers\n\n6 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Releases 1\n\nInitial release - Penzai 0.1.0 Latest\n\nApr 18, 2024\n\n## Languages\n\n  * Python 59.0%\n  * Jupyter Notebook 38.8%\n  * JavaScript 2.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
