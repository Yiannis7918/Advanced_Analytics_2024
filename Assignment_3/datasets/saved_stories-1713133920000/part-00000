{"aid": "40032287", "title": "Brilliant Jerks in Engineering", "url": "https://www.brendangregg.com/blog/2017-11-13/brilliant-jerks.html", "domain": "brendangregg.com", "votes": 1, "user": "kiyanwang", "posted_at": "2024-04-14 16:30:14", "comments": 0, "source_title": "Brendan Gregg's Blog", "source_text": "Brilliant Jerks in Engineering\n\nBrendan's site:\n\nStart Here Homepage Blog Sys Perf book BPF Perf book Linux Perf eBPF Tools\nperf Examples Perf Methods USE Method TSA Method Off-CPU Analysis Active\nBench. WSS Estimation Flame Graphs Heat Maps Frequency Trails Colony Graphs\nDTrace Tools DTraceToolkit DtkshDemos Guessing Game Specials Books Other Sites\n\nSystems Performance 2nd Ed.\n\nBPF Performance Tools book Recent posts:\n\n  * 24 Mar 2024 \u00bb Linux Crisis Tools\n  * 17 Mar 2024 \u00bb The Return of the Frame Pointers\n  * 10 Mar 2024 \u00bb eBPF Documentary\n  * 28 Apr 2023 \u00bb eBPF Observability Tools Are Not Security Tools\n  * 01 Mar 2023 \u00bb USENIX SREcon APAC 2022: Computing Performance: What's on the Horizon\n  * 17 Feb 2023 \u00bb USENIX SREcon APAC 2023: CFP\n  * 02 May 2022 \u00bb Brendan@Intel.com\n  * 15 Apr 2022 \u00bb Netflix End of Series 1\n  * 09 Apr 2022 \u00bb TensorFlow Library Performance\n  * 19 Mar 2022 \u00bb Why Don't You Use ...\n  * 26 Sep 2021 \u00bb The Speed of Time\n  * 06 Sep 2021 \u00bb ZFS Is Mysteriously Eating My CPU\n  * 30 Aug 2021 \u00bb Analyzing a High Rate of Paging\n  * 27 Aug 2021 \u00bb Slack's Secret STDERR Messages\n  * 05 Jul 2021 \u00bb USENIX LISA2021 Computing Performance: On the Horizon\n  * 03 Jul 2021 \u00bb How To Add eBPF Observability To Your Product\n  * 15 Jun 2021 \u00bb USENIX LISA2021 BPF Internals (eBPF)\n  * 04 Jun 2021 \u00bb An Unbelievable Demo\n  * 29 May 2021 \u00bb Moving my US tech job to Australia\n  * 23 May 2021 \u00bb What is Observability\n\nBlog index About RSS\n\n# Brendan Gregg's Blog\n\nhome\n\n## Brilliant Jerks in Engineering\n\n13 Nov 2017\n\nNotice board at Ericsson, Stockholm (pic by DeirdreS)\n\nMany of us have worked with them: the engineering jerk who is brilliant at\nwhat they do, but treats others like trash. Some companies have a policy not\nto hire them (e.g., Netflix's \"No Brilliant Jerks\", which was one of the many\nreasons I joined the company). There's also the \"No Asshole Rule\", popularized\nby a bestselling book of this title, which provides the following test:\n\n1\\. After encountering the person, do people feel oppressed, humiliated or\notherwise worse about themselves? 2. Does the person target people who are\nless powerful than him/her?\n\nHere's a test for you or your company: Would you tolerate a brilliant engineer\nwho is also an asshole? (Or the more company-polite version: Would you\ntolerate a brilliant jerk?)\n\nThere are numerous articles and opinions on the topic, including Brilliant\nJerks Cost More Than They Are Worth, and It's Better to Avoid a Toxic Employee\nthan Hire a Superstar. My colleague Justin Becker is also giving a talk at\nQConSF 2017 on the topic: Am I a Brilliant Jerk?.\n\nIt may help to clarify that \"brilliant jerk\" can mean different things to\ndifferent people. To illustrate, I'll describe two types of brilliant jerks:\nthe selfless and the selfish, and their behavior in detail. I'll then describe\nthe damage caused by these jerks, and ways to deal with them.\n\nThe following are fictional characters. These are not two actual engineers,\nbut are collections of related traits to help examine this behavior beyond the\nsimple \"no asshole rule.\" These are engineers who by default act like jerks,\nnot engineers who sometimes act that way.\n\n## Fictional Alice, the selfless brilliant jerk\n\nAlice is a brilliant engineer. Alice cares about the company.\n\nShe is direct and honest. If she believes that an unpopular position is right\nfor the company, Alice does not hesitate to voice it. She will even browbeat\nothers to make her point, often coming across as mean-spirited. Alice would\npoint out that she wasn't being mean, she was just stating what is right, and\nthat being mean shouldn't hurt the company anyway. She has little empathy for\nthe feelings of others, and sees little business value in having it.\n\nAlice is great at working individually on hard engineering problems. She gets\nalong fine with her immediate team and manager, who understand her\npersonality. She doesn't get on well with others whom she only meets\noccasionally. Outside of her team, Alice is known as a jerk, and people try to\navoid working with her.\n\nAlice is great at fixing hard bugs, writing test suites, doing code merges,\nand other unglamorous work. If the company needs it done, she's happy to do\nit, and doesn't care much whether it furthers her own career.\n\nWhile selfless jerks can be a net positive for the company, they can become\nmore effective if they learn that being kind results in greater productivity.\nThis topic was covered in the Be Kind post by boz. Different companies may\nhave different attitudes towards Alice, whether to tolerate her behavior or\nnot (most reviewers of this post said \"no,\" one said \"it's a grey area\").\nStartups may tolerate Alice, for example, since the company is so small that\neveryone knows Alice and understands her personality.\n\nBut I've described selfless jerks primarily for contrast with selfish jerks.\n\n## Fictional Bob, the selfish brilliant jerk\n\nBob is a brilliant engineer. Bob cares about Bob.\n\nHe is selfish, lacks empathy, and has delusions of grandeur. He believes that\nany behavior is justified that benefits himself, including abusing and\nexploiting others, for which he shows no guilt or remorse. He can be charming\nand charismatic to get his way, causing people to ignore or excuse his bad\nbehavior.\n\nBelow is a list of attributes that describe Bob, an extreme example of a\nbrilliant engineering jerk. Not every brilliant jerk exhibits all of these\nbehaviors, but I've seen each and every one of them firsthand.\n\nBob interrupts others, and ignores their opinions. He believes that he is the\nmost important person in the room, and has no interest in what others have to\nsay, frequently interrupting them. He can monopolize conversations with long,\nexaggerated stories that flatter himself. Less-assertive engineers are\neffectively silenced, even if their opinions on the topic are the most\nvaluable.\n\nBob only does work that benefits himself. He can work well on hard engineering\nproblems, but only works on those he enjoys, or that help his career or\npromote his own earlier work. He creates new projects and immediately claims\ncredit, but leaves the dirty work of finishing them to others, and avoids\nresponsibility if they fail. He is brilliant at convincing the company to let\nhim do what he wants, even when that ignores market demand or his own past\nperformance. He never seriously mentors or trains other staff \u2013 he does not\nsee that as useful to his own career.\n\nBob bullies, humiliates, and oppresses individuals. With non-technical people,\nhe wins arguments by bamboozling them with irrelevant technical detail, making\nthem feel dumb. With junior technical people, Bob likes to ridicule their\nideas, letting everyone know how stupid they are, and how much smarter he is.\nWhen his technical specialties are needed, he makes people beg and grovel for\nhis help, as another way to humiliate them. When others make mistakes, he\nenjoys shaming and mocking them with biting sarcasm and witty insults. He uses\nsimilar rhetoric in arguments, where he must always win, no matter the cost.\n\nBob engages in displays of dominance in front of groups. Bob likes to show\neveryone how important he is by how much he can get away with, including sheer\nrudeness. He is late to meetings (on purpose), puts his feet up on the table,\nthen looks at his phone or laptop while ignoring everyone around him. He\nsometimes makes obscene remarks in the office, bragging: \"If anyone else said\nthat, they'd be fired!\". He also insists on having a better\nlaptop/desktop/monitor than everyone else, to display his status.\n\nBob tries to assert authority over all areas of the company, including those\nwhere he has no expertise at all. Areas he cannot control, he denigrates:\nE.g., as an engineer, he will claim that marketing is stupid, useless,\nunnecessary, and that \"anyone could do it.\"\n\nBob is negative. He trash-talks other technologies, companies, and people\nbehind their backs, always finding something negative to say. He elevates his\nown status by slamming other people. He also attacks technologies that either\ndon't leverage his own prior work, or don't conform to his own beliefs. Other\nengineers avoid new technologies, for fear of damaging ridicule from Bob.\n\nBob manipulates and misleads. Sometimes he misleads subtly, by presenting\nfacts that are literally true in a way that is intentionally misleading. At\nother times he will simply lie, and do it with such confidence and\nassertiveness that he is almost always believed. He states his own preferences\nand opinions as facts.\n\nBob uses physical intimidation. Bob glares at those he doesn't like, and may\ninvade people's personal space. He may also use violent gestures such as\nslamming fists on desks.\n\nA string of good employees have quit because of Bob. Some engineers become fed\nup with Bob and quit. Talented engineers are driven out by Bob on purpose, to\neliminate threats to his own status. Bob demonizes those who left, attributing\npast failures to them, and their successes to others who stayed, especially\nhimself. In this way, he convinces management that losing those staff was good\nfor the company, and stops them from realizing that the real problem is Bob.\nSome who have left, if asked, will cite other reasons for quitting, hoping to\navoid becoming victims of Bob's smear campaigns.\n\nBob gives great talks \u2013 about himself. Because he is a brilliant engineer and\na great public orator, he is a popular speaker at technical events. In talks,\nhe narrates self-enhancing stories and rewrites history to flatter himself,\ntaking credit for other people's work \u2013 if not blatantly, then tacitly or by\nimplication. He has a group of spellbound followers outside of the company who\nhero-worship and idolize him, and would love to work with him. He is well\nliked from afar.\n\nBob exploits junior engineers: Bob finds junior engineers who admire his\nbrilliance, and encourages them to do work that elevates Bob's ideas and\nprojects, reflecting glory back onto Bob. They become so invested in helping\nBob's career growth that they have none of their own.\n\nBob is a negative role model. Bob can drag down the workplace or community by\nbecoming a negative role model and having others imitate his behavior. Those\nwho admire Bob become negative, bully others, and engage in similar personal\nattacks, hoping for his approval and to become Bob themselves. Others simply\nuse Bob to excuse their own pre-existing bad behavior: If Bob can do it, so\ncan I.\n\nSome of Bob's coworkers become accomplices, and gaslight his abuse. They were\nthere when he attacked and humiliated others, and they did nothing \u2013 or\nlaughed along, encouraging Bob to continue. Bob likes to surround himself with\nsuch enablers. They may be otherwise reasonable people who have yet to\nunderstand that what they are witnessing is abuse. They may publicly defend\nBob and deny that abuse happened, or minimize it, gaslighting Bob's victims\n(\"everyone's a jerk sometimes\").\n\nBob refuses to change. Bob knows that his behavior hurts people, but \"that's\ntheir problem.\"\n\nIt bears repeating: I have seen each of these behaviors firsthand, from\nmultiple brilliant jerks. Bob is an extreme fictional case who exhibits all of\nthese behaviors. One particular person may exhibit only some, without\nnecessarily being a jerk. But, if you recognize many of these traits in a\ncolleague \u2013 or in yourself \u2013 then, yes, you're probably dealing with a major-\nleague jerk.\n\nSome reviewers of this post have said that Bob seems unbelievable: No one\ncould be anywhere near that bad! They are fortunate not to have experienced a\nBob, which is the lesson here. Your understanding of a \"brilliant jerk\" may\ndiffer from that of someone who has actually worked with a Bob, or another\nsevere type of jerk.\n\n## The problems caused by brilliant jerks\n\nProblems caused by Alice, the selfless jerk, may include:\n\n  * Alice hurts or offends some employees with her attitude.\n  * Alice causes her team and manager to spend energy mending fences with others.\n  * Alice's projects may be less successful, as others avoid working with her.\n  * Alice discourages others from asking her questions, so her technical expertise is often wasted.\n\nBut Bob, the selfish jerk, can cause these additional problems:\n\n  * Bob silences many technical opinions, lowering the company's technical IQ.\n  * Bob creates extra work for others who must fix his abandoned projects.\n  * Bob demoralizes many staff, which hurts productivity.\n  * Bob causes stress-related psychological and physical illness in his victims.\n  * Bob causes some staff to occasionally skip work: increasing absenteeism.\n  * Bob drives staff to quit, who will never come back.\n  * Bob may strengthen the company's competition, who hire those who quit.\n  * Bob makes it difficult to hire other good staff (word gets around).\n  * Bob discourages customers and investors (word gets around).\n  * Other staff devise processes to work around Bob, reducing the company's efficiency.\n  * Other staff may sabotage Bob's work, which sabotages the company.\n  * Bob inspires other staff to imitate his behavior, multiplying the problem.\n  * Bob creates a hostile workplace environment: an invitation to lawsuits.\n\nChapter 2 in \"The No Asshole Rule\" covers more details (although for general\nstaff, not just engineers), and has instructions for calculating your TCA: the\nTotal Cost of Assholes for your organization.\n\n## Dealing with brilliant jerks\n\nThere are two parts to this: helping the victims and staff who witness the\nbehavior, and dealing with the jerks themselves. Both are big topics that I'll\ndiscuss here only briefly.\n\nAt some companies, no one is telling Alice or Bob that their behavior is\ninappropriate. Everyone sees the bad behavior, but thinks it must be tolerated\nbecause Alice and Bob are so brilliant and valuable. Wrong! One important step\na company can take is to explicitly adopt a \"no brilliant jerks\" policy.\nNetflix has such a policy as part of the culture slide deck, now a memo, which\nreads:\n\n> On a dream team, there are no \u201cbrilliant jerks.\u201d The cost to teamwork is\n> just too high. Our view is that brilliant people are also capable of decent\n> human interactions, and we insist upon that. When highly capable people work\n> together in a collaborative context, they inspire each other to be more\n> creative, more productive and ultimately more successful as a team than they\n> could be as a collection of individuals. \u2013 Netflix culture memo\n\nThis policy isn't some useless feel-good text from a nameless source: it was\noriginally published on CEO Reed Hastings' slideshare account. To be\neffective, such a policy for your company may also need to come from your CEO.\nAll Netflix candidates are told to read the culture deck (memo) when\ninterviewing, and are told that, yes, we take it seriously. While this helps\npeople realize that jerks should not be tolerated, it doesn't necessarily stop\njerks from being hired in the first place: Bob is brilliant and charismatic\nand would probably pass the interview. However, he would then find himself at\na company where his colleagues recognize his bad behavior as unacceptable, and\nare empowered to speak up about it.\n\nIn over three years at Netflix, I've worked with zero brilliant jerks. The \"no\nbrilliant jerks\" policy works, and it's been great. If we hired any in that\ntime, they either changed their ways or left the company before I could\ninteract with them.\n\nSome brilliant jerks can mend their ways: Alice might be motivated to change\nif she can be made to understand that her behavior is hurting the company,\nwhich she cares about. She should be encouraged to exercise empathy, and to\nleave others feeling positive and motivated to work harder, rather than\ndemotivated. My colleague, Justin Becker, explores this in detail in his QCon\ntalk, including the topic of emotional intelligence (EQ). In the next section\nI'll share an example.\n\nAs for Bob: he should be told that his behavior hurts people and the company,\nand given the opportunity to change \u2013 but the reality is that he probably\ndoesn't care. He firmly believes that \"nice guys finish last,\" and, so far,\nbeing a jerk has worked well for him. His managers have the power to change\nthat equation, because they control things that Bob wants: they allow him to\nwork on his pet projects and to speak at events, they give him promotions and\nbonuses, and ultimately they let him keep his job.\n\n> \"I'd rather have a hole in my organization than an asshole.\" \u2013 Fred Wilson,\n> Velocity NY 2013 keynote.\n\nAs a colleague/victim/witness, you should report Bob's behavior to management,\nbut you probably shouldn't ask them outright to fire Bob (among other reasons,\nwhat if someday you were thought to be a Bob?). Give management information,\nbut let them decide how to act. Actually firing a brilliant jerk is a\ncomplicated topic for a separate post, ideally written by a manager who has\ndealt with this. There's usually a process to follow, which unfortunately Bob\nmay exploit to his advantage, showing improvement when needed to keep his job,\nbut then reverting back to his bad old ways. He may also have convinced\nmanagement that his technical skills and fame are so important that the\ncompany would fail without him. This isn't true, but fear may cause management\nto hesitate.\n\nFor management to deal effectively with Bob, they must themselves be convinced\nthat his behavior should not be tolerated, regardless of his brilliance. For\nsome companies, that will require truly understanding the damage that Bob\ncauses (listed above), to justify taking action. For companies like Netflix\nwith an explicit \"no brilliant jerks\" policy, it's much easier for management\nto take action, as they don't need to convince anyone that jerks are a\nproblem: that's already covered in company policy.\n\nRegular one-on-one meetings with staff, and scheduled skip-level meetings,\nshould also help inform management about the damage jerks are causing. Netflix\ndoes this well: I have scheduled one-on-one meetings with my manager once\nevery two weeks, their manager once a month, and their manager at least once a\nyear. That's three levels of management I talk directly and in private with,\nwithout even having to ask for a meeting. We're also encouraged to give other\nemployees direct and honest feedback, intervene if we see harassment, and\nescalate up to and including the CEO.\n\nAs for public speaking: Bob draws power from being a public face of the\ncompany. Speaking events should be shared among staff who want to speak, and\ntraining can be made available to improve their skills (various companies\noffer this), so that Bob isn't the only good speaker. Conference organizers\ncan also adopt a \"no brilliant jerks\" policy (some already do), and attendees\ncan avoid conferences that host known jerks. If Alice needs to learn empathy,\nBob needs to learn both empathy and to stop being selfish, and sharing public\nspeaking or other rewarding projects is an example of the latter.\n\n## When I acted like a jerk\n\nMany people sometimes act like Alice, and it can be easy to talk them out of\nit (Alice herself is harder, since it's her by-default behavior). I'll explain\nthis with a story, this time of a moment when I acted like a jerk.\n\nEarly in my career, an engineer at my company made a big mistake in my area of\nexpertise, and sent an email that dodged responsibility and showed no path to\nfix it. I was furious and phoned the engineer: my intent was to make him\nrealize that he'd made a big mistake, and put him on the right path. I was\nblunt, and told him off. I didn't enjoying doing so, but I felt I was doing a\nGood Thing for the company, and fixing a problem.\n\nA week later, his manager phoned me unexpectedly. He told me that he was aware\nof my phone call, and didn't think I was technically wrong, but did I know\nthat the engineer has been demotivated and unproductive since I talked to him,\nand was it my intent to make his staff unproductive? No, of course not. The\nmanager continued: do you think you could have told my engineer what you\nneeded to, in a way that left them feeling positive and motivated to fix it?\nSure, I probably can. Good. Always do that in the future, please. I did.\n\nThe phone call lasted less than two minutes, and was immediately effective. I\nsuspect the manager had done this before. Notice that he did not accuse me of\nbeing a jerk, rather, he posed two questions, which were basically: 1) are you\nintending to hurt the company?, and 2) are you able to act decently? There's\nonly really one right answer to those questions. If he had just said \"you are\na jerk\" I may have just replied \"no, I'm not\", but by asking questions\ninstead, it put the onus on me to think about the answer, and triggered a\nmoment of self reflection.\n\n## Additional topics\n\nThere are some additional topics I have not covered in detail here, but should\nmention:\n\n  * What about jerks in open source communities? A good reference for this is the no more rock stars post, where the rock star described is pretty much Bob. See that post for the section: How do we as a community prevent rock stars?. Also see the talk Mamas Don't Let Your Babies Grow Up to Be Rock Star Developers.\n  * What about Bob as a manager? Bob may seek and be offered promotions into management, and become even more damaging to the company. Bob the manager exploits and threatens his subordinates. That's a topic for another post.\n  * Does Bob sexually assault others? Is Bob more likely to be a harasser due to delusions of grandeur and a sense of entitlement (Al Capone theory), or is he smart enough not to go that far, or, is he simply not that kind of jerk? I don't know. That's outside of my firsthand experience, so I didn't include it.\n  * What about those junior engineers? The ones Bob exploits for his own gain. That's another big topic. Some related reading here, here, and here (from which I borrowed the words \"reflecting glory\").\n  * Is Bob actually brilliant? It's a little hard to tell, since Bob takes credit for the work of others. Bob also creates enemies in the industry, and some staff even sabotage Bob's work. In the long run, it hurts Bob's career. Not a brilliant result, really.\n  * What if Bob is pretending to be brilliant? (Updated) The consequences for the company can be worse. I didn't explore this topic here, but it would be a character similar to Bob who isn't actually brilliant, but pretends to be, and has most people believing him. To quote from a HN comment: \"The myth of \"brilliant jerks\" is harmful because it lets any jerk pretend he's doing it because he's brilliant, when chances are he's just afraid of being unmasked as mediocre.\".\n  * Does anyone exist who is really as bad as fictional Bob? Yes. Fortunately they are rare. One reviewer thinks that my post will not be effective unless I name such a real-life Bob as a concrete example. Maybe they are right, but I've avoided that here. This isn't about one Bob, it's about all selfish brilliant jerks.\n  * Should we publicly call out brilliant jerks in tech? It's a complex topic. The book Is Shame Necessary does make the point that shame and humiliation have a legitimate place in society when they are natural consequences to abusive behavior, which is also discussed in this post. Calling out abusers may save future victims of abuse, so long as the calling out is proportional and not abusive itself. For victims of abuse, I could not make a blanket recommendation: I don't know your specific situation and how safe it is for you to speak up. I've been in this situation myself, and was facing an extreme threat to myself and my family, and I understand how risky it can be.\n  * How do I know if I'm the jerk? If you always think that being right is all that matters, and don't consider your impact on teamwork or relationships, you might be an Alice or a Bob. If you think that hurting other people is simply doing what it takes to get ahead, then you might be a Bob. See the earlier sections for more characteristics, and my colleague's QCon presentation: Am I a Brilliant Jerk?\n\n## Conclusion\n\nShould brilliant jerks be tolerated? To explore this, I described two\nfictional brilliant jerks: Alice, who is selfless, and Bob, who is selfish.\nThis makes it clear that the behavior of selfish jerks, like Bob, should\ndefinitely not be tolerated. Bob can kill companies. When CEOs and VCs\nsometimes say that brilliant jerks may be worth it, I imagine they are\nthinking of Alice, a selfless jerk, and not Bob. (Alice is debatable.)\n\nEarly on in my career, I supported brilliant jerks of any type and thought\nthey were worth it. I was wrong. People had warned me about them, that their\nbehavior was \"not ok,\" but they never went into much detail as to why. I've\nshared many details here. I didn't figure this all out until seeing the\nbehavior and damage firsthand. (I've not only experienced it, but I may have\nreached my lifetime dosage of asshole-rads.)\n\nCompanies can adopt a \"no asshole rule,\" or more politely, a \"no brilliant\njerks\" policy. Colleagues may be genuinely conflicted about how to deal with\nBob. On the one hand, he is a real jerk, but on the other he is a \"high\nperformer,\" so isn't it in the company's best interest to tolerate his\nbehavior? A policy helps you decide, and it can be as simple as three words:\nno brilliant jerks.\n\n## Acknowledgements\n\nPicture and editing by Deirdr\u00e9 Straughan. Thanks to review feedback and\nsuggestions from Alice Goldfuss, Baron Schwartz, Ed Hunter, Justin Becker,\nDavid Blank-Edelman, Valerie Aurora, and others. References and related\nreading:\n\n  * Sutton, R. The No Asshole Rule. Grand Central Publishing, 2010.\n  * Babiak, P., Hare, R. D. Snakes in Suits. Harper Business, 2007.\n  * Jacquet, J. Is Shame Necessary. Random House, 2015.\n  * Sutton, R. The Asshole Survival Guide. Houghton Mifflin Harcourt, 2017.\n  * https://hbr.org/2015/12/its-better-to-avoid-a-toxic-employee-than-hire-a-superstar\n  * https://retrospective.co/brilliant-jerks-cost-more-than-they-are-worth/\n  * http://boz.com/articles/be-kind.html\n  * https://hypatia.ca/2016/06/21/no-more-rock-stars/\n  * https://www.youtube.com/watch?v=awdVoPAU0Ic\n  * https://www.youtube.com/watch?v=fJOSX-W0yHA&feature=youtu.be&t=10m53s\n  * https://www.slideshare.net/reed2001/culture-1798664/36-Brilliant_Jerks_Some_companies_tolerate\n  * https://jobs.netflix.com/culture\n  * https://qconsf.com/sf2017/presentation/am-i-brilliant-jerk\n  * https://hypatia.ca/2017/07/18/the-al-capone-theory-of-sexual-harassment/\n  * The blood bag series: part 1, part 2, part 3\n  * (Updated) discussion on hackernews\n\nClick here for Disqus comments (ad supported).\n\nYou are welcome to comment here, but I've been meaning to switch comment\nsystems one day and I don't know yet if I can preserve existing comments (I'll\ntry to find a way).\n\ncomments powered by Disqus\n\nSite Navigation\n\nSystems Performance 2nd Ed.\n\nBPF Performance Tools book Recent posts:\n\n  * 24 Mar 2024 \u00bb Linux Crisis Tools\n  * 17 Mar 2024 \u00bb The Return of the Frame Pointers\n  * 10 Mar 2024 \u00bb eBPF Documentary\n  * 28 Apr 2023 \u00bb eBPF Observability Tools Are Not Security Tools\n  * 01 Mar 2023 \u00bb USENIX SREcon APAC 2022: Computing Performance: What's on the Horizon\n  * 17 Feb 2023 \u00bb USENIX SREcon APAC 2023: CFP\n  * 02 May 2022 \u00bb Brendan@Intel.com\n  * 15 Apr 2022 \u00bb Netflix End of Series 1\n  * 09 Apr 2022 \u00bb TensorFlow Library Performance\n  * 19 Mar 2022 \u00bb Why Don't You Use ...\n  * 26 Sep 2021 \u00bb The Speed of Time\n  * 06 Sep 2021 \u00bb ZFS Is Mysteriously Eating My CPU\n  * 30 Aug 2021 \u00bb Analyzing a High Rate of Paging\n  * 27 Aug 2021 \u00bb Slack's Secret STDERR Messages\n  * 05 Jul 2021 \u00bb USENIX LISA2021 Computing Performance: On the Horizon\n  * 03 Jul 2021 \u00bb How To Add eBPF Observability To Your Product\n  * 15 Jun 2021 \u00bb USENIX LISA2021 BPF Internals (eBPF)\n  * 04 Jun 2021 \u00bb An Unbelievable Demo\n  * 29 May 2021 \u00bb Moving my US tech job to Australia\n  * 23 May 2021 \u00bb What is Observability\n\nBlog index About RSS\n\nBrendan's site:\n\nStart Here Homepage Blog Sys Perf book BPF Perf book Linux Perf eBPF Tools\nperf Examples Perf Methods USE Method TSA Method Off-CPU Analysis Active\nBench. WSS Estimation Flame Graphs Heat Maps Frequency Trails Colony Graphs\nDTrace Tools DTraceToolkit DtkshDemos Guessing Game Specials Books Other Sites\n\nCopyright 2024 Brendan Gregg. About this blog\n\n", "frontpage": false}
