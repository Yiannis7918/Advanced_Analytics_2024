{"aid": "40015246", "title": "Show HN: Dpq \u2013 a small Python library to process data using LLMs", "url": "https://github.com/data-prompt-query/dpq", "domain": "github.com/data-prompt-query", "votes": 1, "user": "Naa4", "posted_at": "2024-04-12 17:13:22", "comments": 0, "source_title": "GitHub - data-prompt-query/dpq: dpq is an open-source python library that makes prompt-based data processing and feature engineering easy", "source_text": "GitHub - data-prompt-query/dpq: dpq is an open-source python library that\nmakes prompt-based data processing and feature engineering easy\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ndata-prompt-query / dpq Public\n\n  * Notifications\n  * Fork 0\n  * Star 1\n\ndpq is an open-source python library that makes prompt-based data processing\nand feature engineering easy\n\n### License\n\nApache-2.0 license\n\n1 star 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# data-prompt-query/dpq\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nnkuhlenUpdate README.md6c50fd4 \u00b7\n\n## History\n\n4 Commits  \n  \n### dpq\n\n|\n\n### dpq\n\n| Initial commit  \n  \n### examples\n\n|\n\n### examples\n\n| Initial commit  \n  \n### tests\n\n|\n\n### tests\n\n| Initial commit  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md  \n  \n### pyproject.toml\n\n|\n\n### pyproject.toml\n\n| Initial commit  \n  \n## Repository files navigation\n\n# dpq: data. prompt. query.\n\ndpq is a Python library that makes it easy to process data and engineer\nfeatures using generative AI.\n\n## installation\n\n    \n    \n    pip install dpq\n\n## quick start\n\n    \n    \n    import dpq # Initialize dpq agent with API configuration dpq_agent = dpq.Agent( url=\"ENDPOINT_URL\", api_key=\"YOUR_API_KEY\", model=\"MODEL_ID\", custom_messages_path=\"OPTIONAL_PATH_TO_CUSTOM_PROMPTS\" ) # Apply prompt to each item in list-like iterable such as pandas series dpq_agent.classify_sentiment(df['some_column'])\n\n## adding functionalities\n\nA function is defined by a JSON holding messages.\n\n    \n    \n    [ { \"role\": \"system\", \"content\": \"You are a sentiment classifier. You classify statements as having either a positive or negative sentiment. You return only one of two words: positive, negative.\" }, { \"role\": \"user\", \"content\": \"I like dpq. It makes prompt-based feature engineering a breeze.\" }, { \"role\": \"assistant\", \"content\": \"positive\" } ]\n\nTo add a new function, simply add the JSON file to a prompts folder on your\nsystem and initialize the dpq agent with the respective custom_messages_path\npointing to the folder. The function name is automatically set to the name of\nthe JSON file.\n\nAlternatively, you can pass the messages to generate a new function directly\nin your code.\n\n    \n    \n    # Define messages messages = [ { \"role\": \"system\", \"content\": \"You return the country of a city.\" }, { \"role\": \"user\", \"content\": \"Berlin\" }, { \"role\": \"assistant\", \"content\": \"Germany\" }, ] # Add new function dpq_agent.return_country = dpq_agent.generate_function(messages) # Apply to a list dpq_agent.return_country([\"Berlin\", \"London\", \"Paris\"])\n\n## examples\n\nIn addition to the prompts in the prompts directory, which are loaded by\ndefault when initializing the dpq.Agent(), we maintain a library of additional\nexamples in the examples directory. These are typically slightly less general-\npurpose. Feel free to open a pull request and share prompts you have found\nuseful with everyone!\n\n## features\n\n  * feature engineering using prompts\n  * library of standard functions\n  * parallelized by default\n\n## compatibility\n\ndpq uses the requests library to send OpenAI-style Chat Completions API\nrequests. For GPT-3.5 Turbo, the configuration is as follows.\n\n    \n    \n    dpq_agent = dpq.Agent( url=\"https://api.openai.com/v1/chat/completions\", api_key=\"YOUR_API_KEY\", model=\"gpt-3.5-turbo\", )\n\n## costs and speed\n\ndpq currently comes as is without cost or speed guarantees. To still give a\nvery rough estimate: on a test data set of 1000 product reviews, the\nclassify_sentiment.json finishes in approx. 30 seconds (parallelized) on a\nstandard Macbook and costs $0.05 using gpt-3.5-turbo.\n\n## is using LLMs a good idea?\n\nRecent studies have shown promising results using general-purpose LLMs for\ntext annotation and classification. For example, Gilardi, Alizadeh, and Kubli\n(2023) and T\u00f6rnberg (2023) report better-than-human performance. This is an\nactive research area and we are looking forward to seeing more results in this\nfield. In general, we believe that LLMs can deliver consistent, high-quality\noutput resulting in scalability, reduced time and costs (see also Aguda\n(2024)).\n\n## About\n\ndpq is an open-source python library that makes prompt-based data processing\nand feature engineering easy\n\n### Topics\n\npython data-science data machine-learning prompt data-engineering data-\nanalytics feature-engineering llm\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n1 star\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Python 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
