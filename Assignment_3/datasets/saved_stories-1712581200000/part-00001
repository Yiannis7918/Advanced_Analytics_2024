{"aid": "39966960", "title": "MQL \u2013 Client and Server to query your DB in natural language", "url": "https://github.com/shurutech/mql", "domain": "github.com/shurutech", "votes": 1, "user": "akashkahlon", "posted_at": "2024-04-08 06:58:13", "comments": 0, "source_title": "GitHub - shurutech/mql: MQL tool is designed to generate SQL queries directly from natural language inputs.", "source_text": "GitHub - shurutech/mql: MQL tool is designed to generate SQL queries directly\nfrom natural language inputs.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nshurutech / mql Public\n\n  * Notifications\n  * Fork 1\n  * Star 8\n\nMQL tool is designed to generate SQL queries directly from natural language\ninputs.\n\nshurutech.com/mql-sql-from-natural-language-with-85-accuracy/\n\n### License\n\nMIT license\n\n8 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# shurutech/mql\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nkshitijbandvijay-shuruRemove .DS_Store files from being trackedd64d017 \u00b7\n\n## History\n\n70 Commits  \n  \n### client\n\n|\n\n### client\n\n| remove unused files  \n  \n### server\n\n|\n\n### server\n\n| remove unused files  \n  \n### storage\n\n|\n\n### storage\n\n| [Vijay][Ashok] fix- open ai new version contract issues and update st...  \n  \n### test_data\n\n|\n\n### test_data\n\n| rename folder to test_data  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Remove .DS_Store files from being tracked  \n  \n### CODE_OF_CONDUCT.md\n\n|\n\n### CODE_OF_CONDUCT.md\n\n| [Harshit|Mayank] setup installation using docker  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| [Harshit|Mayank] setup installation using docker  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| create default user while make install  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md  \n  \n### docker-compose.yml\n\n|\n\n### docker-compose.yml\n\n| update networks name in docker-compose file  \n  \n### setup.sh\n\n|\n\n### setup.sh\n\n| [Harshit|Mayank] setup installation using docker  \n  \n## Repository files navigation\n\n# MQL\n\nMQL (My Query Language) is a powerful tool to transform natural language\nqueries into executable SQL queries. What's cool is that anyone can use it,\neven without knowing how to code. Just add your database by connecting or\nuploading schema to MQL, ask a query in your language and get the SQL.\n\n## \ud83d\ude80 Getting Started\n\n### Run the tool locally using Docker.\n\n  * Make sure you have docker installed.\n\n  * To begin, clone this Git repository:\n    \n        git clone https://github.com/shurutech/mql\n\n  * Update server/Dockerfile with your OPENAI_API_KEY key:\n    \n        ENV OPENAI_API_KEY YOUR_TOKEN_HERE\n\n  * Navigate to the repository folder and run the following command:\n    \n        make install\n\nOnce the installation is complete, you can access the MQL dashboard at:\nhttp://localhost:3000\n\nIf needed, you can also restart the local setup using:\n\n    \n    \n    make restart\n\nAlso, you can terminate the local setup using:\n\n    \n    \n    make down\n\n## Use Default Email/Password for Login to Test MQL\n\nA default user is created for login purpose while running the tool using\ndocker.\n\n  * Email - admin@example.com\n  * Password - admin\n\n## Want to Productionize MQL?\n\nTake care of below steps if you are looking to make it Live\n\n  * Delete default user: To delete default user(admin@example.com), you need to connect with mql database(mql-postgres) and then remove it from users table.\n  * Create a new user:\n\n    * go to project's root directory\n    * exec in backend docker container: docker-compose exec backend /bin/bash\n    * run create_user script: python3 scripts/create_user.py\n    * enter email, password and name to create your own user\n\n## Supported Databases\n\nAs of the current version, MQL is designed to work exclusively with\nPostgreSQL.\n\n## You can also run the tool locally without Docker.\n\n  * ## Prerequisites\n\nThese are the required packages which needs to be installed to run the project\nlocally.\n\n  1. Python\n\n  2. psycopg2\n\n  3. Node\n\n  4. PostgreSQL 15\n\n  5. pgvector extension for PostgreSQL - pgvector\n\n  * ## Database Setup\n\nRun these commands in your PostgreSQL command line client\n\n  1. Creating the PostgreSQL Role\n\nCreate a PostgreSQL role with superuser permissions and login capability:\n\n    \n        CREATE ROLE <role_name> WITH superuser; ALTER ROLE <role_name> WITH LOGIN PASSWORD 'password';\n\n  2. Creating the Databases\n\nCreate two databases, analytics and analytics_test, with the shuru role:\n\n    \n        CREATE DATABASE analytics WITH OWNER <role_name>; CREATE DATABASE analytics_test WITH OWNER <role_name>;\n\n  3. Creating the Extension\n\nTo create the vector extension:\n\n  * Connect with the database using:\n    \n        \\c <databse_name>\n\n  * Create the vector extension:\n    \n        CREATE EXTENSION vector;\n\n  * ## Update your env\n\nUpdate these values at server/.env\n\n    \n        DATABASE_URL=\"postgresql://<role_name>:<password>@<host>:5432/analytics\" TEST_DATABASE_URL=\"postgresql://<role_name>:<password>@<host>:5432/analytics_test\" OPENAI_API_KEY=\"<key>\"\n\nIf database is locally hosted then host will be localhost\n\n  * ## Run the Script\n\nNavigate to the repository folder and run the command in terminal\n\n    \n        chmod +x ./setup.sh && ./setup.sh\n\nOnce the installation is complete, you can access the MQL dashboard at:\nhttp://localhost:3000\n\n## Accuracy Test Score\n\nOur testing process involved running 50 natural language queries through the\nMQL platform, with resources like a elearning_schema file, and a CSV of query\nmappings located in our test_data folder. The MQL achieved around 85% success\nrate, accurately translating 43 out of 50 queries. However, when considering\nthe precision of the translations, about 74% (37 out of 50) of the queries\nwere executed perfectly, with 6 queries correctly interpreted but missing a\nsemi-colon at the end. This left us with 7 queries that resulted in errors.\nWe're actively working on enhancements to improve both the accuracy and the\ncompleteness of the SQL syntax generation, and we welcome contributions to\nhelp refine our platform.\n\n  * We have taken database set from here for testing purpose.\n  * You can remove test_data folder after checking it.\n\n## Next Steps/Features\n\nWe plan to continue building after the initial release and look forward to the\nfeedback from the community. As of now we have following features planned out\nfor next releases.\n\n  * Implementation of query execution\n  * Improve directly connected dbs and SQL query results\n  * Support for MySQL database\n  * Improvements in Query Accuracy\n  * Show natural language response and data visualisation.\n  * User can integrate slack or similar apps to get NL query result there.\n  * Test retool to generate the queries.\n\n## Contribution Guidelines\n\nWe value the contributions of each developer and encourage you to share your\nideas, improvements, and fixes with us. To ensure a smooth collaboration\nprocess, please follow these guidelines.\n\nBefore you begin:\n\n  * Make sure you have a GitHub account.\n  * Familiarize yourself with the project by reading the README, exploring the issues, and understanding the tool's architecture and coding standards.\n\n## How to Contribute\n\nReporting Bugs\n\nBefore reporting a bug, please:\n\n  * Check the issue tracker to ensure the bug hasn't already been reported.\n  * If the issue is unreported, create a new issue, providing:\n\n    * A clear title and description.\n    * Steps to reproduce the bug.\n    * Expected behavior and what actually happened.\n    * Any relevant error messages or screenshots.\n\nSuggesting Enhancements We love to receive suggestions for enhancements!\nPlease:\n\n  * First, check if the enhancement has already been suggested.\n  * If not, open a new issue, describing the enhancement and why it would be beneficial.\n\nPull Requests Ready to contribute code? Follow these steps:\n\n  1. Fork the repository - Create your own fork of the project.\n  2. Create a new branch for your changes - Keep your branch focused on a single feature or bug fix.\n  3. Commit your changes - Write clear, concise commit messages that explain your changes.\n  4. Follow the coding standards - Ensure your code adheres to the coding standards used throughout the project.\n  5. Write tests - If possible, write tests to cover the new functionality or bug fix.\n  6. Submit a pull request - Provide a clear description of the problem and solution. Include the relevant issue number if applicable.\n\nConduct We are committed to providing a welcoming and inspiring community for\nall. By participating in this project, you are expected to uphold our Code of\nConduct, which promotes respect and collaboration.\n\n## About\n\nMQL tool is designed to generate SQL queries directly from natural language\ninputs.\n\nshurutech.com/mql-sql-from-natural-language-with-85-accuracy/\n\n### Topics\n\ndatabase sql-query analytics-tool generative-ai\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\n### Code of conduct\n\nCode of conduct\n\nActivity\n\nCustom properties\n\n### Stars\n\n8 stars\n\n### Watchers\n\n0 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Releases 1\n\nFirst release Latest\n\nApr 2, 2024\n\n## Packages 0\n\nNo packages published\n\n## Contributors 4\n\n  * ashok-shuru\n  * vijay-shuru\n  * mayank-shuru Mayank Shakya\n  * kshitijb Kshitij Bhardwaj\n\n## Languages\n\n  * Python 63.2%\n  * TypeScript 31.8%\n  * JavaScript 1.8%\n  * Shell 1.0%\n  * Makefile 0.8%\n  * Dockerfile 0.7%\n  * Other 0.7%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
