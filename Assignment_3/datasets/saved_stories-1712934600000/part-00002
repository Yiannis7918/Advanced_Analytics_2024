{"aid": "40010702", "title": "MXE (M Cross Environment)", "url": "https://mxe.cc/", "domain": "mxe.cc", "votes": 1, "user": "Tomte", "posted_at": "2024-04-12 09:08:25", "comments": 0, "source_title": "MXE (M cross environment)", "source_text": "MXE (M cross environment)\n\n# MXE (M cross environment)\n\n  * Introduction\n  * Screenshots\n  * Tutorial\n  * Download\n  * Mailing List\n  * Issue Tracker\n  * Async Chat (Trial)\n\n  * Requirements\n  * Usage\n  * List of Packages\n  * Creating Packages\n  * Copyright\n  * Legal\n  * History\n\n  * See also\n  * Used by\n\n## Introduction\n\nMXE (M cross environment) is a GNU Makefile that compiles a cross compiler and\ncross compiles many free libraries such as SDL and Qt. Thus, it provides a\nnice cross compiling environment for various target platforms, which\n\n  * is designed to run on any Unix system\n  * is easy to adapt and to extend\n  * builds many free libraries in addition to the cross compiler\n  * can also build just a subset of the packages, and automatically builds their dependencies\n  * downloads all needed packages and verifies them by their checksums\n  * is able to update the version numbers of all packages automatically\n  * directly uses source packages, thus ensuring the whole build mechanism is transparent\n  * allows inter-package and intra-package parallel builds whenever possible\n  * bundles ccache to speed up repeated builds\n  * integrates well with autotools, cmake, qmake, and hand-written makefiles\n  * has been in continuous development since 2007 and is used by several projects\n  * has pre-compiled binaries that can be used in Continuous Integration systems\n\n### Supported Toolchains\n\nCompiler and runtime: MinGW-w64.\n\nTarget OS| Packages  \n---|---  \nStatic| Shared  \n32 bit Windows| 99% (379/381)| 72% (273/381)  \n64 bit Windows| 94% (360/381)| 71% (271/381)  \n  \nThese numbers were last updated on December 16, 2015. See the current status\nfor individual packages.\n\nExecutables built for 32 bit Windows can be executed on 64 bit Windows as\nwell.\n\nHow to choose MXE target:\n\n  1. If you want a 64 bit Windows executable, statically linked into one big executable: use MXE_TARGETS x86_64-w64-mingw32.static;\n  2. If you want a 64 bit Windows executable, split into an executable and dependant dlls use MXE_TARGETS x86_64-w64-mingw32.shared;\n  3. If you want a 32 bit Windows executable, statically linked into one big executable: use MXE_TARGETS i686-w64-mingw32.static;\n  4. If you want a 32 bit Windows executable, split into an executable and dependant dlls use MXE_TARGETS i686-w64-mingw32.shared.\n\nRemark: The 'w64-mingw32' in those names are left-overs from historical\nevolutions in the open source cross-compilation world and refer in no way to\nthe result being 64 or 32 bit Windows.\n\nOpenMP (libgomp) and pthreads (winpthreads) are always available.\n\nWhen building shared libraries, there are several approaches to recursively\nfinding DLL dependencies (alphabetical list):\n\n  * go script\n  * pe-util packaged with mxe\n  * python script\n  * shell script\n\nExperimental support for GCC with posix threads was added in November 2015.\nSince January 2019 it is used by default.\n\nExperimental support for alternate GCC Exception Handling was added in\nFebruary 2017.\n\n## Screenshots\n\nCross compiling 4tH:\n\nand running it:\n\n## Tutorial\n\n### Step 1: Requirements and Download\n\nFirst, you should ensure that your system meets MXE's requirements. You will\nalmost certainly have to install some stuff.\n\nWhen everything is fine, download the current version:\n\n    \n    \n    git clone https://github.com/mxe/mxe.git\n\nIf you don't mind installing it in your home directory, just skip the\nfollowing step and go straight to step 3.\n\nMXE builds and installs everything under the same top-level directory and is\nnot relocatable after the first packages are built.\n\nDue to limitations of GNU Make, the path of MXE is not allowed to contain any\nwhitespace characters.\n\n### Step 2: System-wide Installation (optional)\n\nNow you should save any previous installation of the MXE. Assuming you've\ninstalled it under /opt/mxe (any other directory will do as well), you should\nexecute the following commands:\n\n    \n    \n    su mv /opt/mxe /opt/mxe.old exit\n\nThen you need to transfer the entire directory to its definitive location. We\nwill assume again you use /opt/mxe, but feel free to use any other directory\nif you like.\n\n    \n    \n    su mv mxe /opt/mxe exit\n\nWe're almost done. Just change to your newly created directory and get going:\n\n    \n    \n    cd /opt/mxe\n\n### Step 3a: Build MXE\n\nEnter the directory where you've downloaded MXE. Now it depends on what you\nactually want \u2013 or need.\n\nIf you choose to enter:\n\n    \n    \n    make\n\nyou're in for a long wait, because it compiles a lot of packages. On the other\nhand it doesn't require any intervention, so you're free to do whatever you\nlike \u2013 like watch a movie or go for a night on the town. When it's done you'll\nfind that you've installed a very capable Win32 cross compiler onto your\nsystem.\n\nIf you only need the most basic tools you can also use:\n\n    \n    \n    make cc\n\nand add any additional packages you need later on. You can also supply a host\nof packages on the command line, e.g.:\n\n    \n    \n    make gtk lua libidn\n\nTargets can also be specified on the command line. By default, only\ni686-w64-mingw32.static is built, but you can build your toolchain(s) of\nchoice with:\n\n    \n    \n    make MXE_TARGETS='x86_64-w64-mingw32.static i686-w64-mingw32.static'\n\nor by adjusting the MXE_TARGETS variable in settings.mk.\n\nYou'll always end up with a consistent cross compiling environment.\n\nIf you have trouble here, please feel free to contact the mxe team through the\nissue tracker or mailing list.\n\nAfter you're done it just needs a little post-installation.\n\n### Step 3b: Install MXE from the binary distribution\n\nInstead of building MXE packages from source, you can install packages from\nour APT repository for the following distros:\n\n  * Debian (stable and old stable)\n  * Ubuntu LTS (at least two releases supported)\n\nSee the distro list for current codenames and last build dates.\n\nEnsure required tools are available (usually installed by default):\n\n    \n    \n    sudo apt-get install \\ software-properties-common \\ lsb-release\n\nAdd and refresh MXE repository:\n\n    \n    \n    sudo apt-key adv \\ --keyserver keyserver.ubuntu.com \\ --recv-keys 86B72ED9 && \\ sudo add-apt-repository \\ \"deb [arch=amd64] https://pkg.mxe.cc/repos/apt `lsb_release -sc` main\" && \\ sudo apt-get update\n\nNote that all package and target names have underscores replaced with dashes.\nFor example:\n\n    \n    \n    apt-cache search 'mxe.*sdl_net'\n\noutputs:\n\n    \n    \n    mxe-i686-w64-mingw32.shared-sdl-net - MXE package sdl_net for i686-w64-mingw32.shared mxe-i686-w64-mingw32.static-sdl-net - MXE package sdl_net for i686-w64-mingw32.static mxe-x86-64-w64-mingw32.shared-sdl-net - MXE package sdl_net for x86_64-w64-mingw32.shared mxe-x86-64-w64-mingw32.static-sdl-net - MXE package sdl_net for x86_64-w64-mingw32.static\n\nInstall the basic cross-compiler:\n\n    \n    \n    sudo apt-get install \\ mxe-{i686,x86-64}-w64-mingw32.{static,shared}-cc\n\nConfirm installation (note standard MXE target naming for tools):\n\n    \n    \n    PATH=/usr/lib/mxe/usr/bin:$PATH \\ x86_64-w64-mingw32.static-gcc --version\n\noutputs:\n\n    \n    \n    x86_64-w64-mingw32.static-gcc (GCC) 5.5.0 Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nSee the Lightspark project for examples of:\n\n  * integration with CI system\n  * adding modified source build to pre-built installation\n\n### Step 4: Environment Variables\n\nEdit the appropriate config script (.bashrc, .cshrc, .profile, .zshrc, etc.)\nfor your shell in order to change $PATH:\n\n    \n    \n    export PATH=/where MXE is installed/usr/bin:$PATH\n\nYou may be tempted to also add $(TARGET)/bin to your path. You never want to\ndo this, the executables and scripts in there will cause conflicts with your\nnative toolchain.\n\nIn case you are using custom $PKG_CONFIG_PATH entries, you can add separate\nentries for cross builds:\n\n    \n    \n    export PKG_CONFIG_PATH=\"entries for native builds\"\n    \n    \n    export PKG_CONFIG_PATH_i686_w64_mingw32_static=\"entries for MXE builds\"\n\nRemember to use i686-w64-mingw32.static-pkg-config instead of pkg-config for\ncross builds. The Autotools do that automatically for you.\n\nNote that any other compiler related environment variables (like $CC,\n$LDFLAGS, etc.) may spoil your compiling pleasure, so be sure to delete or\ndisable those.\n\nFor the most isolated and repeatable environment, use a white-list approach:\n\n    \n    \n    unset `env | \\ grep -vi '^EDITOR=\\|^HOME=\\|^LANG=\\|MXE\\|^PATH=' | \\ grep -vi 'PKG_CONFIG\\|PROXY\\|^PS1=\\|^TERM=' | \\ cut -d '=' -f1 | tr '\\n' ' '`\n\nCongratulations! You're ready to cross compile anything you like.\n\n### Step 5a: Cross compile your Project (Autotools)\n\nIf you use the Autotools, all you have to do is:\n\n    \n    \n    ./configure --host=i686-w64-mingw32.static make\n\nIf you build a library, you might also want to enforce a static build:\n\n    \n    \n    ./configure --host=i686-w64-mingw32.static --enable-static --disable-shared make\n\nDon't worry about a warning like this:\n\n    \n    \n    configure: WARNING: If you wanted to set the --build type, don't use --host. If a cross compiler is detected then cross compile mode will be used.\n\nEverything will be just fine.\n\n### Step 5b: Cross compile your Project (CMake)\n\nIf you have a CMake project, you can use the provided cmake wrapper:\n\n    \n    \n    i686-w64-mingw32.static-cmake ...\n\nThis will automatically use the MXE version of cmake and locate the toolchain\nfile.\n\n### Step 5c: Cross compile your Project (Qt)\n\nIf you have a Qt application, all you have to do is:\n\n    \n    \n    /<where-MXE-is-installed>/usr/i686-w64-mingw32.static/qt5/bin/qmake make\n\nNote that Qt 5 is in the \"qt5\" subdirectory. Qt 4 is in the \"qt\" subdirectory\nand its qmake can be invoked similarly.\n\nIf you are using Qt plugins such as the svg or ico image handlers, you should\nalso have a look at the Qt documentation about static plugins.\n\nQt 4 only: Sql drivers (-qt-sql-*) and image handlers for jpeg, tiff, gif and\nmng are built-in, not plugins.\n\n### Step 5d: Cross compile your Project (Makefile)\n\nIf you have a handwritten Makefile, you probably will have to make a few\nadjustments to it:\n\n    \n    \n    CC=$(CROSS)gcc LD=$(CROSS)ld AR=$(CROSS)ar PKG_CONFIG=$(CROSS)pkg-config\n\nYou may have to add a few others, depending on your project.\n\nThen, all you have to do is:\n\n    \n    \n    make CROSS=i686-w64-mingw32.static-\n\nThat's it!\n\n### Step 5e: Cross compile your Project (OSG)\n\nUsing static OpenSceneGraph libraries requires a few changes to your source.\nThe graphics subsystem and all plugins required by your application must be\nreferenced explicitly. Use a code block like the following:\n\n    \n    \n    #ifdef OSG_LIBRARY_STATIC USE_GRAPHICSWINDOW() USE_OSGPLUGIN(<plugin1>) USE_OSGPLUGIN(<plugin2>) ... #endif\n\nLook at examples/osgstaticviewer/osgstaticviewer.cpp in the OpenSceneGraph\nsource distribution for an example. This example can be compiled with the\nfollowing command:\n\n    \n    \n    i686-w64-mingw32.static-g++ \\ -o osgstaticviewer.exe examples/osgstaticviewer/osgstaticviewer.cpp \\ `i686-w64-mingw32.static-pkg-config --cflags openscenegraph-osgViewer openscenegraph-osgPlugins` \\ `i686-w64-mingw32.static-pkg-config --libs openscenegraph-osgViewer openscenegraph-osgPlugins`\n\nThe i686-w64-mingw32.static-pkg-config command from MXE will automatically add\n-DOSG_LIBRARY_STATIC to your compiler flags.\n\n### Further Steps\n\nIf you need further assistance, feel free to join the mailing list where\nyou'll get in touch with the MXE developers and other users.\n\n## Download\n\nTo obtain the current version, run:\n\n    \n    \n    git clone https://github.com/mxe/mxe.git\n\nTo retrieve updates, run:\n\n    \n    \n    git pull\n\nYou can also browse the web repository.\n\nIn addition, feel free to join the mailing list and to propose new packages.\n\n## Requirements\n\nMXE requires a recent Unix system where all components as stated in the table\nbelow are installed. It also needs roughly 2 GiB of RAM to link gcc and at\nleast 700 MB of disk space per target (counted with only gcc built).\n\nDetailed instructions are available for:\n\n  * Alpine\n  * Debian/Ubuntu\n  * Fedora/Red Hat/CentOS\n  * FreeBSD\n  * Frugalware\n  * Gentoo\n  * Mac OS X\n  * openSUSE\n  * Void\n  * Windows Subsystem for Linux\n\nAutoconf| \u2265 2.68  \n---|---  \nAutomake| \u2265 1.11.3  \nBash  \nBison  \nBzip2  \nFlex| \u2265 2.5.31  \nGCC (gcc, g++)  \ngdk-pixbuf  \nGit| \u2265 1.7  \nGNU Coreutils  \nGNU Gettext  \nGNU gperf  \nGNU Make| \u2265 3.81  \nGNU Sed  \nGNU Tar  \nIntltool| \u2265 0.40  \nLibC for 32-bit  \nLibtool| \u2265 2.2  \nLzip  \nMako Templates  \nOpenSSL-dev| \u2265 1.01  \np7zip (7-Zip)  \nPatch  \nPerl  \nPerl XML::Parser  \nPython3  \nRuby  \nUnZip  \nWget  \nXZ Utils  \nzlib| \u2265 1.20  \n  \n### Alpine\n\n    \n    \n    apk add \\ autoconf \\ automake \\ bash \\ binutils \\ bison \\ bzip2 \\ flex \\ g++ \\ gdk-pixbuf \\ gettext \\ git \\ gperf \\ intltool \\ libtool \\ linux-headers \\ lzip \\ make \\ openssl \\ openssl-dev \\ p7zip \\ patch \\ perl \\ python3 \\ py3-mako \\ ruby \\ unzip \\ wget \\ xz \\ zlib\n\n### Debian and derivatives\n\n    \n    \n    apt-get install \\ autoconf \\ automake \\ autopoint \\ bash \\ bison \\ bzip2 \\ flex \\ g++ \\ g++-multilib \\ gettext \\ git \\ gperf \\ intltool \\ libc6-dev-i386 \\ libgdk-pixbuf2.0-dev \\ libltdl-dev \\ libgl-dev \\ libpcre3-dev \\ libssl-dev \\ libtool-bin \\ libxml-parser-perl \\ lzip \\ make \\ openssl \\ p7zip-full \\ patch \\ perl \\ python3 \\ python3-distutils \\ python3-mako \\ python3-pkg-resources \\ python-is-python3 \\ ruby \\ sed \\ unzip \\ wget \\ xz-utils\n\nOn 32-bit installs,\n\n    \n    \n    g++-multilib libc6-dev-i386\n\nare not required, however there are potential issues with 32-bit systems.\n\nOnly the latest Debian stable series is supported.\n\nYou can install binary MXE packages from our APT repository.\n\n### Fedora/Red Hat/Centos\n\nEnsure Extra Packages for Enterprise Linux (EPEL) is installed/available. On\nsome systems, it may be as simple as:\n\n    \n    \n    yum install epel-release\n    \n    \n    yum install \\ autoconf \\ automake \\ bash \\ bison \\ bzip2 \\ flex \\ gcc-c++ \\ gdk-pixbuf2-devel \\ gettext \\ git \\ gperf \\ intltool \\ libtool \\ lzip \\ make \\ mesa-libGL-devel \\ openssl \\ openssl-devel \\ p7zip \\ patch \\ perl \\ python3 \\ python3-mako \\ ruby \\ sed \\ unzip \\ wget \\ which \\ xz\n\nOn 64-bit Fedora, there are issues without a 32-bit compiler.\n\n### FreeBSD\n\n    \n    \n    pkg install \\ autoconf \\ automake \\ bash \\ bison \\ coreutils \\ flex \\ gcc \\ gdk-pixbuf2 \\ gettext \\ git \\ glib \\ gmake \\ gperf \\ gsed \\ intltool \\ libtool \\ openssl \\ p5-XML-Parser \\ p7zip \\ patch \\ perl5 \\ python3 \\ textproc/py-mako \\ ruby \\ unzip \\ wget\n\nUse gmake instead of make.\n\nInstall file(1) from ports, because file(1) from base works very-very-very\nslow with long text files.\n\nDo not build as root. See #902.\n\nEnsure that /usr/local/bin precedes /usr/bin in your $PATH:\n\nFor C style shells, edit .cshrc\n\n    \n    \n    setenv PATH /usr/local/bin:$PATH\n\nFor Bourne shells, edit .profile\n\n    \n    \n    export PATH=/usr/local/bin:$PATH\n\nOn 64-bit FreeBSD, there are issues without a 32-bit compiler.\n\nN.B. FreeBSD is no longer fully supported\n\nto build the remainder of MXE, run:\n\n    \n    \n    gmake EXCLUDE_PKGS='gtksourceviewmm2 ocaml% openexr pcl qtbase'\n\nto see a list of all dependent downstream packages that will be excluded, run:\n\n    \n    \n    gmake show-downstream-deps-'gtksourceviewmm2 ocaml% openexr \\ pcl qtbase'\n\n### Frugalware\n\n    \n    \n    pacman-g2 -S \\ autoconf \\ automake \\ bash \\ bison \\ bzip2 \\ flex \\ gcc \\ gdk-pixbuf2\\ gettext \\ git \\ gperf \\ intltool \\ libtool \\ lzip \\ make \\ openssl \\ patch \\ perl \\ perl-xml-parser \\ python3 \\ python3-mako \\ ruby \\ sed \\ unzip \\ wget \\ xz \\ xz-lzma\n\nOn 64-bit Frugalware, there are issues without a 32-bit compiler.\n\n### Gentoo\n\n    \n    \n    emerge \\ app-arch/bzip2 \\ app-arch/lzip \\ app-arch/p7zip \\ app-arch/unzip \\ app-arch/xz-utils \\ app-shells/bash \\ dev-lang/perl \\ dev-lang/python \\ dev-lang/ruby \\ dev-libs/openssl \\ dev-perl/XML-Parser \\ dev-python/mako \\ dev-util/gperf \\ dev-util/intltool \\ dev-vcs/git \\ net-misc/wget \\ sys-apps/sed \\ sys-devel/autoconf \\ sys-devel/automake \\ sys-devel/bison \\ sys-devel/flex \\ sys-devel/gcc \\ sys-devel/gettext \\ sys-devel/libtool \\ sys-devel/make \\ sys-devel/patch \\ x11-libs/gdk-pixbuf\n\n### Mac OS X\n\nInstall the latest Xcode\n\n##### MacPorts\n\nInstall MacPorts, then run:\n\n    \n    \n    sudo port -N install \\ coreutils \\ gdk-pixbuf2 \\ gnutar \\ gsed \\ intltool \\ lzip \\ p7zip \\ pkgconfig \\ py-mako \\ wget \\ xz\n\n##### Rudix\n\nRudix has shut down since August 2018\n\n##### Homebrew\n\nInstall Homebrew, then run:\n\n    \n    \n    brew install \\ autoconf \\ automake \\ coreutils \\ gdk-pixbuf \\ gnu-sed \\ gnu-tar \\ intltool \\ libtool \\ lzip \\ pkg-config \\ python3 \\ p7zip \\ wget \\ xz\n    \n    \n    python3 -m pip install mako\n\nYou will see messages about keg-only formulae and tools prefixed with 'g' -\nyou can safely ignore these and no homebrew related $PATH modifications or\nbrew links are necessary.\n\n##### Genral Notes\n\nYou may be prompted to install a java runtime - this is not required.\n\nMac OS X versions \u2264 10.9 are no longer tested.\n\n##### Certain packages have open issues on OS X\n\nFor Xcode <7.3, run:\n\n    \n    \n    make EXCLUDE_PKGS='nsis'\n\n### openSUSE\n\n    \n    \n    zypper install -R \\ autoconf \\ automake \\ bash \\ bison \\ bzip2 \\ flex \\ gcc-32bit \\ gcc-c++ \\ gdk-pixbuf-devel \\ gettext-tools \\ git \\ glibc-devel-32bit \\ gperf \\ intltool \\ libgcc46-32bit \\ libgomp46-32bit \\ libopenssl-devel \\ libstdc++46-devel-32bit \\ libtool \\ lzip \\ make \\ openssl \\ p7zip \\ patch \\ perl \\ perl-XML-Parser \\ python3 \\ python3-Mako \\ ruby \\ sed \\ unzip \\ wget \\ xz\n\nOn 32-bit installs,\n\n    \n    \n    gcc-32bit glibc-devel-32bit libgcc46-32bit libgomp46-32bit libstdc++46-devel-32bit\n\nare not required, however there are potential issues with 32-bit systems.\n\n### Void\n\n    \n    \n    xbps-install -S \\ autoconf \\ automake \\ flex \\ gcc \\ gdk-pixbuf-devel \\ gettext \\ gettext-devel \\ git \\ gperf \\ intltool \\ libcurl-devel \\ libtool \\ lzip \\ make \\ p7zip \\ patch \\ perl-XML-Parser \\ pkgconf \\ python3 \\ python3-Mako \\ ruby \\ unzip \\ wget \\ xz\n\n### Windows Subsystem for Linux\n\nInstall the Windows Subsystem for Linux, noting that WSL1 does not support\n32-bit code execution.\n\nIf mixing WSL1 and WSL2, ensure the distro-specific or global defaults are\nset.\n\nRequirements should match the Debian, Fedora, openSUSE etc. sections above,\nbut care should be taken to ensure MXE is installed in the Linux subsystem\nunder / instead of the mounted Windows folders in /mnt.\n\nIt can be made to work using symlinks and specifying:\n\n    \n    \n    make MXE_TMP=/tmp/mxe-tmp ...\n\nSee further reading in:\n\n  * WSL FAQ file section\n  * MSDN Blog\n\n### Issues with 32-bit systems\n\n32-bit systems may have insufficient virtual memory to build all of MXE.\n\n### Issues without a 32-bit compiler\n\nCertain packages contain native tools that are currently 32-bit only. In order\nto build these on a 64-bit system, multi-lib support must be enabled in the\ncompiler toolchain. However, not all operating systems support this.\n\nTo build the remainder of MXE, specify the affected packages to exclude:\n\n    \n    \n    make EXCLUDE_PKGS='ocaml%'\n\n## Usage\n\nAll build commands also download the packages if necessary.\n\nIn a BSD userland, substitute \"make\" with \"gmake\" as all commands are based on\nGNU Make.\n\nmake\n\n    build all packages, non-parallel\nmake cc\n\n    build a minimal useful set of packages, i.e. the cross compilers and the most basic packages, non-parallel\nmake foo bar\n\n    build packages \"foo\", \"bar\" and their dependencies, non-parallel\n    \n\nthe package list can also be set in settings.mk\n\n    \n    \n    LOCAL_PKG_LIST := foo bar .DEFAULT_GOAL := local-pkg-list local-pkg-list: $(LOCAL_PKG_LIST)\n\n    so a call to make will only build those packages (and their dependencies, of course)\nmake foo bar --touch\n\n    mark packages \"foo\" and \"bar\" as up-to-date after a trivial change in one of their dependencies (short option \"-t\")\nmake foo bar --jobs=4 JOBS=2\n\n    build packages \"foo\", \"bar\" and their dependencies, where up to 4 packages are built in parallel (short option \"-j 4\"), each with up to 2 compiler processes running in parallel\n    the JOBS variable can also be defined in settings.mk and defaults to the number of CPUs up to a max of 6 to prevent runaway system load with diminishing returns - see the GNU Make manual for more details on parallel execution\nmake --jobs=4 --keep-going\n\n    build all packages with 4 inter-package parallel jobs and continue as much as possible after an error (short option \"-j 4 -k\")\nmake foo bar MXE_USE_CCACHE=\n\n    disables use of ccache to eliminate potential error sources when debugging\nmake EXCLUDE_PKGS='foo bar'\n\n    build all packages excluding foo, bar, and all downstream packages that depend on them - mostly used when there are known issues\nmake foo_SOURCE_TREE=/path/to/local/source\n\n    build using local source tree for package \"foo\", bypassing download, checksum and patching\n    N.B. ensure \"foo\" has an out-of-source build configured to avoid generation of build artefacts in local tree\nmake check-requirements\n\n    check most of the requirements if necessary \u2013 executed automatically before building packages\nmake download\n\n    download all packages, non-parallel, such that subsequent builds work without internet access\nmake download-foo download-bar\n\n    download packages \"foo\", \"bar\" and their dependencies, non-parallel\nmake download-foo download-bar -j 4\n\n    download packages \"foo\", \"bar\" and their dependencies, where up to 4 packages are downloaded in parallel\nmake download-only-foo download-only-bar\n\n    download packages \"foo\", \"bar\", without their dependencies, non-parallel\nmake clean\n\n    remove all package builds \u2013 use with caution!\nmake clean-junk\n\n    remove all unused files, including unused package files, temporary folders, and logs\nmake clean-pkg\n\n    remove all unused package files, handy after a successful update\nmake show-deps-foo\n\n    print a list of upstream dependencies and all downstream dependents (direct and recursive)\nmake show-downstream-deps-foo\n\n    print a list of all recursive downstream dependents - suitable for use in shell scripts\nmake show-direct-downstream-deps-foo\n\n    print a list of direct downstream dependents - suitable for use in shell scripts\nmake show-upstream-deps-foo\n\n    print a list of upstream dependencies - suitable for use in shell scripts\nmake docs/build-matrix.html\n\n    generate a report of what packages are supported on what targets to docs/build-matrix.html\nmake update\n\n    update the version numbers of all packages, download the new versions and note their checksums\nmake update UPDATE_DRYRUN=true\n\n    show list of update candidates without downloading\nmake update-package-foo\n\n    update the version numbers of package foo, download the new version and note its checksum\nmake check-update-package-foo\n\n    check if package foo has an update available without downloading\nmake update-checksum-foo\n\n    download package foo and update its checksum\nmake cleanup-style\n\n    cleanup coding style\n\n## List of Packages\n\nSee something missing? Feel free to create a new package.\n\na52dec| 0.7.4| a52dec (aka. liba52)  \n---|---|---  \nadwaita-icon-theme| 3.36.1| GTK+  \nagg| 2.5| Anti-Grain Geometry  \nalure| 1.2| alure  \napr| 1.5.2| APR  \napr-util| 1.5.4| APR-util  \narmadillo| 12.0.1| Armadillo C++ linear algebra library  \naspell| 0.60.6.1| Aspell  \nassimp| 3.2| Assimp Open Asset Import Library  \natk| 2.36.0| ATK  \natkmm| 2.28.2| ATKmm  \naubio| 0.4.2| aubio  \nautotools| 1| Dependency package to ensure the autotools work  \nbfd| 2.38| Binary File Descriptor library  \nbinutils| 2.38| GNU Binutils  \nblas| 3.11.0| Reference BLAS (Basic Linear Algebra Subprograms)  \nboost| 1.81.0| Boost C++ Library  \nbox2d| 2.3.1| box2d  \nbrotli| 1.1.0| brotli  \nbullet| 2.82-r2704| Bullet physics, version 2  \nbzip2| 1.0.8| bzip2  \ncairo| 1.18.0| cairo  \ncairomm| 1.14.3| cairomm  \ncblas| 3.11.0| C interface to Reference BLAS  \ncc| 1| Dependency package for cross libraries  \nccache| 3.6| ccache \u2013 a fast compiler cache  \nccfits| 2.5| CCfits  \ncegui| 9726a2b505fb| Crazy Eddie\u2019s GUI System (CEGUI)  \ncfitsio| 3410| cfitsio  \ncgal| 5.5| cgal  \nchafa| 1.12.5| The Chafa terminal graphics package  \ncheck| 0.15.2| check  \nchipmunk| 7.0.2| Chipmunk Physics  \nchromaprint| 1.5.1| Chromaprint  \ncimg| 2.7.1| CImg Library  \ncloog| 0.20.0| CLooG Code Generator  \ncmake| 3.29.1| cmake  \ncmake-conf| 1| cmake-conf  \ncmark| 0.29.0| CommonMark parsing and rendering library and program in C  \ncminpack| 1.3.4| cminpack  \ncoda| 2.18.3| CODA  \ncoin| 3.1.3| Coin3D  \ncpp-netlib| 73d4024| Boost C++ Networking Library  \ncppunit| 1.13.2| CppUnit  \ncppzmq| 4.2.2| C++ binding for 0MQ  \ncryptopp| 8.4.0| Crypto++ Library  \ncrystalhd| 1| Broadcom Crystal HD Headers  \ncunit| 2.1-3| cunit  \ncurl| 8.7.1| cURL  \ndb| 18.1.40| Oracle Berkeley DB  \ndbus| 1.15.6| dbus  \ndcmtk| 3.6.0| DCMTK  \ndevil| cba359b| DevIL  \ndjvulibre| 3.5.28| DjVuLibre  \ndlfcn-win32| 1.4.1| POSIX dlfcn wrapper for Windows  \neigen| 3.4.0| eigen  \nexiv2| 0.27.5| Exiv2  \nexpat| 2.6.2| Expat XML Parser  \nfaad2| 2.8.8| faad2  \nfdk-aac| 2.0.0| FDK-AAC  \nffmpeg| 6.0| ffmpeg  \nfftw| 3.3.10| fftw  \nfile| 5.42| file  \nflac| 1.4.3| Free Lossless Audio Codec  \nflann| 1.8.4| FLANN  \nfltk| 1.3.8| FLTK  \nfluidsynth| 2.0.7| FluidSynth - a free software synthesizer based on the\nSoundFont 2 specifications  \nfmt| 9.1.0| A modern formatting library  \nfontconfig| 2.14.2| fontconfig  \nfreeglut| 3.2.1| freeglut  \nfreeimage| 3.15.4| FreeImage  \nfreetds| 1.4.11| FreeTDS  \nfreetype| 2.13.2| freetype  \nfreetype-bootstrap| 2.13.2| freetype (without harfbuzz)  \nfreexl| 1.0.5| FreeXL  \nfribidi| 1.0.13| FriBidi  \nftgl| 2.1.3~rc5| ftgl  \ngc| 8.0.4| gc  \ngcc| 11.4.0| GCC  \ngd| 2.2.5| GD (without support for xpm)  \ngdal| 3.6.2| GDAL  \ngdb| 14.2| gdb  \ngdk-pixbuf| 2.42.10| GDK-pixbuf  \ngendef| 11.0.1| gendef  \ngeoip-database| 20150317-1| GeoIP Legacy Database  \ngeos| 3.9.1| GEOS  \ngettext| 0.21.1| gettext  \nghostscript| 10.02.1| ghostscript  \ngiflib| 5.1.4| giflib  \nglew| 2.1.0| GLEW  \nglfw2| 2.7.9| GLFW 2.x  \nglfw3| 3.3.8| GLFW 3.x  \nglib| 2.70.2| GLib  \nglib-networking| 2.54.1| Network-related GIO modules for glib  \nglibmm| 2.66.2| GLibmm  \nglm| 0.9.9.0| GLM - OpenGL Mathematics  \nglpk| 5.0| GNU Linear Programming Kit  \ngmp| 6.3.0| GMP  \ngnutls| 3.7.10| GnuTLS  \ngooglemock| 1.7.0| Google Mock  \ngoogletest| 1.8.1| Google Test  \ngpgme| 1.22.0| gpgme  \ngrantlee| 5.2.0| Grantlee is a set of Free Software libraries written using\nthe Qt framework  \ngraphicsmagick| 1.3.38| GraphicsMagick  \ngsl| 2.7.1| GSL  \ngsoap| 2.8.130| gSOAP  \ngst-libav| 1.20.3| gst-libav  \ngst-plugins-bad| 1.20.3| gst-plugins-bad  \ngst-plugins-base| 1.20.3| gst-plugins-base  \ngst-plugins-good| 1.20.3| gst-plugins-good  \ngst-plugins-ugly| 1.20.1| gst-plugins-ugly  \ngstreamer| 1.20.3| gstreamer  \ngta| 1.0.8| gta  \ngtk2| 2.24.29| GTK+  \ngtk3| 3.24.32| GTK+  \ngtkglarea| 2.0.1| GtkGLArea  \ngtkglext| 1.2.0| GtkGLExt  \ngtkglextmm| 1.2.0| GtkGLExtmm  \ngtkimageview| 1.6.4| GtkImageView  \ngtkmm2| 2.24.5| GTKMM  \ngtkmm3| 3.24.5| GTKMM  \ngtksourceview| 2.10.5| GTKSourceView  \ngtksourceviewmm2| 2.10.3| GtkSourceViewmm  \nguile| 1.8.8| GNU Guile  \ngumbo| 0.10.1| Gumbo, an HTML5 parsing library  \nhamlib| 3.3| HamLib  \nharfbuzz| 8.4.0| HarfBuzz  \nhdf-eos2| 20v1.00| HDF-EOS2  \nhdf-eos5| 1.16| HDF-EOS5  \nhdf4| 4.2.10| HDF4  \nhdf5| 1.12.0| HDF5  \nhidapi| 2a24bf9| HIDAPI  \nhiredis| 1.2.0| HIREDIS  \nhunspell| 1.7.2| Hunspell  \nhyperscan| 5.4.0| Hyperscan  \nicu4c| 74.2| ICU4C  \nid3lib| 3.8.3| id3lib  \nilmbase| 2.2.1| IlmBase  \nimagemagick| 7.1.0-51| ImageMagick  \nintel-tbb| c28c8be| Intel Threading Building Blocks  \nisl| 0.24| Integer Set Library  \nitk| 5.0.1| Insight Segmentation and Registration Toolkit (ITK)  \nitpp| 4.3.1| itpp  \njack| 1.9.22| JACK Audio Connection Kit  \njansson| 2.12| Jansson  \njasper| 4.2.2| JasPer  \njpeg| 9f| jpeg  \njson-c| 0.13.1| json-c  \njson-glib| 1.6.6| JSON-Glib  \njson_spirit| 4.08| json_spirit  \njsoncpp| 1.9.5| A C++ library for interacting with JSON  \nlame| 3.100| lame  \nlapack| 3.11.0| Reference LAPACK \u2014 Linear Algebra PACKage  \nlcms| 2.16| lcms  \nlcms1| 1.19| lcms1  \nlensfun| 0.3.2| lensfun  \nlevmar| 2.6| levmar  \nlibaacs| 0.9.0| libaacs  \nlibao| 1.2.2| AO  \nlibarchive| 3.4.0| Libarchive  \nlibass| 0.17.1| libass  \nlibassuan| 2.5.6| libassuan  \nlibatomic_ops| 7.4.8| The atomic_ops project (Atomic memory update operations\nportable implementation)  \nlibbluray| 0.9.2| libbluray  \nlibbs2b| 3.1.0| Bauer Stereophonic-to-Binaural library  \nlibcaca| 0.99.beta19| libcaca  \nlibcddb| 1.3.2| Access data on a CDDB  \nlibcdio| 2.1.0| Libcdio  \nlibcdio-paranoia| 10.2+0.93+1| Libcdio-paranoia  \nlibcint| 3.0.18| General GTO integrals for quantum chemistry  \nlibcomm14cux| 2.1.3| libcomm14cux  \nlibcroco| 0.6.13| Libcroco  \nlibdnet| 1.11| libdnet  \nlibdvbpsi| 1.3.2| libdvbpsi  \nlibdvdcss| 1.4.2| libdvdcss  \nlibdvdetect| 0.71| Fast database lookup for DVDs  \nlibdvdnav| 6.0.0| libdvdnav  \nlibdvdread| 6.0.1| libdvdread  \nlibepoxy| 1.5.9| libepoxy  \nlibevent| 2.1.11| libevent  \nlibexif| 0.6.22| libexif  \nlibf2c| 1| libf2c  \nlibfcgi| 2.4.2| FastCGI  \nlibffi| 3.4.3| libffi  \nlibftdi| 0.20| LibFTDI  \nlibftdi1| 1.5| LibFTDI1  \nlibgcrypt| 1.10.3| libgcrypt  \nlibgda| 4.2.13| libgda  \nlibgdamm| 4.1.3| libgdamm  \nlibgee| 0.20.1| libgee  \nlibgeotiff| 1.6.0| GeoTiff  \nlibgit2| 1.7.1| libgit2  \nlibglade| 2.6.4| glade  \nlibgnurx| 2.6.1| libgnurx  \nlibgpg_error| 1.48| libgpg-error  \nlibgphoto2| 2.5.30| libgphoto2  \nlibgsasl| 1.10.0| Libgsasl  \nlibgsf| 1.14.50| libgsf  \nlibharu| 2.3.0| libharu  \nlibiberty| 2.38| libiberty  \nlibical| 2.0.0| libical  \nlibiconv| 1.17| libiconv  \nlibid3tag| 0.15.1b| libid3tag  \nlibidn| 1.36| Libidn  \nlibidn2| 2.3.0| implementation of IDNA2008/TR46 internationalized domain names  \nlibieee1284| 0.2.11| libieee1284  \nlibircclient| 1.10| libircclient  \nlibjpeg-turbo| 3.0.1| libjpeg-turbo  \nliblastfm| 1.0.9| A Qt C++ library for the Last.fm webservices  \nliblastfm_qt4| 1.0.9| A Qt C++ library for the Last.fm webservices  \nliblaxjson| 1.0.5| liblaxjson  \nliblo| 0.29| liblo  \nliblqr-1| 0.4.2| liblqr-1  \nliblsmash| 2.14.5| L-SMASH  \nlibltdl| 2.4.6| GNU Libtool Library (libltdl)  \nlibmad| 0.15.1b| libmad  \nlibmicrohttpd| 0.9.38| GNU Libmicrohttpd  \nlibmikmod| 3.3.7| libMikMod  \nlibmms| 0.6.4| a library for downloading (streaming) media files using the\nmmst and mmsh protocols  \nlibmng| 2.0.3| libmng  \nlibmodplug| 0.8.8.4| libmodplug  \nlibmpcdec| 475| Living Audio Compression  \nlibmpeg2| 0.5.1| libmpeg2 - a free MPEG-2 video stream decoder  \nlibmysqlclient| 6.1.6| libmysqlclient  \nlibnice| 0.1.16| libnice  \nlibntlm| 1.7| Libntlm  \nliboauth| 1.0.3| liboauth  \nlibodbc++| 0.2.5| libodbc++  \nliboil| 0.3.17| liboil  \nlibomemo| 0.7.0| Implementation of OMEMO in C  \nlibotr| 4.1.1| Off-the-Record Messaging  \nlibpano13| 2.9.18| libpano13  \nlibpaper| 1.1.24+nmu5| libpaper  \nlibplist| 2.0.0| libplist  \nlibpng| 1.6.43| libpng  \nlibpsl| 0.21.1| C library for the Public Suffix List  \nlibqrencode| 4.0.2| a fast and compact QR Code encoding library  \nlibraw| 0.21.1| A library for reading RAW files obtained from digital photo\ncameras  \nlibrosco| 0.1.11| librosco  \nlibrsvg| 2.40.21| librsvg  \nlibrtmp| f1b83c1| librtmp  \nlibsamplerate| 0.1.9| libsamplerate  \nlibserialport| 0.1.1| libserialport  \nlibshout| 2.4.1| libshout  \nlibsigc++| 2.10.7| libsigc++  \nlibsignal-protocol-c| 2.3.3| libsignal-protocol-c  \nlibsigrok| 0.5.0| libsigrok  \nlibslirp| 4.7.0| libslirp  \nlibsndfile| 1.1.0| libsndfile  \nlibsodium| 1.0.18| libsodium  \nlibsoup| 2.74.2| HTTP client/server library for GNOME  \nlibspatialindex| 1.8.5| libspatialindex  \nlibspectre| 0.2.12| libspectre  \nlibsrt| 1.5.2| libsrt  \nlibssh| 0.10.6| SSHv2 and SSHv1 protocol on client and server side  \nlibssh2| 1.11.0| libssh2  \nlibsvm| 3.22| libsvm  \nlibtasn1| 4.19.0| GnuTLS  \nlibtool| 2.4.6| GNU Libtool  \nlibtorrent-rasterbar| 1.1.6| libtorrent-rasterbar  \nlibunistring| 1.1| libunistring  \nlibusb| 1.2.6.0| LibUsb  \nlibusb1| 1.0.27| LibUsb-1.0  \nlibuv| 1.44.2| libuv  \nlibvpx| 1.8.2| vpx  \nlibwebp| 1.3.2| libwebp  \nlibwebsockets| 2.4.2| libwebsockets  \nlibxml++| 2.40.1| libxml2  \nlibxml2| 2.11.1| libxml2  \nlibxslt| 1.1.38| libxslt  \nlibyaml| 0.2.5| A C library for parsing and emitting YAML.  \nlibzip| 1.5.2| libzip  \nlibzmq| c89390f| ZeroMQ core engine in C++, implements ZMTP/3.0  \nlld| system| LLD Linker on host OS  \nllvm| 10.0.0| llvm  \nlog4cxx| 0.10.0| log4cxx  \nlua| 5.4.4| Lua  \nluabind| 0.9.1| Luabind  \nluajit| 2.0.5| LuaJIT  \nlz4| 1.9.4| lossless compression algorithm optimized for speed  \nlzma| 2201| LZMA SDK  \nlzo| 2.10| lzo  \nmatio| 1.5.23| matio  \nmdbtools| 1.0.0| mdbtools  \nmesa| 23.1.7| The Mesa 3D Graphics Library  \nmeson| 1.2.1| meson  \nmeson-wrapper| 1| meson-wrapper  \nmetis| 5.1.0| metis  \nmingw-w64| 11.0.1| MinGW-w64 Runtime  \nminiupnpc| 2.0| miniupnpc  \nminizip| 3.0.1| minizip  \nmman-win32| 9f115ad| MMA-Win32  \nmpc| 1.3.1| GNU MPC  \nmpfr| 4.2.1| mpfr  \nmpg123| 1.31.1| mpg123  \nms-gsl| 3.1.0| guidelines support library  \nmuparser| 2.2.5| muParser  \nmuparserx| 4.0.7| muParserX  \nmxml| 3.1| Mini-XML  \nnasm| 2.14.02| NASM - The Netwide Assembler  \nncurses| fe7c48d| Ncurses  \nneon| 0.30.2| HTTP and WebDAV client library (libneon)  \nnetcdf| 4.8.1| NetCDF  \nnetcdf-cxx4| 4.3.0| NetCDF-CXX4  \nnetpbm| 10.35.96| Netpbm  \nnettle| 3.9.1| nettle  \nninja| 1.11.1| A small build system with a focus on speed  \nnlopt| 2.7.1| NLopt  \nnsis| 3.06.1| NSIS  \nocaml-cairo| 1.2.0| cairo-ocaml  \nocaml-camlimages| 4.0.1| camlimages  \nocaml-core| 4.00.1| ocaml  \nocaml-findlib| 1.4| findlib  \nocaml-flexdll| 0.31| flexdll  \nocaml-lablgl| 1.05| lablgl  \nocaml-lablgtk2| 2.16.0| lablgtk2  \nocaml-native| 4.00.1| ocaml  \nocaml-xml-light| 2.2| xml-light  \noce| 0.18.2| Open CASCADE Community Edition  \nogg| 1.3.5| OGG  \nold| 0.17| old  \nopenal| 1.19.1| openal  \nopenblas| 0.3.20| OpenBLAS  \nopencore-amr| 0.1.6| opencore-amr  \nopencsg| 1.4.2| opencsg  \nopencv| 4.6.0| OpenCV  \nopenexr| 2.2.0| OpenEXR  \nopenjpeg| 2.5.2| OpenJPEG  \nopenmp-validation| ff8cf0c| OpenMP Validation Suite  \nopenscenegraph| 3.6.5| OpenSceneGraph  \nopenssl| 3.2.1| openssl  \nopenthreads| 3.6.5| OpenThreads  \nopus| 1.3.1| opus  \nopusfile| 0.11| opusfile  \nosgearth| 2.10| Geospatial SDK for OpenSceneGraph  \nossim| 1af3774| OSSIM  \npango| 1.51.0| Pango  \npangomm| 2.46.2| Pangomm  \npcl| 1.9.1| PCL (Point Cloud Library)  \npcre| 8.45| PCRE  \npcre2| 10.43| PCRE2  \npdcurses| 3.4| PDcurses  \npdflib_lite| 7.0.5p3| PDFlib Lite  \npe-parse| 2a1aa79| Principled, lightweight C/C++ PE parser  \npe-util| 2af684a| List shared object dependencies of a portable executable\n(PE)  \npfstools| 2.0.4| pfstools  \nphysfs| 3.0.2| physfs  \npicomodel| 1142ad8| picomodel  \npire| 0.0.6| PIRE  \npixman| 0.43.4| pixman  \npkgconf| da179fd| pkgconf  \nplib| 1.8.5-rc1| Plib  \nplibc| cd7ed09| Plibc  \nplotmm| 0.1.2| PlotMM  \nplotutils| 2.6| plotutils  \npoco| 1.9.4| POCO C++ Libraries  \npolarssl| 1.3.9| Polar SSL Library  \npoppler| 23.09.0| poppler  \npoppler-qt5| 23.09.0| poppler-qt5  \npoppler-qt6| 23.09.0| poppler-qt6  \npopt| 1.16| popt  \nportablexdr| 4.9.1| PortableXDR  \nportaudio| 190700_20210...| portaudio  \nportmidi| 217| portmidi  \npostgresql| 13.6| PostgreSQL  \nprimesieve| 7.4| Primesieve  \nproj| 8.2.1| proj  \nprotobuf| 3.9.0| protobuf  \npthreads| POSIX 1003.1...| POSIX Threads  \npugixml| 1.8| Light-weight, simple, and fast XML parser for C++ with XPath\nsupport  \npython-conf| 1| python-conf  \npython-mako| 1.1.3| Mako Templates for Python  \npython-markupsafe| 1.1.1| Safely add untrusted strings to HTML/XML markup  \npython-setuptools| df51e62| Easily download, build, install, upgrade, and\nuninstall Python packages  \nqca| 2.3.4| Qt Cryptographic Architecture  \nqdbm| 1.8.78| QDBM  \nqhttpengine| 1.0.1| qhttpengine  \nqjson| 0.9.0| QJson  \nqscintilla2| 2.11.2| QScintilla2  \nqt| 4.8.7| Qt  \nqt3d| 5.15.13| Qt  \nqt5| 5.15.13| Qt  \nqt6| 6.7.0| Qt6  \nqt6-conf| 6.7.0| qt6-conf  \nqt6-qt5compat| 6.7.0| Qt  \nqt6-qtbase| 6.7.0| Qt6  \nqt6-qtcharts| 6.7.0| Qt  \nqt6-qtdeclarative| 6.7.0| Qt  \nqt6-qthttpserver| 6.7.0| Qt  \nqt6-qtimageformats| 6.7.0| Qt  \nqt6-qtmultimedia| 6.7.0| Qt  \nqt6-qtscxml| 6.7.0| Qt  \nqt6-qtserialport| 6.7.0| Qt  \nqt6-qtservice| 11730d4| Qt Solutions  \nqt6-qtshadertools| 6.7.0| Qt  \nqt6-qtsvg| 6.7.0| Qt  \nqt6-qttools| 6.7.0| Qt  \nqt6-qttranslations| 6.7.0| Qt  \nqt6-qtwebsockets| 6.7.0| Qt  \nqtactiveqt| 5.15.13| Qt  \nqtbase| 5.15.13| Qt  \nqtcharts| 5.15.13| Qt  \nqtcoap| 5.15.13| Qt  \nqtconnectivity| 5.15.13| Qt  \nqtdatavis3d| 5.15.13| Qt  \nqtdeclarative| 5.15.13| Qt  \nqtgamepad| 5.15.13| Qt  \nqtgraphicaleffects| 5.15.13| Qt  \nqtifw| 4.5.1| Qt Installer Framework  \nqtimageformats| 5.15.13| Qt  \nqtkeychain| 0.13.2| QtKeychain  \nqtkeychain-qt6| 0.13.2| QtKeychain  \nqtlocation| 5.15.13| Qt  \nqtlottie| 5.15.13| Qt  \nqtmultimedia| 5.15.13| Qt  \nqtnetworkauth| 5.15.13| Qt  \nqtofficeopenxml| b26a85b| QtOfficeOpenXml  \nqtpurchasing| 5.15.13| Qt  \nqtquick3d| 5.15.13| Qt  \nqtquickcontrols| 5.15.13| Qt  \nqtquickcontrols2| 5.15.13| Qt  \nqtremoteobjects| 5.15.13| Qt  \nqtscript| 5.15.13| Qt  \nqtscxml| 5.15.13| Qt  \nqtsensors| 5.15.13| Qt  \nqtserialbus| 5.15.13| Qt  \nqtserialport| 5.15.13| Qt  \nqtserialport_qt4| 5c3b6cc| Qt  \nqtservice| 11730d4| Qt Solutions  \nqtsparkle| fde631f| Qt auto-updater lib  \nqtsparkle_qt4| fde631f| Qt auto-updater lib  \nqtspeech| 5.15.13| Qt  \nqtsvg| 5.15.13| Qt  \nqtsystems| e3332ee| Qt  \nqttools| 5.15.13| Qt  \nqttranslations| 5.15.13| Qt  \nqtvirtualkeyboard| 5.15.13| Qt  \nqtwebchannel| 5.15.13| Qt  \nqtwebkit| 5.212| QtWebKit  \nqtwebsockets| 5.15.13| Qt  \nqtwebview| 5.15.13| Qt  \nqtwinextras| 5.15.13| Qt  \nqtxlsxwriter| 01eb671| QtXlsxWriter  \nqtxmlpatterns| 5.15.13| Qt  \nquazip| 0.8.1| quazip  \nqwt| 6.1.5| Qwt  \nqwtplot3d| d80c908| QwtPlot3D  \nragel| 6.10| Ragel  \nreadline| 8.2| GNU Readline library  \nrubberband| 1.8.1| Rubberband  \nrucksack| 3.1.0| rucksack  \nscons-local| 3.1.2| Standalone SCons  \nsdl| 1.2.15| SDL  \nsdl2| 2.26.2| SDL2  \nsdl2_gfx| 1.0.4| SDL2_gfx  \nsdl2_image| 2.0.5| SDL2_image  \nsdl2_mixer| 2.0.4| SDL2_mixer  \nsdl2_net| 2.0.1| sdl2_net  \nsdl2_ttf| 2.0.18| SDL2_ttf  \nsdl_gfx| 2.0.26| SDL_gfx  \nsdl_image| 1.2.12| SDL_image  \nsdl_mixer| 1.2.12| SDL_mixer  \nsdl_net| 1.2.8| SDL_net  \nsdl_pango| 0.1.2| SDL_Pango  \nsdl_rwhttp| 0.2.0| SDL_rwhttp  \nsdl_sound| 1.0.3| SDL_sound  \nsdl_ttf| 2.0.11| SDL_ttf  \nsfml| 2.5.1| SFML  \nsmpeg| 0.4.5+cvs200...| smpeg  \nsmpeg2| 2.0.0| smpeg  \nsmtpclient-for-qt| 7e55309| SmtpClient-for-Qt  \nsox| 14.4.2| SoX  \nsparsehash| 2.0.3| sparsehash  \nspatialite| 5.0.1| SpatiaLite  \nspdlog| 1.11.0| Fast C++ logging library.  \nspeex| 1.2.0| Speex  \nspeexdsp| 1.2rc3| SpeexDSP  \nsqlcipher| 4.4.3| SQLite extension that provides 256 bit AES encryption of\ndatabase files  \nsqlite| 3450200| SQLite  \nsubversion| 1.9.7| subversion  \nsuitesparse| 4.5.6| SuiteSparse  \nt4k_common| 0.1.1| t4k_common  \ntaglib| 1.12| TagLib  \ntcl| 8.6.10| tcl  \ntclap| 1.2.1| tclap  \nteem| 1.11.0| Teem  \ntermcap| 1.3.1| Termcap  \ntheora| 1.1.1| Theora  \ntidy-html5| 5.8.0| HTML/XML syntax checker and reformatter  \ntiff| 4.6.0| LibTIFF  \ntinyxml| 2.6.2| tinyxml  \ntinyxml2| 7.0.1| tinyxml2  \ntre| 0.8.0| TRE  \ntwolame| 0.4.0| TwoLAME  \nucl| 1.03| UCL  \nunrtf| 0.21.9| unRTF  \nunzip| 6.10b| Info-ZIP  \nupx| 3.96| UPX  \nvamp-plugin-sdk| 2.5| Vamp Plugins SDK  \nvc| 1.3.3| SIMD Vector Classes for C++  \nvcdimager| 2.0.1| vcdimager  \nvidstab| 1.1.0| vid.stab video stablizer  \nvigra| 1.9.0| vigra  \nvmime| d03ad5f| VMime  \nvo-aacenc| 0.1.3| VO-AACENC  \nvo-amrwbenc| 0.1.3| VO-AMRWBENC  \nvorbis| 1.3.7| Vorbis  \nvtk| 8.2.0| vtk  \nvulkan-headers| 1.3.280| vulkan headers  \nvulkan-loader| 1.2.166| vulkan loader  \nwaf| 1.8.17| Waf: the meta build system  \nwavpack| 5.6.0| WavPack  \nwget| 1.24.5| wget  \nwidl| 11.0.1| Wine IDL Compiler  \nwinpcap| 4_1_3| WinPcap  \nwoff2| 1.0.2| woff2  \nwt| 4.3.1| Wt  \nwxwidgets| 3.1.7| wxWidgets  \nx264| 20180806-224...| x264  \nx265| 2.4| x265  \nxapian-core| 1.4.16| Xapian-Core  \nxerces| 3.1.4| Xerces-C++  \nxmlrpc-c| d4364f4| xmlrpc-c  \nxmlsec| 1.2.29| xmlsec  \nxmlwrapp| 0.7.0| xmlwrapp  \nxorg-macros| 1.19.0| X.org utility macros  \nxvidcore| 1.3.7| xvidcore  \nxxhash| 0.7.2| xxHash  \nxz| 5.4.6| XZ  \nyaml-cpp| 0.6.2| A YAML parser and emitter for C++  \nyasm| 1.3.0| Yasm  \nzip| 3.0| Info-ZIP  \nzlib| 1.3.1| zlib  \nzstd| 1.5.6| Zstandard is a fast lossless compression algorithm  \nzziplib| 0.13.69| ZZIPlib  \n  \n## Guidelines for Creating Packages\n\n  1. The package should be a free software library that is really used by one of your applications. Please also review our legal notes.\n\nBTW, we're always curious about the applications people are porting. We\nmaintain a list of projects which use MXE. No matter whether your project is\nfree or proprietary \u2013 as long as it has its own website, we'd be happy to link\nto it.\n\nAlso, feel free to link to us. :-)\n\n  2. Grep through the src/*.mk files to find a project that is most similar to yours. (Really, grep is your friend here.)\n\nFor instance, when adding a GNU library, you should take a package like\ngettext.mk or libiconv.mk as the base of your work. When using a SourceForge\nproject, you could start with a copy of xmlwrapp.mk. And so on.\n\nGitHub hosted projects can automatically configure updates, urls, file names\netc. by setting $(PKG)_GH_CONF instead of $(PKG)_FILE, $(PKG)_SUBDIR,\n$(PKG)_URL, and $(PKG)_UPDATE sections.\n\nTo track releases set:\n\n    \n        $(PKG)_GH_CONF := owner/repo/releases[/latest][, tag prefix, tag suffix, tag filter-out, version separator]\n\nReleases may require setting _FILE, _SUBDIR, _URL, depending on the naming\nconvention used by the project for tarballs.\n\nTo track tags set:\n\n    \n        $(PKG)_GH_CONF := owner/repo/tags[, tag prefix, tag suffix, tag filter-out, version separator]\n\nTo track branches, set:\n\n    \n        $(PKG)_GH_CONF := owner/repo/branches/<branch name>\n\nSee the following packages for examples:\n\n     * gc.mk for release tracking with non-standard file name\n     * yaml-cpp.mk for release tracking with standard file name\n     * vmime.mk for branch tracking\n     * libevent.mk for tag tracking\n     * libffi.mk for externally hosted tarballs with generated sources not present in source tree\n\nThe GNU Make Standard Library is also available (though it should be\nunnecessary for most packages).\n\nAlternatively you can use tool tools/skeleton.py to create a skeleton of new\nMXE package. It fills most of the fields of .mk file automatically and\nsupports typical build scenarios through option --builder. It also adds a\npackage to the list of packages (see below).\n\n  3. Adjust the comments, fill in the $(PKG)_* fields.\n\nTo fill the $(PKG)_CHECKSUM field, use a command such as (for file\ngettext.mk):\n\n    \n        make update-checksum-gettext\n\nor:\n\n    \n        openssl sha256 pkg/gettext-x.y.z.tar.gz\n\nif you have already downloaded the package.\n\nBe especially careful with the $(PKG)_DEPS section. The easiest way to get the\ndependencies right is to start with a minimal setup. That is, initialize MXE\nwith make cc only, then check whether your package builds successfully.\n\nAlways list the dependency on cc explicitly:\n\n    \n        $(PKG)_DEPS := cc ...\n\nSpecify official name and website of a package. If the official name coincides\nwith the package name, you can omit $(PKG)_DESCR.\n\n    \n        PKG := libdvdetect $(PKG)_WEBSITE := https://www.dvdetect.de/ $(PKG)_DESCR := Fast database lookup for DVDs\n\nAlways look for the SSL version of URLs, that is, prefer https:// URLs over\nhttp:// URLs.\n\n  4. Write your $(PKG)_BUILD. If your library has a ./configure script, enable/disable all dependency libraries explicitly via \"--enable-*\" and \"--disable-*\" options.\n\nThings not to do:\n\n     * do not run target executables with Wine, as Wine is not guaranteed to be installed. Instead build the needed tool natively or (if it is too huge to build one more time) add to MXE's dependencies. This policy is forced by setting WINEPREFIX to an empty directory, which breaks Wine;\n     * do not download anything while building, as all files downloaded should be verified by checksums. Instead create a package which installs the needed file. This policy is forced on Linux by LD_PRELOAD trick, breaking network functions.\n\nUseful Makefile variables provided by MXE:\n\n     * $(SOURCE_DIR) is a directory with package source and $(BUILD_DIR) is an empty directory intended for build files. Both directories are temporary. Prefer out-of-tree builds. Autotools and CMake support them.\n\n     * $(PREFIX) is path to usr/ directory. $(TOP_DIR) is path to MXE root directory. $(TARGET) is target triplet (e.g., i686-w64-mingw32.static). $(BUILD) is build triplet (e.g., x86_64-unknown-linux-gnu).\n\n     * $(MXE_CONFIGURE_OPTS) adds standard options to ./configure script. Typical usage:\n        \n                cd '$(BUILD_DIR)' && '$(SOURCE_DIR)'/configure \\ $(MXE_CONFIGURE_OPTS)\n\n     * $(MXE_DISABLE_CRUFT) disables installation of documentation and programs.\n        \n                $(MAKE) -C '$(BUILD_DIR)' -j '$(JOBS)' $(MXE_DISABLE_CRUFT) $(MAKE) -C '$(BUILD_DIR)' -j 1 install $(MXE_DISABLE_CRUFT)\n\n     * $(BUILD_SHARED) is TRUE for shared targets. Useful to add flags applicable only to shared targets.\n        \n                $(if $(BUILD_SHARED),LDFLAGS=-no-undefined)\n\nSimilarly, $(BUILD_STATIC) is TRUE for static targets; $(BUILD_NATIVE) is TRUE\nfor native targets; $(BUILD_CROSS) is TRUE for cross targets.\n\n  5. You might also have to provide a patch for it. In that case, have a look at other patches such as sdl2-2-libtool.patch. In particular, each patch file should be named as:\n    \n        PACKAGE-PATCHNUMBER-DESCRIPTION.patch\n\nand should start with:\n\n    \n        This file is part of MXE. See LICENSE.md for licensing information. This patch has been taken from: https://...\n\nwhere the URL points to the bugtracker entry, mailing list entry or website\nyou took the patch from.\n\nIf you created the patch yourself, please offer it to the upstream project\nfirst, and point to that URL, using the same wording: \"This patch has been\ntaken from:\".\n\nDepending on the feedback you get from the upstream project, you might want to\nimprove your patch.\n\n  6. If you find some time, please provide a minimal test program for it. It should be simple, stand alone and should work unmodified for many (all?) future versions of the library. Test programs are named as:\n    \n        PACKAGE-test.c\n\nor\n\n    \n        PACKAGE-test.cpp\n\ndepending on whether it is a C or C++ library. To get a clue, please have a\nlook at existing test programs such as sdl-test.c.\n\nAt the very end of your *.mk file you should build the test program in a\ngeneric way, using strict compiler flags. The last few lines of sdl.mk will\ngive you a clue.\n\n  7. You could also try to provide a $(PKG)_UPDATE section. However, that requires some experience and \"feeling\" for it. So it is perfectly okay if you leave a placeholder:\n    \n        define $(PKG)_UPDATE echo 'TODO: write update script for $(PKG).' >&2; echo $($(PKG)_VERSION) endef\n\nWe'll fill that in for you. It's a funny exercise.\n\n  8. Check that you don't have \"dirty stuff\" in your *.mk files, such as TAB characters or trailing spaces at lines endings. Run:\n    \n        make cleanup-style\n\nto remove these. Have a look at random *.mk files to get a feeling for the\ncoding style.\n\nThe same holds for your test program.\n\nHowever, patch files should always appear in the same coding style as the\nfiles they are patching.\n\nWhen patching sources with crlf line endings, the patch file itself should\nalso have the same eol style. Use the convention of naming the file as\n*crlf.patch to instruct git not to normalise the line endings (defined in\n.gitattributes).\n\nFinally, in your $(PKG)_BUILD section, please check that you use our\nportability variables:\n\nbash| \u2192| $(SHELL)  \n---|---|---  \ndate| \u2192| $(DATE)  \ninstall| \u2192| $(INSTALL)  \nlibtool| \u2192| $(LIBTOOL)  \nlibtoolize| \u2192| $(LIBTOOLIZE)  \nmake| \u2192| $(MAKE)  \npatch| \u2192| $(PATCH)  \nsed| \u2192| $(SED)  \nsort| \u2192| $(SORT)  \nwget| \u2192| $(WGET)  \n  9. Check whether everything runs fine. If you have some trouble, don't hesitate to ask on the mailing list, providing your *.mk file so far.\n\n  10. Issue a pull request to propose your final *.mk file to us. If you have trouble with pull requests, send your file to the mailing list instead.\n\nEither way, don't forget to tell us if there are some pieces in your *.mk file\nyou feel unsure about. We'll then have a specific look at those parts, which\navoids trouble for you and us in the future.\n\n## Copyright \u00a9 2007\u20132019\n\n  * Volker Diels-Grabsch\n  * Mark Brand\n  * Tony Theodore\n  * Martin Gerhardy\n  * Tiancheng \"Timothy\" Gu\n  * Boris Nagaev\n  * ... and many other contributors\n\n(contact via the project mailing list)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Legal\n\n### Disclaimer - it's all code...\n\nModern legal systems are like any other large, complex, and evolving body of\ncode you're likely to encounter.\n\nThey have their own language with quirky parsers, compilers, and interpreters\n(though these tend to be human). Their issue trackers are a backlog of court\ncases. They have bugs. They have traps for the uninitiated that may\npotentially do more than waste your time.\n\nWe currently limit ourselves to:\n\n    \n    \n    --enable-languages='c,c++,objc,fortran'\n\nso nothing mentioned here or on the mailing list should be taken as legal\nadvice. :-)\n\n### Choosing the right compiler\n\nThe best starting point for any legal questions would be the\n\nFTF (Freedom Task Force of the FSFE (Free Software Foundation Europe)).\n\nThey have been very helpful in the past, and maintain an extensive network of\nlegal contacts, both within and outside Europe.\n\nYour local jurisdiction may be a signatory to various international\nagreements, so be sure to mention where you are in any correspondence (much\nlike any detailed bug report really).\n\nAdditionally, you should also do some background reading from the FSF (Free\nSoftware Foundation) and Wikipedia to familiarise yourself with some of the\npotential issues (and experience some context-switching overhead).\n\n### Contributions\n\nContributions are always welcome!\n\nOwnership of all contributions (bug fixes, new packages, doc updates, etc.)\nremain with the author. All we require is a real name (no l33t handles,\nplease), and that you release your work under our licence.\n\nIf you prefer not to be credited with a contribution, please notify the\ncommitter.\n\n### Package Licences\n\nEach package is individually licensed under terms specified by the authors of\nthat package. Please see the respective source tarball and/or project website\nfor details.\n\nPackages that are non-free or ambiguous will be removed or rejected.\n\nThe definition of free must be one of:\n\n  * The Free Software Definition\n  * The Debian Free Software Guidelines (DFSG)\n  * The Open Source Definition\n\nPlease contact the mailing list if you notice a package that doesn't meet\nthese guidlines.\n\n### Other Considerations\n\nIn addition to the usual considerations (copyrights, patents, trademarks,\nexport regulations etc.), building statically linked libraries for Windows\nexposes some edge cases that you may not have encountered before.\n\nAccording to freedom 0 and our own licence, you can use mxe in countless\ndifferent environments, each with it's own special legal considerations. The\nconfiguration options of certain packages (e.g ffmpeg) allow the use of non-\nfree software and/or combinations that cause license violations.\n\nFor these packages, we will provide sensible defaults aimed at achieving the\nfollowing goals:\n\n  1. avoid causing inherent licensing issues with conflicting options\n  2. make the package as feature complete as possible\n\nNote that this does not prevent downstream violations, or affect any further\nobligations a licence may impose on you.\n\n### Potential Issues - Non Exhaustive List\n\n#### GNU Licenses\n\nReview the FAQ\n\n#### LGPL and Static Linking\n\nReview the Differences from the GPL section of the Wikipedia article mentioned\nabove.\n\n#### GPL and OpenSSL\n\nSee conflicting accounts from the FSF and the OpenSSL project.\n\nSince August 2015, there is an ongoing effort to re-license to Apache v2.\n\n#### FDK AAC and GPL\n\nThe FDK license has a \"no charging fees\" clause that likely violates the GPL.\n\n## History\n\n2015-05-04 \u2013 Retired the stable branch\n\n    \n\nThe stable branch was retired as it did more harm than good. Everybody is\nusing the master branch, because it is always recent and well enough tested.\nFor historical reference, the last commit to the stable branch was 0c6cc9c,\nwhich was fully merged into master as usual.\n\nAdded support for shared toolchains for over 50% of all the packages.\n\nUnfortunately, a number of factors have forced us to drop support for MinGW 3\n(i.e. \"MinGW.org\"), in favor of the MinGW-w64 toolchain. This decision was\nmade in a large part because of the dropping of support for MinGW by GLib and\nQt5, which arguably are two of the most important packages in MXE. Other\nconsiderations have also been taken, like the lack of maintainership in MinGW\nand potential legal challenges that comes with using supplemental DirectX\nheaders in MinGW in order to support Qt4. Worse yet, having to support the\nunsupported MinGW toolchain impedes adding or updating packages, as shown in\nthe pull request of updating GLib.\n\nPlease note that dropping support for MinGW DOES NOT MEAN dropping support for\nthe 32-bit architecture. MinGW-w64 also supports 32-bit target through\ni686-w64-mingw32.\n\nTo ease migration to the supported MinGW-w64 target, we have finished porting\nall packages that were MinGW-only to at least i686-w64-mingw32 (32-bit target\nof MinGW-w64). Hence your existing commands should work out-of-the-box\nassuming the MXE_TARGETS environment variable is set correctly.\n\n2013-07-27 \u2013 Release 2.23\n\n    \n\nThe stable branch was updated to the current development version after a\nthorough testing phase.\n\nCurrent users are strongly encouraged to start with a clean tree as the\ntoolchain has been updated and requires a full rebuild:\n\n    \n    \n    git pull && make clean && make\n\nMost packages were updated to their latest version.\n\nMany new packages are supported: alure, apr-util, apr, armadillo, cegui,\ncfitsio, cminpack, flann, gtkglarea, gtkimageview, harfbuzz, hdf4, hdf5,\nhunspell, icu4c, itk, lensfun, levmar, libf2c, libftdi, libgda, libgdamm,\nlibglade, liblqr-1, libmodplug, librtmp, libzip, log4cxx, mdbtools, ncurses,\nnetcdf, netpbm, ocaml-cairo, ocaml-camlimages, ocaml-core, ocaml-findlib,\nocaml-flexdll, ocaml-lablgl, ocaml-lablgtk2, ocaml-native, ocaml-xml-light,\nopencv, opus, opusfile, pcl, picomodel, plib, plibc, poppler, portablexdr,\nportmidi, protobuf, qdbm, qt5, qtactiveqt, qtbase, qtdeclarative,\nqtgraphicaleffects, qtimageformats, qtjsbackend, qtmultimedia, qtquick1,\nqtquickcontrols, qtscript, qtsensors, qtserialport, qtsvg, qttools,\nqttranslations, qtxmlpatterns, qwt, sdl_gfx, sfml, sox, teem, twolame, vtk6,\nwavpack, wget, winpthreads, xapian-core, yasm\n\nAdded support for mingw-w64 based toolchains targeting 32 & 64-bit\narchitectures.\n\nWith the addition of Qt5, there is no longer a prefixed version of qmake, see\nthe Qt section of the tutorial for the new way to invoke qmake.\n\nFreeBSD is no longer fully supported. Qt5, ocaml*, and 8 other packages are\nexcluded from the build.\n\n2012-04-12 \u2013 Release 2.22\n\n    \n\nThe release tarballs have been replaced with a stable branch that conforms to\nthe new branch concept:\n\n  * Any change of a build script goes into \"master\".\n  * Any package upgrade goes into \"master\".\n  * Any documentation upgrade that refers to a feature not present in stable goes into \"master\".\n  * Anything else that doesn't affect the build goes into \"stable\".\n  * Any non-critical improvement to the main Makefile goes into \"stable\".\n  * Any improvement in the package download URLs or package version recognition goes into \"stable\".\n  * When in doubt, \"master\" is used rather than \"stable\".\n  * Every change to the \"stable\" branch will be merged into \"master\".\n  * After a successful testing phase, the \"stable\" branch will be fast-forwarded to \"master\".\n\nThe project has been renamed from mingw-cross-env (MinGW cross compiling\nenvironment) to MXE (M cross environment).\n\nMost packages were updated to their latest version.\n\nNew packages are supported: agg, cgal, eigen, file, gta, json-c, libgnurx,\nlibharu, libircclient, libssh2, libxml++, llvm, lzo, mpfr, nettle, opencsg,\nqjson, qwtplot3d, vtk, and wt.\n\n2011-06-07 \u2013 Release 2.21\n\n    \n\nDownload | Changelog\n\nMinor bugfixes in several packages.\n\nAlmost all packages are updated to their latest version.\n\nPackages gtkmm and gtksourceviewmm have been renamed to gtkmm2 and\ngtksourceviewmm2.\n\nNew packages are supported: libass, poco, and t4k_common.\n\n2011-04-05 \u2013 Release 2.20\n\n    \n\nDownload | Changelog\n\nThis release fixes a download error caused by the pixman project (a sudden\nchange of their URL scheme without proper redirects). That sort of thing\nshould never happen!\n\n2011-03-19 \u2013 Release 2.19\n\n    \n\nDownload | Changelog\n\nThe download mechanisms are improved.\n\nA CMake toolchain file is provided to simplify cross-compiling projects which\nuse CMake.\n\nSupport for Debian/Lenny is dropped.\n\nPackage gtk is renamed to gtk2.\n\nAlmost all packages are updated to their latest version.\n\nNew packages are supported: dbus, graphicsmagick, libical, liboauth, physfs,\nand vigra.\n\nNote for boost::filesystem users: Version 3 is a major revision and now the\ndefault in 1.46.\n\n2010-12-15 \u2013 Release 2.18\n\n    \n\nDownload | Changelog\n\nThis release fixes a checksum error caused by the atkmm project (a sudden\nchange of their current source tarball). That sort of thing should never\nhappen!\n\n2010-12-11 \u2013 Release 2.17\n\n    \n\nDownload | Changelog\n\nThis release provides some improvements of the build system such as an\nautomatic check for most of the requirements.\n\nAll packages are updated to their latest version.\n\nNew packages are supported: bfd, blas, cblas, dcmtk, ftgl, lapack, lcms1,\nmingw-utils, mxml, suitesparse and tinyxml.\n\n2010-10-27 \u2013 Release 2.16\n\n    \n\nDownload | Changelog\n\nThis release provides lots of improvements to the build system as well as the\ndocumentation.\n\nSupport for OpenSolaris is dropped.\n\nAlmost all packages are updated to their latest version.\n\nMany new packages are supported: atkmm, cairomm, cunit, faac, faad2, ffmpeg,\ngdk-pixbuf, glibmm, gtkglextmm, gtkmm, gtksourceview, gtksourceviewmm,\nimagemagick, lame, libiberty, libsigc++, libvpx, matio, openal, opencore-amr,\npangomm, pfstools, plotmm, sdl_sound and x264.\n\n2010-06-16 \u2013 Release 2.15\n\n    \n\nDownload | Changelog\n\nThis release fixes download errors caused by the Qt project (a sudden change\nof their current source tarball).\n\nAlmost all packages are updated to their latest version.\n\n2010-06-08 \u2013 Release 2.14\n\n    \n\nDownload | Changelog\n\nThis release fixes download errors caused by the MinGW project (a sudden\nchange of their URL scheme without proper redirects). That sort of thing\nshould never happen!\n\nAlmost all packages are updated to their latest version.\n\nNew packages are supported: libarchive, libgee and xvidcore.\n\n2010-05-31 \u2013 Release 2.13\n\n    \n\nDownload | Changelog\n\nThis release switches back from TDM to the official GCC, thus supporting the\ncurrent GCC 4.5.\n\nThe set of DirectX headers is improved and more complete.\n\nThe deadlock issues with Pthreads-w32 are fixed.\n\nA static build of GDB is provided, i.e. a standalone \"gdb.exe\" that doesn't\nrequire any extra DLLs.\n\nMore packages are backed by test programs.\n\nMany \"sed hacks\" are replaced by proper portability patches.\n\nAlmost all packages are updated to their latest version.\n\nMany new packages are supported: fribidi, gc, gdb, gmp, gsl, gst-plugins-base,\ngst-plugins-good, gstreamer, gtkglext, guile, libcroco, libffi, liboil,\nlibpaper, libshout, libunistring and xine-lib.\n\n2010-02-21 \u2013 Release 2.12\n\n    \n\nDownload | Changelog\n\nThis release fixes some minor build issues, and contains a first small set of\ntest programs to check the package builds.\n\nThe build rules are simplified by calling generators like Autotools and Flex,\ninstead of patching the generated files.\n\nAlmost all packages are updated to their latest version.\n\nMany new packages are supported: aubio, devil, directx, exiv2, fftw,\nfreeimage, gsoap, id3lib, liblo, libpano13, librsvg, libsamplerate, muparser,\nopenscenegraph, portaudio and sdl_pango.\n\n2010-02-20 \u2013 Release 2.11\n\n    \n\nDownload | Changelog\n\nThis release contains a packaging bug. Please use release 2.12 instead.\n\n2009-12-23 \u2013 Release 2.10\n\n    \n\nDownload | Changelog\n\nThis release adds support for many new packages: flac, libmad, libsndfile,\nsdl_net, speex, postgresql, freetds, openssl, plotutils, taglib, lcms,\nfreeglut, xerces and zziplib.\n\nAlmost all packages are updated to their latest version.\n\nIn addition to the libraries some command line tools such as psql.exe are\nbuilt, too.\n\nThe placements of logfiles, as well as many other build details, have been\nimproved.\n\n2009-10-24 \u2013 Release 2.9\n\n    \n\nDownload | Changelog\n\nThis release adds support for Qt, VMime and libmng.\n\nThe target triplet is updated to i686-pc-mingw32.\n\nOpenMP support is enabled in GCC.\n\nAlmost all packages are updated to their latest version.\n\n2009-09-11 \u2013 Release 2.8\n\n    \n\nDownload | Changelog\n\nThis release comes with a better look & feel by providing a highlevel overview\nof the build process.\n\nThe detailed build messages are stored into separate log files for each\npackage, so parallel builds don't intermix them anymore.\n\nThe download URLs of SourceForge packages are adjusted to ensure that the\nselected SourceForge mirror is really used and not circumvalented via HTTP\nredirects to other mirrors.\n\nAlmost all packages are updated to their latest version.\n\nThe whole mingw-cross-env project has moved to Savannah. So all URIs have\nchanged, but the old URIs redirect to the new locations seamlessly.\n\nEveryone is invited to join the freshly created project mailing list.\n\n2009-08-11 \u2013 Release 2.7\n\n    \n\nDownload | Changelog\n\nThis release provides an improved version recognition for SourceForge\npackages. SourceForge changed their page layout in a way that makes it much\nharder to identify the current version of a package.\n\nAdditionally, almost all packages are updated to their latest version.\n\n2009-06-19 \u2013 Release 2.6\n\n    \n\nDownload | Changelog\n\nThis release contains some portability fixes which allow it to run on a wider\nrange of systems such as Frugalware.\n\nThe documentation and website are completely revised.\n\nNew packages such as CppUnit, libUsb, NSIS, Popt, SQLite and Theora are\nsupported.\n\nAlmost all packages are updated to their latest version.\n\nA new command \"make download\" is implemented.\n\n2009-04-06 \u2013 Release 2.5\n\n    \n\nDownload | Changelog\n\nThis release fixes a download error caused by the MinGW project. They suddenly\nchanged the names of their source tarballs. That sort of thing should never\nhappen!\n\nThis release also contains some bugfixes which allow it to run on a wider\nrange of systems.\n\nAll downloaded files are now verified by their SHA-1 checksums.\n\nNew versions of various packages are supported.\n\n2009-03-08 \u2013 Release 2.4\n\n    \n\nDownload | Changelog\n\nThis release provides many new libraries such as wxWidgets, GTK+ and OpenEXR.\n\nIn addition, new versions of various packages are supported.\n\n2009-02-09 \u2013 Release 2.3\n\n    \n\nDownload | Changelog\n\nThis release fixes some serious build problems on FreeBSD and MacOS-X.\n\nThe Makefile has a new target \"clean-pkg\" and allows to be called from a\nseparate build directory via \"make -f .../Makefile\".\n\nSome new versions of the packages are supported, especially GCC-4.3 by\nswitching from MinGW GCC to TDM-GCC.\n\n2009-01-31 \u2013 Release 2.2\n\n    \n\nDownload | Changelog\n\nThis release fixes some minor build problems.\n\nIt also supports some new packages and some newer versions of the already\nsupported packages.\n\nParallelization is now disabled by default.\n\n2008-12-13 \u2013 Release 2.1\n\n    \n\nDownload | Changelog\n\nThis release fixes a download error caused by the GDAL project. They suddenly\nchanged their download URLs. That sort of thing should never happen!\n\nIn addition, some newer versions of various packages are supported.\n\nThere is also a small compatibility fix for OS X.\n\n2008-11-10 \u2013 Release 2.0\n\n    \n\nDownload | Changelog\n\nThe shell script has been rewritten as Makefile and supports partial builds\nand parallel builds.\n\nAs usual, this release also supports some new packages and some newer versions\nof the already supported packages.\n\n2008-01-11 \u2013 Release 1.4\n\n    \n\nDownload | Changelog\n\nThis release now includes a tutorial by Hans Bezemer and has improved compile\noptions of FLTK. As usual, it supports some newer versions of the libraries.\n\nAt the request of its author, libowfat is no longer supported from this\nrelease on.\n\nThe script now uses a specific SourceForge mirror instead of randomly chosen\nones, because the download phase often stumbled on some very slow mirrors.\n\n2007-12-23 \u2013 Release 1.3\n\n    \n\nDownload | Changelog\n\nA sudden change in the download URLs of GEOS made the automatic download fail.\nSuch changes should never happen! But it happened, and this quick release is\nan attempt to limit the damage.\n\nThis release also supports some newer versions of the libraries including\nsupport for fontconfig-2.5.0.\n\n2007-12-13 \u2013 Release 1.2\n\n    \n\nDownload | Changelog\n\nThis release is a switch from gcc-3 to gcc-4. It also supports a new library\nand some newer versions of the already supported libraries.\n\n2007-07-24 \u2013 Release 1.1\n\n    \n\nDownload | Changelog\n\nThis release is the result of the public attention the release 1.0 got. It\ncontains many improvements suggested by its first users, and adds support for\nmany new libraries.\n\nThanks to Rocco Rutte who contributed many code snippets.\n\n2007-06-19 \u2013 Release 1.0\n\n    \n\nDownload | Changelog\n\nThis first release has been created in a 7-day-sprint.\n\n2007-06-12 \u2013 Project start\n\n## See also\n\n### This project\n\n  * Website\n  * Project on GitHub\n  * Binary distribution of packages\n  * Entry on Open Hub\n  * Entry on Savannah\n  * First release announcement and the discussion around it\n\n### Related articles\n\n  * Cross-compiling Krita using MXE Experience report of the Krita project\n  * Cross compilers, the new wave Appeared on LXer and Linux Today\n  * MinGW cross compiler for Linux build environment Official tutorial of the MinGW project\n  * Cross-compiling under Linux for MS Windows Old tutorial provided by the wxWidgets project\n\n### Related projects\n\n  * Arch Linux mingw-w64 packages Win32 cross compiling packages by Arch Linux\n  * Debian mingw32 package Bare win32 cross compiler\n  * Fedora MinGW packages Win32 cross compiling packages by Fedora\n  * MSYS2 Win32/64 ports of many free software packages\n  * GnuWin32 Win32 ports of many free software packages\n  * IMCROSS Another project with similar goal\n  * MinGW cross-compiler build script Old script provided by the SDL project\n  * mxe-octave Fork of MXE specialized on building GNU Octave\n  * openSUSE MinGW packages Win32 cross compiling packages by openSUSE\n  * Win-builds Creates binary packages, runs on both Linux and Windows\n\n## Projects which use MXE (alphabetical order)\n\n  * Aorta\n  * Battleship game\n  * Bino\n  * BioSig\n  * Cataclysm: Dark Days Ahead\n  * cvtool\n  * DiffPDF\n  * digiKam\n  * Domino-Chain\n  * Dust Racing 2D\n  * EiskaltDC++\n  * Emu64\n  * Eros\n  * Galois\n  * GCompris\n  * Generic Tagged Arrays\n  * GNU FreeDink\n  * Heimer\n  * Hugor\n  * Krita\n  * Libretro/RetroArch\n  * Lightspark\n  * Marathon Aleph One\n  * Mechanized Assault and eXploration Reloaded\n  * MKVToolNix\n  * mpop\n  * msmtp\n  * OpenSCAD\n  * Pdfgrep\n  * PokerTH\n  * Psi+\n  * QElectroTech\n  * QTads\n  * R\n  * ScummVM\n  * Sibuserv\n  * sigrok\n  * Spek\n  * Spring RTS\n  * Strawberry Music Player\n  * Subsurface\n  * Taisei Project\n  * The 4tH Compiler\n  * TeXworks\n  * Tower Toppler\n  * Tux Typing\n  * Tux Math\n  * Ube\n  * UFO: Alien Invasion\n  * VCMI Engine\n  * Violetland\n  * Warzone 2100\n  * wkhtmltopdf\n  * xfemm\n\n", "frontpage": false}
