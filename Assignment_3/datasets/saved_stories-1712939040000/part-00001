{"aid": "40011049", "title": "The Internet Has Changed", "url": "https://fhur.me/posts/2024/the-internet-has-changed", "domain": "fhur.me", "votes": 2, "user": "fernandohur", "posted_at": "2024-04-12 10:22:24", "comments": 0, "source_title": "fhur", "source_text": "The internet has changed\n\n# The internet has changed\n\nFri Apr 12 2024 \u2022 programming\n\nBack\n\n## The internet has changed\n\nI don't know exactly when I started getting this feeling, but I feel it very\nstrongly now. I was born in '91 and began programming at the ripe age of 12,\ngot my first job around 2013.\n\nProgramming was exciting. Everything was yet to be built. There were very few\ndevtool companies at the time. I remember the day that Mixpanel launched, I\nremember Cloudflare being a startup, I remember writing CSS by hand, and\nofcourse I will always remember writing jQuery.\n\nI recall saying \"I'm gonna SSH into the prod box.\" Even now, I think that's\none of the coolest things a programmer can say.\n\nBut the internet has changed. And I don't mean the proliferation of social\nnetworks, or the degradation of Google's search results. None of that. I mean\nthat being a software engineer is now a completely different thing. Building\nfor the internet has changed.\n\nSo what changed? IMO these past 15 years have seen the rise of developer\ntooling with a very strong focus on DX, widespread and cheap access to\nexcellent learning material, and no-code tools. And let's not forget AI\ncopilots and other forms of code generation products.\n\nLet's face it. Programming is getting easier. And that's a good thing. It's\nalso nothing new.\n\nMy father was a FORTRAN programmer. He didn't have Fast Refresh or LiveReload,\nnah... he had to carry a big ol' stack of punchcards, wait in line and then\nscream at the universe after getting his results the next day when realising\nhis program had ran out of memory, or accidentally punched the wrong hole, or\nthe computer just crashed.\n\nBack when I was in uni, \"mobile development\" was starting to be a thing. I was\ndeveloping an Android app for one of the first Android versions. My workflow\nwas literally write code, generate .apk, upload the .apk to Gmail, send myself\nan email, then open the Gmail app on my mobile, download the apk, test\nchanges. Oh, and then scream at the universe when realising my program had ran\nout of memory or whatever [1][2].\n\n## What's next?\n\nToday I wrote a ticket at my job, a relatively straightforward, self contained\nticket. I was going to assigning it to a junior dev, so I took extra time and\ncare to spec out all the important details. It probably took me around 40m in\ntotal.\n\nRight before I hit the send button, a thought popped inside my head. \"Why\ndon't I just pass this ticket as-is to my AI copilot?\". Well, It did the job.\nIt had one small bug which I was able to fix really quickly. Implementing this\nby hand would have probably taken me 3-4 hours.\n\nI don't know what the next 10 years will be like, but I have a feeling they\nare going to be very different, and very exciting.\n\n[1]: To be fair, this was also my fault in the sense that I didn't learn about\nadb until way later. But my point is that even if a better workflow was\npossible, the resources just weren't there. There wasn't a magical \"play\"\nbutton in Eclipse that would just run my changes on the phone.\n\n[2]: I'm almost ashamed of saying this but I remember literally running around\ncampus just to \"e2e test\" the GPS-powered app I was building at the time.\nThere was, to my knowledge, no way to send mock GPS signals to an Android\ndevice.\n\nIf you liked this article, follow me on twitter. I write about once a month\nabout software engineering practices and programming in general.\n\n## Other posts you may like...\n\n### Knowledge is like a house of cards\n\nOn the importance of building solid foundations. Read more.\n\n### Why read Dostoevsky? A programmer's perspective\n\nOn the limits of scientific knowledge and the importance of reading the\nclassics. Read more.\n\n### Always use [closed, open) intervals\n\nA short note on the dangers of using [closed, closed] intervals. Read more.\n\n2024 \u00a9 Fernando Hurtado Cardenas.RSS\n\n", "frontpage": false}
