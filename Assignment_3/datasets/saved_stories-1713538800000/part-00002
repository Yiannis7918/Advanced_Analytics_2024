{"aid": "40084641", "title": "How do electronic passports work?", "url": "https://blog.burakcankus.com/2024/04/18/how-do-electronic-passports-work.html", "domain": "burakcankus.com", "votes": 1, "user": "Fethbita", "posted_at": "2024-04-19 08:58:32", "comments": 0, "source_title": "How do electronic passports work?", "source_text": "How do electronic passports work? | Burak Can's Blog\n\n# How do electronic passports work?\n\nApr 18, 2024\n\nIn this post I will try to explain how electronic passports work, how to read\nfiles from them and how to verify the authenticity of the chips inside them.\nHopefully it will provide an entry point for those who have not tinkered with\nsmart cards in the past.\n\nFirst we start with introductions and history.\n\n# History\n\nAn identity document is a document that proves the identity of a person. These\ndocuments can be identity cards, passports, or other types of documents.\nMachine Readable Travel Documents (MRTDs) are official documents issued by a\nState^[1] or an organization and are used for travel. They were introduced by\nthe International Civil Aviation Organization (ICAO) to increase the clearance\nspeed of passengers through passport control points^[2].\n\nThe ICAO specifies three different sized MRTDs. These are Size 1 Machine\nReadable Official Travel Documents (TD1), Size 2 Machine Readable Official\nTravel Documents (TD2), and Size 3 Machine Readable Travel Documents\n(TD3)^[2]. TD1 and TD2 size documents are usually in the form of a card, and\nTD3 size documents are usually passport books that contain pages^[2]. All\nthree sized MRTDs contain two mandatory zones. The first one is the Visual\nInspection Zone (VIZ), which includes information about the document holder\nand is eye-readable^[2]. The other zone is the Machine Readable Zone (MRZ)\nwhich summarizes the information contained in VIZ. TD1, TD2 and TD3 size\ndocuments and their VIZ and MRZ can be seen in figures below.\n\nVIZ\n\nFront side of a TD1 size MRTD (not to scale).^[3]\n\nVIZ\n\nMRZ\n\nReverse side of a TD1 size MRTD (not to scale).^[3]\n\nVIZ\n\nMRZ\n\nLayout of a TD2 Size MRTD (not to scale).^[4]\n\nVIZ\n\nMRZ\n\nLayout of a TD3 Size MRTD (Machine Readable Passport) (not to scale).^[5]\n\nIn addition, MRZ includes a check digit for data elements such as the document\nnumber, date of birth, and date of expiry. The check digits depend on the\nvalues of these data elements and determine if the MRZ is scanned correctly. A\nfinal check is calculated on the earlier mentioned information with their\ncheck digits included and optional data elements and is placed at the end of\nthe MRZ for TD2 and TD3 size documents and at the end of the second line for\nTD1 size documents. For example, the information in a TD1 size document MRZ is\nshown below (hover over the elements for more information).\n\nI< UTO D23145890 7 <<<<<<<<<<<<<<<\n\n740812 2 F 120415 9 UTO <<<<<<<<<<< 6\n\nERIKSSON<<ANNA<MARIA<<<<<<<<<<\n\nElectronic Machine Readable Travel Documents (eMRTDs) are Machine Readable\nTravel Documents (MRTDs) that contain an embedded contactless smart card chip.\nIn 1980, ICAO published the first edition of Document Series 9303 (Doc 9303)\nto standardize MRTDs^[2]. In 2006, the technical reports for eMRTDs were\nincorporated into Doc 9303 to create an effective biometric identification\nsystem^[2]. Even though Doc 9303 does not standardize national identity\ndocuments, many countries already issue identity cards or residence permit\ncards with eMRTD applets.\n\nThe specifications for eMRTDs contain information about the Logical Data\nStructure (LDS), which describe how the data are stored and formatted in the\ncontactless smart card chip and the Public Key Infrastructure (PKI) used by\neMRTDs. Currently, ICAO Doc 9303 part 10^[6] contains the specifications\nregarding the LDS, and ICAO Doc 9303 part 12^[7] contains the specifications\nregarding the PKI.\n\n# eMRTD Files\n\nThe LDS contains the data printed on the eMRTD and some other extra data to\nprove the authenticity of the chip. There are files from EF.DG1 to EF.DG16,\nEF.SOD and 4 other files^[6]. These files contain facial image(s), MRZ data,\nand can optionally contain fingerprints, iris scans, displayed portraits,\ndisplayed signature, additional personal details, additional document details,\noptional details, security options, public keys used for security methods, and\nname and contact details of the person(s) to notify.\n\neMRTDs contain four required files and might contain other optional files. The\nfirst one is EF.COM which contains the LDS version, the Unicode version, and a\nlist of files present on the document. Next are two files called EF.DG1 and\nEF.DG2. The file EF.DG1 stores the same information on the MRZ, and the file\nEF.DG2 stores facial image(s). The last required file is the EF.SOD. This file\ncontains the Document Security Object (SO_D), which store the digests^[8] of\nfiles included in the contactless smart card chips in eMRTDs. It is important\nto note that the digest of the EF.COM file is not included in the SO_D^[9].\nThe SO_D is also signed, this signature is explained in detail in the next\nsection.\n\nThese files and other optional files are placed in the documents during the\npersonalization phase. After the personalization of a document, the chip has\nto be locked, and this means that no further change can be made in these\nfiles; no data can be written, modified, or deleted, and a locked chip cannot\nbe unlocked^[10].\n\n# eMRTD PKI\n\nIn the PKI used for eMRTDs, a single Certificate Authority called Country\nSigning Certification Authority (CSCA) is run by each State, and it issues the\ncertificates for that State. CSCAs have self-signed root CSCA Certificates\n(C_CSCAs) that issue the so-called Document Signer Certificates (C_DSs). The\nrecommended maximum usage period for C_CSCAs is 3-5 years and for C_DSs it is\n3 months or after signing 150 000 travel documents, whichever is\nsooner^[7]^[11].\n\nThe C_DSs sign the SO_D for each document issued by that State. The signed\nSO_Ds store the digests of files included in the contactless smart card chips\nin eMRTDs, in a file called EF.SOD as explained in the previous section. This\nfile is used in the mandatory baseline security method \u201cpassive\nauthentication.\u201d\n\n# eMRTD Security Methods\n\neMRTDs contain a mandatory baseline security method called Passive\nAuthentication and might also contain other advanced security methods ^[12].\n\n## Passive Authentication\n\nIn eMRTDs, data stored in the files from EF.DG1 to EF.DG16 are protected from\nmodification by a mandatory security method called Passive Authentication\n(PA). Passive Authentication protects the contents of documents from changes\nand ensures the authenticity of data; however, it does not prevent exact\ncopies of the documents. Therefore, other security methods such as Active\nAuthentication and Chip Authentication should be used to prevent the cloning\nof eMRTD chips. Passive Authentication used to be the only required security\nmethod used in eMRTDs until ICAO Doc 9303 7th edition; however, with the ICAO\nDoc 9303 8th edition, access control is also mandatory.\n\nPassive Authentication uses a PKI to verify the authenticity of the data\nstored in the eMRTD chip. The specifications for this PKI are in ICAO Doc 9303\npart 12^[7]. In addition to the certificates introduced above (C_CSCA and\nC_DS), this PKI also includes other types of certificates, such as:\n\n  * Master List Signer Certificate (C_MS), which is used to sign a Master List (ML) that contains the C_CSCAs that are \u201ctrusted\u201d by the issuing State;\n  * Deviation List Signer Certificate (C_DLS), which is used to issue Deviation Lists (DLs). DLs describe a set of documents with defects; but, it does not apply to individual documents or a small number of documents. In such cases where a small number of documents are defective, the issuing State should recall these documents through other means. DL is issued for thousands of documents if they are all defective, and\n  * Certificate Revocation Lists (CRLs) are used to revoke any certificate issued by the CSCA. Only the latest C_CSCA can issue CRLs, and these CRLs also include the certificates issued by older C_CSCAs. This makes the PKI simpler.\n  * LDS2 Signer Certificates, namely LDS2 Travel Stamp Signer Certificate (C_LDS2-TS), LDS2 Electronic Visa Signer Certificate (C_LDS2-V) and LDS2 Additional Biometrics Signer Certificate (C_LDS2-B). I touch upon these briefly towards the end of this post under Terminal Authentication section.\n  * Bar Code Signer Certificates (C_BCS) and Bar Code Signer for non-constrained environments certificate (C_BCS-NC), which are used to sign the data encoded in the bar code which stores the signature together with the data. ICAO Doc 9303 Part 13 ^[13] goes into detail about the Bar Code usage within eMRTDs. ICAO Doc 9303 Part 12^[7] specifies two use cases for C_BCS usage, Visas and Emergency Travel Documents.\n\nICAO Public Key Directory (PKD) is a PKD that allows States to distribute\nnecessary objects for eMRTD PKI. These include C_CSCAs, C_DSs, CRLs, C_MSs,\nand MLs, C_DLSs, and DLs, C_BCSs and C_BCS-NCs. Participation in ICAO PKD\nrequires a registration fee and an annual fee. As more countries participate\nin the ICAO PKD, the price of these fees goes down. As of 2023, the\nregistration fee is 15 900 USD, and the annual fee is 23 745.45 USD^[14]. The\ndownside of not being a participant of ICAO PKD is to do bilateral agreements\non a country-to-country basis. As of February 2024, ICAO PKD has 95 member\nStates^[15].\n\nP.S. Downloading the Master Lists can be done through the State\u2019s own websites\nor through ICAO PKD. The following URLS that are related:\n\n  * \u201cThe ICAO Master List and ICAO Health Master List\u201d which lets anyone that accept the Terms & Conditions to download the ICAO Master Lists in addition to an ML Explorer software to view and extract certificates from ICAO Master Lists,\n  * \u201cICAO PKD (Public Key Directory) data download\u201d which lets anyone that accept the Terms & Contitions to download CSCA Master Lists, CRLs, Non Conformant eMRTD PKI objects, CDSs, CBCSs and CBCS-NCs.\n  * \u201cGerman Master List\u201d issued by the BSI.\n\n## Chip Access Control\n\nWhen eMRTDs first was introduced, the chips could be directly read. This let\nan attacker execute two types of attacks. First, they can read the files\ninside the document just by being nearby, and this type of attack is called\nskimming, and also, they can eavesdrop on the communication between the chip\nand an inspection system. This security feature prevents skimming and\neavesdropping by requiring information printed on the document from the\ninspection system to create an encrypted Secure Messaging (SM) channel for\ncommunication between the chip and the inspection system. Until the ICAO Doc\n9303 7th edition, the specifications used to allow chips that would not\nimplement any access control, but since 8th edition (2021), chips that do not\nimplement any access control are not allowed. The SM channel is created by\nestablishing two session keys and a Send Sequence Counter (SSC). The first\nsession key, Encryption Session Key (KS_ENC), is used to encrypt and decrypt\nthe Application Protocol Data Unit (APDU) sent between the chip and the\ninspection system, and the second session key, MAC Session Key (KS_MAC), is\nused to calculate the Message Authentication Code (MAC) of the APDU. The\npurpose of the MAC is to verify the integrity and the authenticity of the\nreceived APDU. The SSC is a counter that is incremented each time an APDU is\nsent and is used to prevent APDU reordering and replay attacks. For eMRTDs,\nthere are two access control methods described below.\n\n### Basic Access Control (BAC)\n\nBAC is used to create two session keys from the information taken from the MRZ\nusing symmetric-key cryptography^[16]. However, since symmetric-key\ncryptography is used to derive the session keys, the entropy of the created\nkeys depends on the input length. As for the input, all three inputs have\nshortcomings. For example, the document numbers are generally sequential, the\ndate of expiry can be assumed at most ten years, and the date of birth can be\nestimated or assumed less than a hundred years. This makes the entropy of the\nsession keys low by today\u2019s standards^[17], and under certain circumstances,\nthese encrypted channels are shown to be cracked in under 30 seconds^[18].\n\n### Password Authenticated Connection Establishment (PACE)\n\nPACE was introduced in 2006 by German Federal Office for Information Security\n(BSI) to overcome the shortcomings of BAC^[19]. PACE uses public-key\ncryptography to derive the session keys, and the entropy of the session keys\ndoes not depend on the input password. Therefore, for the PACE protocol, a\nsix-digit number called Card Access Number (CAN) can be printed on the\ndocument and used as a password to establish an SM channel with the eMRTD. An\nexample of this number is shown below on an Estonian residence permit card\nsample. In 2011, it was decided that by December 31, 2014, all European Union\nMember States have to implement PACE in their electronic passports^[20];\nhowever, for global interoperability, States should not implement PACE without\nimplementing BAC until December 31, 2017^[21]. The States may choose only to\nimplement PACE in the eMRTDs they issue starting from January 1, 2018^[21].\n\nCAN\n\nAn Estonian residence permit card sample issued from 2020-10-01^[22]\n\n## Authentication of Data (Clone Detection)\n\nThere are two security methods that prevent cloning of the eMRTD chip, these\nare Active Authentication (AA) and Chip Authentication (CA). For both Active\nAuthentication and Chip Authentication, a private key file resides in the\neMRTD chip. However, these private keys are protected and cannot be extracted\nor retrieved from the chip but are used internally to prove that the chip is\nnot cloned.\n\n### Active Authentication (AA)\n\nFor Active Authentication, the inspection system first reads the file EF.DG15\nand extracts the public key corresponding to the private key in the chip.\nThen, if Elliptic-Curve Digital Signature Algorithm (ECDSA) based Active\nAuthentication is used, it conditionally reads the file EF.DG14. The\nauthenticity of the information in these files is provided by the signed\ndigest value of these files. Next, the inspection system sends a challenge to\nthe chip, and the chip creates the signature of this challenge using its\nprivate key. This signature is then sent back to the inspection system, and\nthe inspection system verifies that the chip\u2019s private key created the\nsignature. Some countries, such as Turkey and Germany, do not support Active\nAuthentication in their passports because of challenge semantics. Challenge\nsemantics means that an inspection system could send short messages to the\nchip such as the current time and location and track the document holder\n^[23].\n\nIf the digest of EF.DG15 is listed in the SO_D, it signals that Active\nAuthentication is supported. The EF.DG15 file contains Active Authentication\npublic key. For Active Authentication, the chip, using the corresponding\nprivate key, signs a challenge sent by the inspection system. The inspection\nsystem can later verify this signature using the Active Authentication public\nkey. Since the Active Authentication public key is in EF.DG15 and this file is\nprotected by Passive Authentication, the public key cannot be tampered with.\nIf the chip uses ECDSA-based Active Authentication, the\nActiveAuthenticationInfo SecurityInfo structure must be present in EF.DG14 and\nbe used for Active Authentication. This entry contains the Object Identifier\n(OID) of the hashing algorithm used for the Active Authentication. However, if\nthe document uses RSA-based Active Authentication, the hashing algorithm used\nis found from the trailer bytes attached in the response.\n\n### Chip Authentication (CA)\n\nChip Authentication uses Diffie\u2013Hellman Key Exchange (DH) protocol to create\nnew session keys and verify that the chip is not cloned. Therefore Chip\nAuthentication is not vulnerable to this type of attack.\n\nIf the digests of the EF.DG14 file exist in the SO_D, it might contain\nSecurityInfos structures that might mean that the Chip Authentication\nmechanism is supported. If present, the Chip Authentication public key (and\noptionally elliptic curve domain parameters) are read. The chip might support\nmore than one algorithm for Chip Authentication, and in these cases, the\ninspection system is free to choose any of the supported. Next, the inspection\nsystem creates an ephemeral public key pair in the same domain as the Chip\nAuthentication public key and sends this key to the chip. If the card can\nsuccessfully calculate the shared secret using the key agreement algorithm (DH\nor Elliptic-Curve Diffie\u2013Hellman) and use this shared secret to compute new\nsession keys, an OK reply is returned. From here onwards, the new session keys\nare used. To prove that the Chip Authentication public key is authentic and\nunchanged, Passive Authentication must be used. As a result of this process,\nthe inspection system can ensure that the chip is not cloned. It also provides\nstrong Session Keys (KS_ENC and KS_MAC).\n\n## Additional Security Mechanisms\n\nIn addition to the security mechanisms mentioned above, there are three more\noptions provided to the States if they so choose to utilize them. These are:\n\n### Comparison of Scanned MRZ and MRZ read from EF.DG1\n\nThis security method proves that the chip and the physical document belong\ntogether however it does not prevent cloning.\n\n### Terminal Authentication (TA)\n\nTerminal Authentication is a security method that protects sensitive data from\nunauthorized access. In the context of eMRTDs, the sensitive data is defined\nas the fingerprint and iris data stored in EF.DG3 and EF.DG4 files,\nrespectively^[2]. However, this security method requires a new PKI, namely,\nthe Authorization PKI ^[7]. In this PKI, the States have a Country Verifying\nCertification Authority (CVCA). This CVCA issues a Self-Signed CVCA\nCertificate (C_CVCA) that in turn issues Document Verifier Certificates\n(C_DVs) for other States. The C_DVs issue certificates for inspection systems\nof this State, and these inspection systems can obtain access to sensitive\ndata by first sending the certificate chain that begins with the C_CVCA public\nkey stored in the chip and ends with the certificate issued for the inspection\nsystem to the chip, and next by signing the challenge sent back by the chip\nusing the certificate issued for itself.\n\n### Encryption of Additional Biometrics\n\nOne last mechanism is to encrypt the additional biometrics stored within the\nchips. This mechanism is out of scope of the ICAO Doc9303 and is left to the\nStates to implement themselves. The decryption keys must be loaded into the\nInspection Systems and shared with bilateral agreements with other States if\nnecessary.\n\nIf you want to learn more about the technical details about some of the\nprotocols specified here, read on to the second part of this blog post.\n\n### Footnotes:\n\n[1]: ^ Throughout this work, the capitalized word State refers to countries.\n\n[2]: ^a ^b ^c ^d ^e ^f ^g ICAO Doc 9303 Part 1\n\n[3]: ^a ^b ICAO Doc 9303 Part 5\n\n[4]: ^ ICAO Doc 9303 Part 6\n\n[5]: ^ ICAO Doc 9303 Part 4\n\n[6]: ^a ^b ICAO Doc 9303 Part 10\n\n[7]: ^a ^b ^c ^d ^e ICAO Doc 9303 Part 12\n\n[8]: ^ Cryptographic Hash Function - Wikipedia\n\n[9]: ^ This incidentally means that the EF.COM file can not be trusted as it\ncould have been modified.\n\n[10]: ^ ICAO Doc 9303 Part 9\n\n[11]: ^ ICAO Document Signer\n\n[12]: ^ For a nice table explaining the security methods, see ICAO Doc 9303\nPart 11 Section 3.\n\n[13]: ^ ICAO Doc 9303 Part 13\n\n[14]: ^ PKD Fee Schedule 2023\n\n[15]: ^ ICAO PKD Participants\n\n[16]: ^ For more information about the MRZ entropy, see ICAO Doc 9303 Part 11\nAppendix A\n\n[17]: ^ Supplemental Access Control for Machine Readable Travel Documents\n\n[18]: ^ Y. Liu, T. Kasper, K. Lemke-Rust, and C. Paar, \u201cE-Passport: Cracking\nBasic Access Control Keys\u201d\n\n[19]: ^ BSI, \u201cAdvanced Security Mechanisms for Machine Readable Travel\nDocuments and eIDAS Token - Part 1 - eMRTDs with BAC/PACEv2 and EACv1\u201d\n\n[20]: ^ European Commission, \u201cCommission Decision C(2011) 5499 amending\nCommission Decision C(2006) 2909 laying down the technical specifications on\nthe standards for security features and biometrics in passports and travel\ndocuments issued by Member States\u201d\n\n[21]: ^a ^b ICAO Doc 9303 Part 11\n\n[22]: ^ Estonian Police and Border Guard Board. 2020 - Residence Permit Card\nSample\n\n[23]: ^ For more information about the MRZ entropy, see ICAO Doc 9303 Part 11\nAppendix C\n\n\u00a9 Burak Can Kus 2024. All rights reserved.\n\n", "frontpage": false}
