{"aid": "40027815", "title": "HF Packet Radio AX.25 vs. FX.25 Comparison Test (2023)", "url": "http://wa8lmf.net/APRS-AX.25-FX.25/index.htm", "domain": "wa8lmf.net", "votes": 2, "user": "Lammy", "posted_at": "2024-04-14 01:13:57", "comments": 0, "source_title": "AX.25 vs FX.25 Tests", "source_text": "AX.25 vs FX.25 Tests\n\nWA8LMF Home Page | WA8LMF Resume | Main APRS Page | HF APRS Operation | Updated 24 September 2023  \n---  \n  \n# HF Packet Radio AX.25 vs FX.25 Comparison Test\n\n### INTRODUCTION\n\nThis test was conducted to compare the relative performance of traditional\nAX.25 packet with the enhanced form known as \"FX.25\".\n\nNormal AX.25 packet radio data transmission has no form of error recovery.\nWhen a packet is received, a 16-bit CRC check is done at the receiving end.\nThis check determines if the packet contains data errors introduced by noise\nand interference in the radio transmission process.\n\nIf the packet does have error(s), the receiving system discards the entire\npacket. If the receiving station is \"connected\" with the transmitting station\nin a two-way relationship, the receiving station can send a request for re-\ntransmission of the entire data packet to the sending station.\n\nAPRS use of packet data normally is a one-way one-to-many broadcast mode of\ntransmission. The receiving station(s) normally do not transmit back to the\nsender. They can only ignore a defective received packet, with no way to \"fix\"\nit.\n\nFX.25 is a recent addition to the AX.25 protocol. It adds a block of error-\ncorrecting code to the basic AX.25 packet that allows the receiving station to\nrepair defective packets WITHOUT having to ask the sending station to retry\nsending the data. For the enhancement to work, both the sending and receiving\nstations need to able to encode/decode the enhanced packet. If the receiving\nstation does not support FX.25, the packet will be decoded as a normal AX.25\npacket, with no way to fix errors.\n\nNormal AX.25 packet data works quite well on VHF/FM channels that are mostly\nnoise-free. AX.25 packet transmission has always been a terrible mode for HF\ntransmission. HF radio channels almost always have noise, static crashes, pops\nof noise from electrical devices, selective fading, multi-path distortion,\netc. The error rate is much higher than on VHF. Stations often have to resend\nthe same packet several times before the receiving station receives it\nsuccessfully. In one-way broadcast transmissions like APRS, the \"loss rate\" of\ntransmitted packets is far higher than on VHF/FM.\n\n### BACKGROUND & TEST SETUP\n\nThis over-the-air experiment was conducted to determine how much more reliable\nFX.25 transmission was compared to traditional AX.25.\n\nAt least two software-based sound card \"soft TNCs\" now have the ability to\nencode and decode the enhanced FX.25 packet format: The \"UZ7HO Soundmodem\" and\n\"DireWolf\".\n\n  * The Soundmodem is a strictly Windows-based application with a nice graphical interface, a received-data monitor screen, and a waterfall display. Most common settings in the Soundmodem can be made through it's graphical interface. More options are available by editing an extensive configuration file \"soundmodem.ini\".\n  * DireWolf is a command-line based-program that runs in the background with no visible display. It is available in versions for both Windows and Linux. Unlike the Soundmodem that depends on external applications, DireWolf can operate stand-alone as an APRS \"Igate\" (Internet gateway), packet digipeater, or APRS transmit-only \"tracker\" (reading data from a GPS receiver and formatting it for APRS transmission). It can also function as \"justs a modem\" linked to external applications. ALL settings are determined by editing it's configuration file with a text editor.\n\nThe receive setup was my usual 60-meter APRS igate setup using a Yaesu FT-891\nand the UZ7HO Soundmodem configured to auto-receive either classic AX.25\npackets or FX.25. The receive antenna is a pair of MFJ 60-meter \"hamsticks\"\nconfigured as a mini-dipole about 10 feet (3 meters) above the ground. This\nyields excellent high-angle (\"NVIS\") radiation, ideal for short-haul in-state\ncommunications at the lower HF frequencies.\n\n60-meters Ham Stick NVIS Mini-Dipole\n\nThe mobile transmit platform was my VW Jetta TDI diesel. I ran two instances\nof UIview linked to two instances of the UZ7HO Soundmodem on my Panasonic\nToughbook CF-51 mobile laptop. One UIview/Soundmodem pairing was beaconing\nAPRS posits as WA8LMF-2 on AX.25. The other was beaconing as WA8LMF-3 on\nFX.25. Both instances were coupled into the same home-brew tone-activated\nsoundcard interface. The interface fed the 6-pin mini-DIN data port of another\nYaesu FT-891 fed into another MFJ 60-meter ham stick mounted on the left-rear\nof the car with a Breedlove mini split-ball mount.\n\n### THE ACTUAL TESTS\n\nThe tests were conducted on 60 meters \"Channel 5\" (5403.5 MHz USB) during a\ndrive from East Lansing, MI to Berrien Springs, MI for a ham swapmeet. The\ndrive is about 180 miles (290 km) each way. The drive started on Friday\nafternoon at 3:30 local, meaning full daylight propagation on 60 meters. At\nthe mid-point of the trip, I stopped to spend the night at my sisters's farm\njust east of Kalamazoo, MI. The following Saturday morning, I resumed the\ntrip, departing at 5:00 AM local to reach the ham fest venue by 7:00 AM to\nsetup before the opening at 8:00 AM. This half of the trip was in darkness.\n\nMaps 1 &2 below show the tracks for the entire outbound trip- both Friday\nafternoon and early Saturday. They were captured from APRS.fi. Propagation\nfavored the Friday afternoon part of the drive. When I resumed Saturday\nmorning at 5:00 AM, 60M was dead (or the band was way too long for my home\nstation to hear my mobile). I started seeing the beacons on APRS.fi around\n8:00 AM - an hour after I arrived at the swapmeet site. Note that the points\ninside the Lansing-area freeway beltway are direct local ground-wave reception\n(not HF skywave). [The next two maps, 3 & 4, show the return trip.]\n\n1 - East Lansing to Berrien Springs Outbound - AX.25 WA8LMF-2 from APRS.fi\n\n2 - East Lansing to Berrien Springs Outbound - FX.25 WA8LMF-3 from APRS.fi\n\nAfter the ham fest ended around noon, I began the return trip entirely in\ndaylight, starting around 12:30 PM. I stopped at my sister's farm again for\nseveral hours starting about 2:30 PM before resuming again at 5 PM. I arrived\nhome about 7:15 PM Saturday evening.\n\nAt the time of my departure around mid-day, propagation was NOT favoring my\npath. Only one position report got through on AX.25 while several got through\non FX.25 before I reached the metro Kalamazoo area. Later in the afternoon,\nafter my layover at my sister's farm, propagation improved. Both modes showed\nmore successes, though FX.25 was always superior. The jog south to Portage was\nwhen I got off the Interstate in Kalamazoo for lunch and the cheapest diesel\nin Michigan.\n\n3 - Berrien Springs-to-East Lansing Return - AX.25\n\n4 - Berrien Springs-to-East Lansing Return - FX.25 WA8LMF-3 from APRS.fi\n\n### CONCLUSION\n\nWhile the FX.25 mode did produce more successful reports, the improvement was\nmodest. The optimized-for-HF modes like MFSK and VARA had nearly TEN TIMES as\nmany successes as 300-baud HF AX.25. in previous tests. earlier this year.\n\nThe difference between AX.25 and FX.25 may be less dramatic for another\nreason. The UZ7HO Soundcard TNC/modem has another unusual feature: It actually\ntries to repair defective AX.25 packets with a method that is completely\nunrelated to FX.25.\n\nWhen a received packet fails it's CRC, the Soundmodem tries inverting one bit\nof the packet at a time, and computes the CRC again. If the damaged packet has\nonly one wrong bit in it, this \"bit-flipping\" brute-force trial-and-error\nprocess will ultimately result in a CRC that matches. If a packet has a length\nof 100 bytes, this will result in up to 800 bit-flip-and-test operations.\nObviously, this isn't a problem for fast modern computers, but could be for\nlow-powered micro-controllers or classic hardware TNCs based on 8-bit 2-MHz\nZ-80 processors.\n\nThe result of this feature is AX.25 processed by the Soundmodem comes out\nlooking \"less bad\" compared to FX.25, than hardware or software TNCs without\nthis feature.\n\n", "frontpage": false}
