{"aid": "40021492", "title": "Practical defences to an xz type attack", "url": "https://rakkhi.substack.com/p/practical-defences-to-an-xz-type", "domain": "rakkhi.substack.com", "votes": 1, "user": "rakkhi", "posted_at": "2024-04-13 08:30:13", "comments": 0, "source_title": "Practical defences to an xz type attack", "source_text": "Practical defences to an xz type attack - by Rakkhi Joy\n\n# Identity Revive\n\nShare this post\n\n#### Practical defences to an xz type attack\n\nrakkhi.substack.com\n\n#### Discover more from Identity Revive\n\nTopics: Cyber Security, Strategy, Lessons Learnt, Architecture. Off Topic:\nTechnology, Economics, Climate Change, Politics.\n\nContinue reading\n\nSign in\n\n# Practical defences to an xz type attack\n\n### It's not sexy. You won't like it.\n\nRakkhi Joy\n\nApr 13, 2024\n\nShare this post\n\n#### Practical defences to an xz type attack\n\nrakkhi.substack.com\n\nShare\n\n#\n\nTL;DR\n\n  * If you are in the infosec / cyber security community or even in technology, you have probably heard of the near miss with the xz supply chain attack.\n\n  * If not, the brief summary is as follows: likely a nation state, likely Russian, mounted a campaign for over 2 years to build a set of personas that ultimately got Maintainer access to an open source Linux compression suite that is widely used (xz) and used that to backdoor SSH.\n\n  * The backdoor would have ultimately given full remote code execution with controlled authentication (CVSS 10) to the controller of a private key. There is a high likelihood this would've made it to basically every Linux and Unix install worldwide.\n\n  * They would've got away with it too if it wasn't for those dam kids... nerd that benchmarks his SSH login performance and doesn't clearly have enough paid work from Microsoft :)\n\n  * Even though this specific attack didn't work, they likely have multiple such campaigns running currently, in the past and definitely the future. When the 5 eyes does it or has done it in the past, it maybe even better / to this date undetected.\n\n  * Open source is also not the only risk. It is not that hard to get a rogue developer into a commercial company, especially where outsourced development is done. Maybe there is a bit more scrutiny there but there are also a lot fewer eyes.\n\n  * What won't work against this type of attack is the traditional supply chain security nor even Software Composition Analysis (SCA).\n\n  * What will work IMHO is the boring stuff: benchmarks of what processes are doing on your compute and network traffic to identify anomalies and actually using your firewalls effectively. This not cheap nor easy to do.\n\n#\n\nMore details on the xz attack\n\nThere has been plenty of ink and podcasts on this.\n\nSome of my favorites:\n\nThe humint side of the xz supply chain hack:\n\nhttps://pca.st/episode/792390c8-c389-4673-9cd8-9611d18d76c9\n\nRiskybiz interviewing the guy that found the bug:\n\nhttps://risky.biz/RB743/\n\nTop ranking posts on Hacker News on the topic with discussion:\n\nhttps://hn.algolia.com/?dateRange=all&page=0&prefix=true&query=XZ&sort=byPopularity&type=sto\n\n#\n\nWhat won't work as a defense\n\n##\n\nStandard supply chain security i.e a questionnaire IRAP assessment etc.\n\nObviously if it is open source there there is no one to ask that will answer.\nDo you do background checks including criminal record checks on your\nmaintainers? Strong identity verification? Obviously not in majority of cases.\n\nEven if you don't use open source in your crown jewel systems, obligatory\nXKCD:\n\nIt's not like closed source is immune to this type of attack. Any employee or\noutsourced developer can be bribed or extorted. Closed source also likely to\nhave a single / few peer reviews of the code and if they don't pick it up and\nneither do any tests, off it goes into your production environment. This is\npretty likely if a team of nation state threat actors is being paid to develop\nand hide the back door.\n\n##\n\nSoftware Composition Analysis (SCA)\n\nThis is the modern approach to technically mitigating vulnerabilities in\nartifacts including libraries and dependencies. Even then how many companies\nhave it working effectively? People process and technology. Do you scan all\nyour artifacts before deployment? Both custom developed and commercial off the\nshelf software? Do you have people and processes to test and fix\nvulnerabilities your SCA identifies?\n\nEven if you do SCA effectively, it is less useful against this type of attack\nbecause:\n\n  1. It was signed code from the official repo, by a persona that had access for over 2 years, been peer reviewed.\n\n  2. Do you even compile something like RedHat Linux from source and scan all its dependencies?\n\n  3. This would not have had a CVEE entry or signature.\n\n  4. It had significant obfuscation. Maybe too much in this case that led to it's detection.\n\n##\n\nAllow listing\n\nI.e. only allow executables and child processes to run from binaries that are\nin the approved and tested image.\n\nNormally a highly effective control. In this type of attack the backdoor is in\nyour approved image. It was SystemD spawning the SSH process and users logging\nin with a legit key.\n\nEvery process that has to be allowed in most Linux installs.\n\n##\n\nEDR / anti-malware\n\nAgain just a regular SSH user logging in.\n\n#\n\nWhat Would Work\n\n##\n\nBaselining compute and network traffic\n\nBasically how this attack got discovered, SSH should not spike your CPU 100%.\nDo you know what the CPU, memory, disk read write profile of at least your\ncrown jewel compute? Do you have alerts and automated actions for things\noutside of this baseline? Obviously this is much harder in PaaS and SaaS.\n\nSimilarly do you know what network profile of all the processes running on at\nleast your crown jewel compute? You can do this with an agent on the compute\nor by capturing network traffic and analyzing it.\n\nIf you must have AI in everything to get funding or approval, this type of\nclustering or peer group analysis is what AI or machine learning algorithms\nare great at.\n\n##\n\nNetwork filtering still has a role\n\nThe death of the firewall has been greatly exaggerated.\n\nDo you need to login to your compute at all?\n\nIs your management access to compute like SSH or RDP Internet accessible?\n\nCan any of your systems be accessed before authentication to your identity\nprovider? Even your SaaS systems can have a simple rule where the WAF only\nallows access to the URL after authentication.\n\nIf you can implement this pattern, even for SaaS systems, it means an attacker\nhas to authenticate to your Internet accessible Identity Provider e.g.\nMicrosoft, Okta, Ping before being able to connect to the target system. The\naccess can only be for the specific time needed and the specific service/port.\nThis makes it a lot harder to exploit even a backdoor vulnerability to your\nsystem.\n\nShare\n\nShare this post\n\n#### Practical defences to an xz type attack\n\nrakkhi.substack.com\n\nShare\n\nComments\n\nHybrid Cloud is the Answer\n\nCloud is more secure. Securing your systems in the cloud is not. Nor is it\ncheap.\n\nAug 12, 2023 \u2022\n\nRakkhi Joy\n\n5\n\nShare this post\n\n#### Hybrid Cloud is the Answer\n\nrakkhi.substack.com\n\nAutomating Cloud Security\n\nCloud Native Application Protection Platform (CNAPP)\n\nNov 26, 2022 \u2022\n\nRakkhi Joy\n\n1\n\nShare this post\n\n#### Automating Cloud Security\n\nrakkhi.substack.com\n\nDLP and Security Service Edge (SSE)\n\nWhy you should just do DLP with SSE\n\nDec 3, 2022 \u2022\n\nRakkhi Joy\n\n1\n\nShare this post\n\n#### DLP and Security Service Edge (SSE)\n\nrakkhi.substack.com\n\nReady for more?\n\n\u00a9 2024 Identity Revive\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
