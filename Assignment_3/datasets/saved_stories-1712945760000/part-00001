{"aid": "40011689", "title": "Unit tests considered harmful? No", "url": "https://thedailydeveloper.substack.com/p/unit-tests-considered-harmful-no", "domain": "thedailydeveloper.substack.com", "votes": 2, "user": "endlessvoid94", "posted_at": "2024-04-12 12:14:18", "comments": 0, "source_title": "Unit tests considered harmful? No.", "source_text": "Unit tests considered harmful? No. - by Dave Paola\n\n# The Daily Developer\n\nShare this post\n\n#### Unit tests considered harmful? No.\n\nthedailydeveloper.substack.com\n\n#### Discover more from The Daily Developer\n\nA not-quite-daily post on random development topics\n\nContinue reading\n\nSign in\n\n# Unit tests considered harmful? No.\n\nDave Paola\n\nApr 12, 2024\n\nShare this post\n\n#### Unit tests considered harmful? No.\n\nthedailydeveloper.substack.com\n\nShare\n\nI stumbled across this post today, which represents (I think) a widely held\nbelief that unit tests are bad.\n\nThe argument here seems to be:\n\n  * Unit test coverage doesn't guarantee that features actually work, only that regressions can be caught\n\n  * Tests make code difficult to change\n\nTherefore:\n\n  * Unit testing is harmful\n\nThese are valid (separate) arguments against shitty unit tests, and using test\ncoverage metrics as a proxy for correctness. And the conclusion is dubious at\nbest.\n\nThe lesson here isn't \"unit tests are harmful\", the answer is get better at\nlistening to what your code is telling you.\n\nUnit tests are an invaluable tool for knowing whether your code is well\nfactored. If it's hard to test the behavior (not the implementation) of your\ncode, then your code is trying to tell you something very important, and it's\nnot \"test my implementation\". We need to listen to our code when it talks to\nus like this.\n\nWhen unit tests are done poorly, they inhibit change, give you false\nconfidence, and make you worse at your job. When done well, they are the wind\nat your back, the green light to refactoring, and an invaluable signal that\nhelps guide the design of your domain model.\n\nIt took me a good 20 years to learn this lesson. Why? Arrogance, the curse of\nexperience, and because very few organizations actually do this well. And, of\ncourse, because it\u2019s hard.\n\nHere are questions I ask myself when I find it hard to unit test a class in my\ndesign:\n\n  * Is it hard to test this because it has side effects that can\u2019t be simply mocked or accounted for?\n\n  * Am I trying to test implementation or behavior?\n\n  * Is this object too big? Can I make it smaller?\n\n  * Should this object be multiple smaller objects?\n\n  * Does this object depend on other objects? How many? Can I inject them?\n\nHopefully you recognize some of the SOLID principles here \ud83d\ude00.\n\nDon\u2019t avoid unit tests - avoid poor unit tests.\n\nThanks for reading The Daily Developer! Subscribe for free to receive new\nposts and support my work.\n\nShare this post\n\n#### Unit tests considered harmful? No.\n\nthedailydeveloper.substack.com\n\nShare\n\nComments\n\nWhy are non-DRY specs more maintainable?\n\nUPDATE: This post was so popular that I recorded a quick podcast about the\nreception and added a bit more color to my opinions. Listen here...\n\nFeb 20 \u2022\n\nDave Paola\n\n2\n\nShare this post\n\n#### Why are non-DRY specs more maintainable?\n\nthedailydeveloper.substack.com\n\n2\n\nDoes this 90s-era theory predict the popularity of Javascript?\n\nThis is part of a series of posts I\u2019m writing as I work my way through older\nbooks about programming. In 1996, Richard Gabriel proposed a theory that...\n\nFeb 27 \u2022\n\nDave Paola\n\n1\n\nShare this post\n\n#### Does this 90s-era theory predict the popularity of Javascript?\n\nthedailydeveloper.substack.com\n\nBig reusable things are complex\n\nConditionals attract bugs\n\nFeb 28 \u2022\n\nDave Paola\n\nShare this post\n\n#### Big reusable things are complex\n\nthedailydeveloper.substack.com\n\nReady for more?\n\n\u00a9 2024 Dave Paola\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great writing\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": false}
