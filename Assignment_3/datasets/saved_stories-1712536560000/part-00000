{"aid": "39962714", "title": "IBM System/360", "url": "https://en.wikipedia.org/wiki/IBM_System/360", "domain": "wikipedia.org", "votes": 2, "user": "tosh", "posted_at": "2024-04-07 18:33:59", "comments": 0, "source_title": "IBM System/360", "source_text": "IBM System/360 - Wikipedia\n\nJump to content\n\nSearch\n\n# IBM System/360\n\n  * Afrikaans\n  * Asturianu\n  * \u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438\n  * Catal\u00e0\n  * \u010ce\u0161tina\n  * Dansk\n  * Deutsch\n  * Espa\u00f1ol\n  * Fran\u00e7ais\n  * \ud55c\uad6d\uc5b4\n  * Hrvatski\n  * Italiano\n  * \u05e2\u05d1\u05e8\u05d9\u05ea\n  * Magyar\n  * Nederlands\n  * \u65e5\u672c\u8a9e\n  * Norsk bokm\u00e5l\n  * Occitan\n  * Polski\n  * Portugu\u00eas\n  * \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n  * Suomi\n  * Svenska\n  * T\u00fcrk\u00e7e\n  * \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430\n  * Ti\u1ebfng Vi\u1ec7t\n  * \u4e2d\u6587\n\nEdit links\n\nFrom Wikipedia, the free encyclopedia\n\nIBM mainframe computer family (1964\u20131977)\n\nSystem/360IBM System/360 Model 30 central processor unit (CPU)  \n---  \nAlso known as| S/360  \nDeveloper| IBM  \nManufacturer| IBM  \nProduct family| See table of models  \nType| Mainframe computer  \nRelease date| April 7, 1964 (1964-04-07)  \nDiscontinued| 1978 (1978)  \nMedia|\n\n  * 7-track tape\n  * 9-track tape\n  * DASDs\n  * paper tape\n  * printed paper\n  * punched cards\n\n  \nOperating system|\n\n  * BOS/360\n  * TOS/360\n  * DOS/360\n  * OS/360\n  * TSS/360\n\n  \nMemory| 8 KB \u2013 9 MB (core memory)  \nPredecessor| 700/7000 series  \nSuccessor| System/370  \nRelated| System/360 architecture  \nHistory of IBM mainframes, 1952\u2013present  \n---  \nMarket name  \n  \n  * 700/7000 series\n  * 1400 series\n  * System/360\n  * System/370\n  * 30XX series (303X, 308X, 3090)\n  * System/390\n  * eServer zSeries (900, 800; 990, 890)\n  * System z9\n  * System z10\n  * zEnterprise System (z196, zEC12)\n  * IBM Z (z13, z14, z15, z16)\n\n  \nArchitecture  \n  \n  * System/360\n  * System/370\n  * S/370-XA\n  * ESA/370\n  * ESA/390\n  * z/Architecture\n\n  \n  \n  * v\n  * t\n  * e\n\n  \n  \nThe IBM System/360 (S/360) is a family of mainframe computer systems that was\nannounced by IBM on April 7, 1964, and delivered between 1965 and 1978.^[1] It\nwas the first family of computers designed to cover both commercial and\nscientific applications and a complete range of applications from small to\nlarge. The design distinguished between architecture and implementation,\nallowing IBM to release a suite of compatible designs at different prices. All\nbut the only partially compatible Model 44 and the most expensive systems use\nmicrocode to implement the instruction set, featuring 8-bit byte addressing\nand binary, decimal and hexadecimal floating-point calculations.\n\nThe System/360 family introduced IBM's Solid Logic Technology (SLT), which\npacked more transistors onto a circuit card, allowing more powerful but\nsmaller computers.^[2]\n\nThe slowest System/360 model announced in 1964, the Model 30, could perform up\nto 34,500 instructions per second, with memory from 8 to 64 KB.^[3] High-\nperformance models came later. The 1967 IBM System/360 Model 91 could execute\nup to 16.6 million instructions per second.^[4] The larger 360 models could\nhave up to 8 MB of main memory,^[5] though that much memory was unusual; a\nlarge installation might have as little as 256 KB of main storage, but 512 KB,\n768 KB or 1024 KB was more common. Up to 8 megabytes of slower (8 microsecond)\nLarge Capacity Storage (LCS) was also available for some models.\n\nThe IBM 360 was extremely successful, allowing customers to purchase a smaller\nsystem knowing they could expand it, if their needs grew, without\nreprogramming application software or replacing peripheral devices. It\ninfluenced computer design for years to come; many consider it one of\nhistory's most successful computers.\n\nSystem/360's chief architect was Gene Amdahl, and the project was managed by\nFred Brooks, responsible to Chairman Thomas J. Watson Jr.^[5] The commercial\nrelease was piloted by another of Watson's lieutenants, John R. Opel, who\nmanaged the launch of IBM\u2019s System 360 mainframe family in 1964.^[6]\n\nApplication-level compatibility (with some restrictions) for System/360\nsoftware is maintained to the present day with the System z mainframe servers.\n\n## System/360 history[edit]\n\nIBM System/360 Model 20 CPU with front panels removed, with IBM 2560 MFCM\n(Multi-Function Card Machine)IBM System/360 Model 30 CPU (red, middle of\npicture), tape drives to its left, and disk drives to its right, at the\nComputer History MuseumIBM System/360 Model 50 CPU, computer operator's\nconsole, and peripherals at VolkswagenSystem/360 Model 65 operator's console,\nwith register value lamps and toggle switches (middle of picture) and\n\"emergency pull\" switch (upper right)\n\n### A family of computers[edit]\n\nContrasting with industry practice of the day, IBM created an entire new\nseries of computers, from small to large, low- to high-performance, all using\nthe same instruction set (with two exceptions for specific markets). This feat\nallowed customers to use a cheaper model and then upgrade to larger systems as\ntheir needs increased without the time and expense of rewriting software.\nBefore the introduction of System/360, business and scientific applications\nused different computers with different instruction sets and operating\nsystems. Different-sized computers also had their own instruction sets. IBM\nwas the first manufacturer to exploit microcode technology to implement a\ncompatible range of computers of widely differing performance, although the\nlargest, fastest models had hard-wired logic instead.\n\nThis flexibility greatly lowered barriers to entry. With most other vendors\ncustomers had to choose between machines they could outgrow and machines that\nwere potentially too powerful and thus too costly. This meant that many\ncompanies simply did not buy computers.\n\n### Models[edit]\n\nIBM initially announced a series of six computers and forty common\nperipherals. IBM eventually delivered fourteen models, including rare one-off\nmodels for NASA. The least expensive model was the Model 20 with as little as\n4096 bytes of core memory, eight 16-bit registers instead of the sixteen\n32-bit registers of other System/360 models, and an instruction set that was a\nsubset of that used by the rest of the range.\n\nThe initial announcement in 1964 included Models 30, 40, 50, 60, 62, and 70.\nThe first three were low- to middle-range systems aimed at the IBM 1400 series\nmarket. All three first shipped in mid-1965. The last three, intended to\nreplace the 7000 series machines, never shipped and were replaced with the 65\nand 75, which were first delivered in November 1965, and January 1966,\nrespectively.\n\nLater additions to the low-end included models 20 (1966, mentioned above), 22\n(1971), and 25 (1968). The Model 20 had several sub-models; sub-model 5 was at\nthe higher end of the model. The Model 22 was a recycled Model 30 with minor\nlimitations: a smaller maximum memory configuration, and slower I/O channels,\nwhich limited it to slower and lower-capacity disk and tape devices than on\nthe 30.\n\nThe Model 44 (1966) was a specialized model, designed for scientific computing\nand for real-time computing and process control, featuring some additional\ninstructions, and with all storage-to-storage instructions and five other\ncomplex instructions eliminated.\n\nIBM System/360 Model 91 operator's console at NASA, sometime in the late\n1960s.Magnetic-core memory, probably from a 360\n\nA succession of high-end machines included the Model 67 (1966, mentioned\nbelow, briefly anticipated as the 64 and 66^[7]), 85 (1969), 91 (1967,\nanticipated as the 92), 95 (1968), and 195 (1971). The 85 design was\nintermediate between the System/360 line and the follow-on System/370 and was\nthe basis for the 370/165. There was a System/370 version of the 195, but it\ndid not include Dynamic Address Translation.\n\nThe implementations differed substantially, using different native data path\nwidths, presence or absence of microcode, yet were extremely compatible.\nExcept where specifically documented, the models were architecturally\ncompatible. The 91, for example, was designed for scientific computing and\nprovided out-of-order instruction execution (and could yield \"imprecise\ninterrupts\" if a program trap occurred while several instructions were being\nread), but lacked the decimal instruction set used in commercial applications.\nNew features could be added without violating architectural definitions: the\n65 had a dual-processor version (M65MP) with extensions for inter-CPU\nsignalling; the 85 introduced cache memory. Models 44, 75, 91, 95, and 195\nwere implemented with hardwired logic, rather than microcoded as all other\nmodels.\n\nThe Model 67, announced in August 1965, was the first production IBM system to\noffer dynamic address translation (virtual memory) hardware to support time-\nsharing. \"DAT\" is now more commonly referred to as an MMU. An experimental\none-off unit was built based on a model 40. Before the 67, IBM had announced\nmodels 64 and 66, DAT versions of the 60 and 62, but they were almost\nimmediately replaced with the 67 at the same time that the 60 and 62 were\nreplaced with the 65. DAT hardware would reappear in the S/370 series in 1972,\nthough it was initially absent from the series. Like its close relative, the\n65, the 67 also offered dual CPUs.\n\nIBM stopped marketing all System/360 models by the end of 1977.^[8]\n\n### Backward compatibility[edit]\n\nIBM's existing customers had a large investment in software that ran on\nsecond-generation machines. Several System/360 models had the option of\nemulating the customer's existing computer using special hardware^[9] and\nmicrocode, and an emulation program that enabled existing programs to run on\nthe new machine.\n\nSystem/360 model| Emulated systems  \n---|---  \n1401| 1440, 1460| 1410, 7010| 7070, 7072, 7074| 7080| 709, 7090, 7094, 7094\nII, 7040, 7044  \nModel 20| Yes  \nModel 30| Yes| Yes  \nModel 40| Yes| Yes| Yes  \nModel 50| Yes| Yes| Yes| Yes  \nModel 65| Yes| Yes| Yes  \nModel 85| Under OS control  \n  \nCustomers initially had to halt the computer and load the emulation\nprogram.^[10] IBM later added features and modified emulator programs to allow\nemulation of the 1401, 1440, 1460, 1410 and 7010 under the control of an\noperating system. The Model 85 and later System/370 maintained the precedent,\nretaining emulation options and allowing emulators to run under OS control\nalongside native programs.^[11]^[12]\n\n### Successors and variants[edit]\n\nSystem/360 (excepting the Models 20, 44^[NB 1] and 67^[NB 2]) was replaced\nwith the compatible System/370 range in 1970 and Model 20 users were targeted\nto move to the IBM System/3. (The idea of a major breakthrough with FS\ntechnology was dropped in the mid-1970s for cost-effectiveness and continuity\nreasons.) Later compatible IBM systems include the 4300 family, the 308x\nfamily, the 3090, the ES/9000 and 9672 families (System/390 family), and the\nIBM Z series.\n\nComputers that were mostly identical or compatible in terms of the machine\ncode or architecture of the System/360 included Amdahl's 470 family (and its\nsuccessors), Hitachi mainframes, the UNIVAC 9000 series,^[13] Fujitsu as the\nFacom, the RCA Spectra 70 series,^[NB 3] and the English Electric System\n4.^[NB 4] The System 4 machines were built under license to RCA. RCA sold the\nSpectra series to what was then UNIVAC, where they became the UNIVAC Series\n70. UNIVAC also developed the UNIVAC Series 90 as successors to the 9000\nseries and Series 70.^[13] The Soviet Union produced a System/360 clone named\nthe ES EVM.^[14]\n\nThe IBM 5100 portable computer, introduced in 1975, offered an option to\nexecute the System/360's APL.SV programming language through a hardware\nemulator. IBM used this approach to avoid the costs and delay of creating a\n5100-specific version of APL.\n\nSpecial radiation-hardened and otherwise somewhat modified System/360s, in the\nform of the System/4 Pi avionics computer, are used in several fighter and\nbomber jet aircraft. In the complete 32-bit AP-101 version, 4 Pi machines were\nused as the replicated computing nodes of the fault-tolerant Space Shuttle\ncomputer system (in five nodes). The U.S. Federal Aviation Administration\noperated the IBM 9020, a special cluster of modified System/360s for air\ntraffic control, from 1970 until the 1990s. (Some 9020 software is apparently\nstill used via emulation on newer hardware.^[citation needed])\n\n## Table of System/360 models[edit]\n\nModel| Announced^[15]| Shipped^[15]| Scientific performance (kIPS)^[NB 5]|\nCommercial performance (kIPS)^[NB 6]| CPU Bandwidth (MB/sec)^[16]| Memory\nbandwidth (MB/sec)^[16]| Memory size (in (binary) KB)| Weight (lbs)| Notes  \n---|---|---|---|---|---|---|---|---|---  \n30| Apr 1964| Jun 1965| 10.2| 29| 1.3| 0.7| 8\u201364^[17]| 1,700 lb (771\nkg)^[18]^: 2030.1  \n40| Apr 1964| Apr 1965| 40| 75| 3.2| 0.8| 16\u2013256^[19]| 1,700\u20132,310 lb\n(771\u20131,048 kg) depends on memory^[18]^: 2040.1  \n50| Apr 1964| Aug 1965| 133| 169| 8.0| 2.0| 64\u2013512^[20]| 4,700\u20137,135 lb\n(2,132\u20133,236 kg) depends on memory^[18]^: 2050.2, 2050.4| Supported IBM 2361\nLarge Capacity Storage (LCS).  \n60 and 62| Apr 1964| never| Replaced by Model 65  \n70| Apr 1964| never| Replaced by Model 75  \n90| Apr 1964| never| Replaced by Model 92  \n92| Aug 1964| never| Redesignated as IBM System/360 Model 91^[15]  \n20| Nov 1964| Mar 1966| 2.0| 2.6| 4\u201332^[21]| 1,200\u20131,400 lb (544\u2013635 kg)^[22]|\n16-bit, low end, limited partially incompatible instruction set  \n91| Jan 1966^[15]^: p.394| Oct 1967| 1,900| 1,800| 133| 164| 1,024\u20134,096^[23]|\nAvailable on special bid beginning Nov 1964^[15]^: 388  \n64 and 66| Apr 1965| never| Replaced by Model 67  \n65| Apr 1965| Nov 1965| 563| 567| 40| 21| 128\u20131,024^[24]| 4,290\u20138,830 lb\n(1,946\u20134,005 kg) depends on memory and number of processors^[18]^: 2065.2,\n2065.4, 2065.6, 2065.8, 2065.10| Supported LCS  \n75| Apr 1965| Jan 1966| 940| 670| 41| 43| 256\u20131,024^[25]| 5,125\u20135,325 lb\n(2,325\u20132,415 kg) depends on memory^[18]^: 2075.2, 2075.4| Supported LCS  \n67| Aug 1965| May 1966| 40| 21| 512\u20132,048^[26]| 3,674 lb (1,666 kg) \u2013\nProcessor only^[18]^: 2067.6| Dynamic address translation for time sharing  \n44| Aug 1965| Sep 1966| 118| 185| 16| 4.0| 32\u2013256^[27]| 2,900\u20134,200 lb\n(1,315\u20131,905 kg) depends on memory^[18]^: 2044.2| Specialized for scientific\ncomputing  \n95| special order| Feb 1968| 3,800 est.| 3,600 est.| 133| 711| 5,220^[28]|\nPerformance estimated as 2\u00d7 Model 91^[15]^: p.394  \n25| Jan 1968| Oct 1968| 9.7| 25| 1.1| 2.2| 16\u201348^[29]| 2,050 lb (930\nkg)^[18]^: 2025.2  \n85| Jan 1968| Dec 1969| 3,245| 3,418| 100| 67| 512\u20134,096^[30]| 14,428 lb\n(6,544 kg) - Processor only^[18]^: 2085.2| 16\u201332 KB cache memory, extended-\nprecision floating point.  \n195| Aug 1969| Mar 1971| 10,000 est.| 10,000 est.| 148| 169| 1,024\u20134,096^[31]|\n13,450\u201328,350 lb (6,101\u201312,859 kg) depends on memory^[18]^: 3195.2, 3195.4| 32\nKB IC cache memory. Performance estimated as 3\u00d7 Model 85.^[15]^: p.422  \n22| Apr 1971| Jun 1971| 1.3| 0.7| 24\u201332^[32]| 1,500 lb (680 kg)^[18]^: 2022.1|\nA re-manufactured Model 30  \n  \n    \n\nModel summary\n\n  * Six of the twenty IBM System/360 models announced either were never shipped or were never released.\n  * Fourteen of the twenty IBM System/360 models announced shipped.\n\n## Technical description[edit]\n\nThis section is in list format but may read better as prose. You can help by\nconverting this section, if appropriate. Editing help is available. (November\n2020)  \n---  \n  \n### Influential features[edit]\n\nIBM System/360 Model 20 microcode transformer read-only storage (TROS) module.\nA Model 40 (TROS) module is about 50% longer than this to make room for more\nmicrocode bits in the word.\n\nThe System/360 introduced a number of industry standards to the marketplace,\nsuch as:\n\n  * The 8-bit byte (against financial pressure during development to reduce the byte to 4 or 6 bits), rather than adopting the 7030 concept of accessing bytes of variable size at arbitrary bit addresses.\n  * Byte-addressable memory (as opposed to bit-addressable or word-addressable memory)\n  * 32-bit words\n  * The Bus and Tag I/O channel standardized in FIPS-60^[33]\n  * Commercial use of microcoded CPUs\n  * The IBM Floating Point Architecture\n  * The EBCDIC character set^[NB 7]\n  * Nine-track magnetic tape\n\n### Architectural overview[edit]\n\nMain article: IBM System/360 architecture\n\nThe System/360 series has a computer system architecture\nspecification.^[34]^[35]^[36] This specification makes no assumptions on the\nimplementation itself, but rather describes the interfaces and expected\nbehavior of an implementation. The architecture describes mandatory interfaces\nthat must be available on all implementations, and optional interfaces. Some\naspects of this architecture are:\n\n  * Big endian byte ordering\n  * A processor with:\n\n    * 16 32-bit general-purpose registers (R0\u2013R15)\n    * A 64-bit program status word (PSW), which describes (among other things)\n\n      * Interrupt masks\n      * Privilege states\n      * A condition code\n      * A 24-bit instruction address\n    * An interruption mechanism, maskable and unmaskable interruption classes and subclasses\n    * An instruction set. Each instruction is wholly described and also defines the conditions under which an exception is recognized in the form of program interruption.\n  * A memory (called storage) subsystem with:\n\n    * 8 bits per byte\n    * A special processor communication area starting at address 0\n    * 24-bit addressing\n  * Manual control operations that allow\n\n    * A bootstrap process (a process called Initial Program Load or IPL)\n    * Operator-initiated interrupts\n    * Resetting the system\n    * Basic debugging facilities\n    * Manual display and modifications of the system's state (memory and processor)\n  * An Input/Output mechanism \u2013 which does not describe the devices themselves\n\nSome of the optional features are:\n\n  * Binary-coded decimal instructions\n  * Floating-point instructions\n  * Timing facilities (interval timer)\n  * Key-controlled memory protection\n\nAll models of System/360, except for the Model 20 and Model 44, implemented\nthat specification.\n\nBinary arithmetic and logical operations are performed as register-to-register\nand as memory-to-register/register-to-memory as a standard feature. If the\nCommercial Instruction Set option was installed, packed decimal arithmetic\ncould be performed as memory-to-memory with some memory-to-register\noperations. The Scientific Instruction Set feature, if installed, provided\naccess to four floating-point registers that could be programmed for either\n32-bit or 64-bit floating-point operations. The Models 85 and 195 could also\noperate on 128-bit extended-precision floating-point numbers stored in pairs\nof floating-point registers, and software provided emulation in other models.\nThe System/360 used an 8-bit byte, 32-bit word, 64-bit double-word, and 4-bit\nnibble. Machine instructions had operators with operands, which could contain\nregister numbers or memory addresses. This complex combination of instruction\noptions resulted in a variety of instruction lengths and formats.\n\nMemory addressing was accomplished using a base-plus-displacement scheme, with\nregisters 1 through F (15). A displacement was encoded in 12 bits, thus\nallowing a 4096-byte displacement (0\u20134095), as the offset from the address put\nin a base register.\n\nRegister 0 could not be used as a base register nor as an index register (nor\nas a branch address register), as \"0\" was reserved to indicate an address in\nthe first 4 KB of memory, that is, if register 0 was specified as described,\nthe value 0x00000000 was implicitly input to the effective address calculation\nin place of whatever value might be contained within register 0 (or if\nspecified as a branch address register, then no branch was taken, and the\ncontent of register 0 was ignored, but any side effect of the instruction was\nperformed).\n\nThis specific behavior permitted initial execution of an interrupt routines,\nsince base registers would not necessarily be set to 0 during the first few\ninstruction cycles of an interrupt routine. It isn't needed for IPL (\"Initial\nProgram Load\" or boot), as one can always clear a register without the need to\nsave it.\n\nWith the exception of the Model 67,^[26] all addresses were real memory\naddresses. Virtual memory was not available in most IBM mainframes until the\nSystem/370 series. The Model 67 introduced a virtual memory architecture,\nwhich MTS, CP-67, and TSS/360 used\u2014but not IBM's mainline System/360 operating\nsystems.\n\nThe System/360 machine-code instructions are 2 bytes long (no memory\noperands), 4 bytes long (one operand), or 6 bytes long (two operands).\nInstructions are always situated on 2-byte boundaries.\n\nOperations like MVC (Move-Characters) (Hex: D2) can only move at most 256\nbytes of information. Moving more than 256 bytes of data required multiple MVC\noperations. (The System/370 series introduced a family of more powerful\ninstructions such as the MVCL \"Move-Characters-Long\" instruction, which\nsupports moving up to 16 MB as a single block.)\n\nAn operand is two bytes long, typically representing an address as a 4-bit\nnibble denoting a base register and a 12-bit displacement relative to the\ncontents of that register, in the range 000\u2013FFF (shown here as hexadecimal\nnumbers). The address corresponding to that operand is the contents of the\nspecified general-purpose register plus the displacement. For example, an MVC\ninstruction that moves 256 bytes (with length code 255 in hexadecimal as FF)\nfrom base register 7, plus displacement 000, to base register 8, plus\ndisplacement 001, would be coded as the 6-byte instruction \"D2FF 8001 7000\"\n(operator/length/address1/address2).\n\nThe System/360 was designed to separate the system state from the problem\nstate. This provided a basic level of security and recoverability from\nprogramming errors. Problem (user) programs could not modify data or program\nstorage associated with the system state. Addressing, data, or operation\nexception errors made the machine enter the system state through a controlled\nroutine so the operating system could try to correct or terminate the program\nin error. Similarly, it could recover certain processor hardware errors\nthrough the machine check routines.\n\n### Channels[edit]\n\nSee also: Channel I/O\n\nPeripherals interfaced to the system via channels. A channel is a specialized\nprocessor with the instruction set optimized for transferring data between a\nperipheral and main memory. In modern terms, this could be compared to direct\nmemory access (DMA). The S/360 connects channels to control units with bus and\ntag cables; IBM eventually replaced these with Enterprise Systems Connection\n(ESCON) and Fibre Connection (FICON) channels, but well after the S/360 era.\n\n#### Byte-multiplexor and selector channels[edit]\n\nThere were initially two types of channels; byte-multiplexer channels (known\nat the time simply as \"multiplexor channels\"), for connecting \"slow speed\"\ndevices such as card readers and punches, line printers, and communications\ncontrollers, and selector channels for connecting high speed devices, such as\ndisk drives, tape drives, data cells and drums. Every System/360 (except for\nthe Model 20, which was not a standard 360) has a byte-multiplexer channel and\n1 or more selector channels, though the model 25 has just one channel, which\ncan be either a byte-multiplexor or selector channel. The smaller models (up\nto the model 50) have integrated channels, while for the larger models (model\n65 and above) the channels are large separate units in separate cabinets: the\nIBM 2870 is the byte-multiplexor channel with up to four selector sub-\nchannels, and the IBM 2860 is up to three selector channels.\n\nThe byte-multiplexer channel is able to handle I/O to/from several devices\nsimultaneously at the device's highest rated speeds, hence the name, as it\nmultiplexed I/O from those devices onto a single data path to main memory.\nDevices connected to a byte-multiplexer channel are configured to operate in\n1-byte, 2-byte, 4-byte, or \"burst\" mode. The larger \"blocks\" of data are used\nto handle progressively faster devices. For example, a 2501 card reader\noperating at 600 cards per minute would be in 1-byte mode, while a 1403-N1\nprinter would be in burst mode. Also, the byte-multiplexer channels on larger\nmodels have an optional selector subchannel section that would accommodate\ntape drives. The byte-multiplexor's channel address was typically \"0\" and the\nselector subchannel addresses were from \"C0\" to \"FF.\" Thus, tape drives on\nSystem/360 were commonly addressed at 0C0\u20130C7. Other common byte-multiplexer\naddresses are: 00A: 2501 Card Reader, 00C/00D: 2540 Reader/Punch, 00E/00F:\n1403-N1 Printers, 010\u2013013: 3211 Printers, 020\u20130BF: 2701/2703\nTelecommunications Units. These addresses are still commonly used in z/VM\nvirtual machines.\n\nSystem/360 models 40 and 50 have an integrated 1052-7 console that is usually\naddressed as 01F, however, this was not connected to the byte-multiplexer\nchannel, but rather, had a direct internal connection to the mainframe. The\nmodel 30 attached a different model of 1052 through a 1051 control unit. The\nmodels 60 through 75 also use the 1052-7.\n\nCable used as Bus or Tag cable for IBM System/360Bus and tag terminators\n\nSelector channels enabled I/O to high speed devices. These storage devices\nwere attached to a control unit and then to the channel. The control unit let\nclusters of devices be attached to the channels. On higher speed models,\nmultiple selector channels, which could operate simultaneously or in parallel,\nimproved overall performance.\n\nControl units are connected to the channels with \"bus and tag\" cable pairs.\nThe bus cables carried the address and data information and the tag cables\nidentified what data was on the bus. The general configuration of a channel is\nto connect the devices in a chain, like this: Mainframe\u2014Control Unit X\u2014Control\nUnit Y\u2014Control Unit Z. Each control unit is assigned a \"capture range\" of\naddresses that it services. For example, control unit X might capture\naddresses 40\u20134F, control unit Y: C0\u2013DF, and control unit Z: 80\u20139F. Capture\nranges had to be a multiple of 8, 16, 32, 64, or 128 devices and be aligned on\nappropriate boundaries. Each control unit in turn has one or more devices\nattached to it. For example, you could have control unit Y with 6 disks, that\nwould be addressed as C0-C5.\n\nThere are three general types of bus-and-tag cables produced by IBM. The first\nis the standard gray bus-and-tag cable, followed by the blue bus-and-tag\ncable, and finally the tan bus-and-tag cable. Generally, newer cable revisions\nare capable of higher speeds or longer distances, and some peripherals\nspecified minimum cable revisions both upstream and downstream.\n\nThe cable ordering of the control units on the channel is also significant.\nEach control unit is \"strapped\" as High or Low priority. When a device\nselection was sent out on a mainframe's channel, the selection was sent from\nX->Y->Z->Y->X. If the control unit was \"high\" then the selection was checked\nin the outbound direction, if \"low\" then the inbound direction. Thus, control\nunit X was either 1st or 5th, Y was either 2nd or 4th, and Z was 3rd in line.\nIt is also possible to have multiple channels attached to a control unit from\nthe same or multiple mainframes, thus providing a rich high-performance,\nmultiple-access, and backup capability.\n\nTypically the total cable length of a channel is limited to 200 feet, less\nbeing preferred. Each control unit accounts for about 10 \"feet\" of the\n200-foot limit.\n\n#### Block multiplexer channel[edit]\n\nIBM first introduced a new type of I/O channel on the Model 85 and Model 195,\nthe 2880 block multiplexer channel, and then made them standard on the\nSystem/370. This channel allowed a device to suspend a channel program,\npending the completion of an I/O operation and thus to free the channel for\nuse by another device. A block multiplexer channel can support either standard\n1.5 MB/s connections or, with the 2-byte interface feature, 3 MB/s; the latter\nuse one tag cable and two bus cables. On the S/370 there is an option for a\n3.0 MB/s data streaming^[37] channel with one bus cable and one tag cable.\n\nThe initial use for this was the 2305 fixed-head disk, which has 8 \"exposures\"\n(alias addresses) and rotational position sensing (RPS).\n\nBlock multiplexer channels can operate as a selector channel to allow\ncompatible attachment of legacy subsystems.^[38]\n\n### Basic hardware components[edit]\n\nA single-width SLT card. Each square metal can contains a hybrid circuit with\nseveral transistors.Six-transistor solid logic hybrid circuit with cap offMany\nSLT cards plugged into an SLT backplane\n\nBeing uncertain of the reliability and availability of the then new monolithic\nintegrated circuits, IBM chose instead to design and manufacture its own\ncustom hybrid integrated circuits. These were built on 11 mm square ceramic\nsubstrates. Resistors were silk screened on and discrete glass encapsulated\ntransistors and diodes were added. The substrate was then covered with a metal\nlid or encapsulated in plastic to create a \"Solid Logic Technology\" (SLT)\nmodule.\n\nA number of these SLT modules were then flip chip mounted onto a small multi-\nlayer printed circuit \"SLT card\". Each card had one or two sockets on one edge\nthat plugged onto pins on one of the computer's \"SLT boards\" (also referred to\nas a backplane). This was the reverse of how most other company's cards were\nmounted, where the cards had pins or printed contact areas and plugged into\nsockets on the computer's boards.\n\nUp to twenty SLT boards could be assembled side-by-side (vertically and\nhorizontally, max 4 high by 5 wide) to form a \"logic gate\". Several gates\nmounted together constituted a box-shaped \"logic frame\". The outer gates were\ngenerally hinged along one vertical edge so they could be swung open to\nprovide access to the fixed inner gates. The larger machines could have more\nthan one frame bolted together to produce the final unit, such as a multi-\nframe Central Processing Unit (CPU).\n\n### Operating system software[edit]\n\nMain article: System/360 operating systems\n\nThe smaller System/360 models used the Basic Operating System/360 (BOS/360),\nTape Operating System (TOS/360), or Disk Operating System/360 (DOS/360, which\nevolved into DOS/VS, DOS/VSE, VSE/AF, VSE/SP, VSE/ESA, and then z/VSE).\n\nThe larger models used Operating System/360 (OS/360). IBM developed several\nlevels of OS/360, with increasingly powerful features: Primary Control Program\n(PCP), Multiprogramming with a Fixed number of Tasks (MFT), and\nMultiprogramming with a Variable number of Tasks (MVT). MVT took a long time\nto develop into a usable system, and the less ambitious MFT was widely used.\nPCP was used on intermediate machines too small to run MFT well, and on larger\nmachines before MFT was available; the final releases of OS/360 included only\nMFT and MVT. For the System/370 and later machines, MFT evolved into OS/VS1,\nwhile MVT evolved into OS/VS2 (SVS) (Single Virtual Storage), then various\nversions of MVS (Multiple Virtual Storage) culminating in the current z/OS.\n\nWhen it announced the Model 67 in August 1965, IBM also announced TSS/360\n(Time-Sharing System) for delivery at the same time as the 67. TSS/360, a\nresponse to Multics, was an ambitious project that included many advanced\nfeatures. It had performance problems, was delayed, canceled, reinstated, and\nfinally canceled^[NB 8] again in 1971. Customers migrated to CP-67, MTS\n(Michigan Terminal System), TSO (Time Sharing Option for OS/360), or one of\nseveral other time-sharing systems.\n\nCP-67, the original virtual machine system, was also known as CP/CMS. CP/67\nwas developed outside the IBM mainstream at IBM's Cambridge Scientific Center,\nin cooperation with MIT researchers. CP/CMS eventually won wide acceptance,\nand led to the development of VM/370 (Virtual Machine) which had a primary\ninteractive \"sub\" operating system known as VM/CMS (Conversational Monitoring\nSystem). This evolved into today's z/VM.\n\nThe Model 20 offered a simplified and rarely used tape-based system called TPS\n(Tape Processing System), and DPS (Disk Processing System) that provided\nsupport for the 2311 disk drive. TPS could run on a machine with 8 KB of\nmemory; DPS required 12 KB, which was pretty hefty for a Model 20. Many\ncustomers ran quite happily with 4 KB and CPS (Card Processing System). With\nTPS and DPS, the card reader was used to read the Job Control Language cards\nthat defined the stack of jobs to run and to read in transaction data such as\ncustomer payments. The operating system was held on tape or disk, and results\ncould also be stored on the tapes or hard drives. Stacked job processing\nbecame an exciting possibility for the small but adventurous computer user.\n\nA little-known and little-used suite of 80-column punched-card utility\nprograms known as Basic Programming Support (BPS) (jocularly: Barely\nProgramming Support), a precursor of TOS, was available for smaller systems.\n\n## Component names[edit]\n\nIBM created a new naming system for the new components created for System/360,\nalthough well-known old names, like IBM 1403 and IBM 1052, were retained. In\nthis new naming system, components were given four-digit numbers starting with\n2. The second digit described the type of component, as follows:\n\n20xx:| Arithmetic processors, for example the IBM 2030, which was the CPU for\nthe IBM System/360 Model 30.  \n---|---  \n21xx:| Power supplies and other equipment intimately associated with\nprocessors, for example the IBM 2167 Configuration Unit.  \n22xx:| Visual output devices, for example the IBM 2250 and IBM 2260 CRT\ndisplays, and the IBM 2203 line printer for the System/360 model 20.  \n23xx:| Direct-access storage devices, for example the IBM 2311 and IBM 2314\ndisk drives, the IBM 2321 Data Cell; Main storage such as the IBM 2361 Large\nCapacity Storage (Core Storage, Large Core Storage or LCS) and the IBM 2365\nProcessor Storage.  \n24xx:| Magnetic tape drives, for example the IBM 2401, IBM 2405 and IBM 2415.  \n25xx:| Punched card handling equipment, for example the IBM 2501 (card\nreader), IBM 2520 (card punch); IBM 2540 (reader/punch) and IBM 2560 (Multi-\nFunction Card Machine or MFCM).  \n26xx:| Paper tape handling equipment, for example the IBM 2671 paper tape\nreader.  \n27xx:| Communications equipment, for example the IBM 2701, IBM 2705, IBM 2741\ninteractive terminal and the IBM 2780 batch terminal.  \n28xx:| Channels and controllers, for example the IBM 2821 Control Unit, IBM\n2841 and IBM 2844.  \n29xx:| Miscellaneous devices, for example the IBM 2914 Data Channel Switch and\nthe IBM 2944 Data Channel Repeater.  \n  \n## Peripherals[edit]\n\nIBM developed a new family of peripheral equipment for System/360, carrying\nover a few from its older 1400 series. Interfaces were standardized, allowing\ngreater flexibility to mix and match processors, controllers and peripherals\nthan in the earlier product lines.\n\nIn addition, System/360 computers could use certain peripherals that were\noriginally developed for earlier computers. These earlier peripherals used a\ndifferent numbering system, such as the IBM 1403 chain printer. The 1403, an\nextremely reliable device that had already earned a reputation as a workhorse,\nwas sold as the 1403-N1 when adapted for the System/360.\n\nAlso available were optical character recognition (OCR) readers IBM 1287 and\nIBM 1288 which could read Alpha Numeric (A/N) and Numeric Hand Printed\n(NHP/NHW) Characters from Cashier's rolls of tape to full legal size pages. At\nthe time this was done with very large optical/logic readers. Software was too\nslow and expensive at that time.\n\nModels 65 and below sold with an IBM 1052-7 as the console typewriter. The\n360/85 with feature 5450 uses a display console that was not compatible with\nanything else in the line;^[39]^[40] the later 3066 console for the 370/165\nand 370/168 use the same basic display design as the 360/85. The IBM\nSystem/360 models 91 and 195 use a graphical display similar to the IBM 2250\nas their primary console.\n\nAdditional operator consoles were also available. Certain high-end machines\ncould optionally be purchased with a 2250 graphical display, costing upwards\nof US $100,000; smaller machines could use the less expensive 2260 display or\nlater the 3270.\n\n### Direct access storage devices (DASD)[edit]\n\nFurther information: Direct-access storage device\n\nIBM 2311 disk drive\n\nSee also: IBM S/360 and other IBM mainframe HDDs\n\nThe first disk drives for System/360 were IBM 2302s^[41]^: 60\u201365 and IBM\n2311s.^[41]^: 54\u201358 The first drum for System/360 was the IBM\n7320.^[42]^[43]^: 41\n\nThe 156 KB/s 2302 was based on the earlier 1302 and was available as a model 3\nwith two 112.79 MB modules^[41]^: 60 or as a model 4 with four such\nmodules.^[41]^: 60\n\nThe 2311, with a removable 1316 disk pack, was based on the IBM 1311 and had a\ntheoretical capacity of 7.2 MB, although actual capacity varied with record\ndesign.^[43]^: 31 (When used with a 360/20, the 1316 pack was formatted into\nfixed-length 270 byte sectors, giving a maximum capacity of 5.4MB.)\n\nIn 1966, the first 2314s shipped. This device had up to eight usable disk\ndrives with an integral control unit; there were nine drives, but one was\nreserved as a spare. Each drive used a removable 2316 disk pack with a\ncapacity of nearly 28 MB. The disk packs for the 2311 and 2314 were physically\nlarge by today's standards \u2014 e.g., the 1316 disk pack was about 14 in (36 cm)\nin diameter and had six platters stacked on a central spindle. The top and\nbottom outside platters did not store data. Data were recorded on the inner\nsides of the top and bottom platters and both sides of the inner platters,\nproviding 10 recording surfaces. The 10 read/write heads moved together across\nthe surfaces of the platters, which were formatted with 203 concentric tracks.\nTo reduce the amount of head movement (seeking), data was written in a virtual\ncylinder from inside top platter down to inside bottom platter. These disks\nwere not usually formatted with fixed-sized sectors as are today's hard drives\n(though this was done with CP/CMS). Rather, most System/360 I/O software could\ncustomize the length of the data record (variable-length records), as was the\ncase with magnetic tapes.\n\nIBM 2314 disk drives and IBM 2540 card reader/punch at the University of\nMichigan\n\nSome of the most powerful early System/360s used high-speed head-per-track\ndrum storage devices. The 3,500 RPM 2301,^[44] which replaced the 7320, was\npart of the original System/360 announcement, with a capacity of 4 MB. The\n303.8 KB/s IBM 2303^[41]^: 74\u201376 was announced on January 31, 1966, with a\ncapacity of 3.913 MB. These were the only drums announced for System/360 and\nSystem/370, and their niche was later filled by fixed-head disks.\n\nThe 6,000 RPM 2305 appeared in 1970, with capacities of 5 MB (2305-1) or 11 MB\n(2305-2) per module.^[45]^[46] Although these devices did not have large\ncapacity, their speed and transfer rates made them attractive for high-\nperformance needs. A typical use was overlay linkage (e.g. for OS and\napplication subroutines) for program sections written to alternate in the same\nmemory regions. Fixed head disks and drums were particularly effective as\npaging devices on the early virtual memory systems. The 2305, although often\ncalled a \"drum\" was actually a head-per-track disk device, with 12 recording\nsurfaces and a data transfer rate up to 3 MB/s.\n\nRarely seen was the IBM 2321 Data Cell,^[47] a mechanically complex device\nthat contained multiple magnetic strips to hold data; strips could be randomly\naccessed, placed upon a cylinder-shaped drum for read/write operations; then\nreturned to an internal storage cartridge. The IBM Data Cell [noodle picker]\nwas among several IBM trademarked \"speedy\" mass online direct-access storage\nperipherals (reincarnated in recent years as \"virtual tape\" and automated tape\nlibrarian peripherals). The 2321 file had a capacity of 400 MB, at the time\nwhen the 2311 disk drive only had 7.2 MB. The IBM Data Cell was proposed to\nfill cost/capacity/speed gap between magnetic tapes\u2014which had high capacity\nwith relatively low cost per stored byte\u2014and disks, which had higher expense\nper byte. Some installations also found the electromechanical operation less\ndependable and opted for less mechanical forms of direct-access storage.\n\nThe Model 44 was unique in offering an integrated single-disk drive as a\nstandard feature. This drive used the 2315 \"ramkit\" cartridge and provided\n1,171,200 bytes of storage.^[27]^: 11\n\n### Tape drives[edit]\n\nIBM 2401 tape drives\n\nThe 2400-series of 1/2\" magnetic tape units consisted of the 2401 and 2402\nModels 1-6 Magnetic Tape Units, the 2403 Models 1-6 Magnetic Tape Unit and\nControl, the 2404 Models 1-3 Magnetic Tape Unit and Control, and the 2803/2804\nModels 1 and 2 Tape Control Units.^[48] The later 2415 Magnetic Tape Unit and\nControl, introduced in 1967 contained two, four, or six tape drives and a\ncontrol in a single unit, and was slower and cheaper.^[49] The 2415 drives and\ncontrol were not marketed separately.^[50] With System/360, IBM switched from\nIBM 7-track to 9-track tape format. Some 2400-series drives could be purchased\nthat read and wrote 7-track tapes for compatibility with the older IBM 729\ntape drives. In 1968, the IBM 2420 tape system was released, offering much\nhigher data rates, self-threading tape operation and 1600bpi packing\ndensity.^[51] It remained in the product line until 1979.^[52]\n\n### Unit record devices[edit]\n\nIBM 1403 line printer\n\n  * Punched card devices included the 2501 card reader and the 2540 card reader punch. Virtually every System/360 had a 2540. The 2560 MFCM (\"Multi-Function Card Machine\") reader/sorter/punch, listed above, was for the Model 20 only. It was notorious for reliability problems (earning humorous acronyms often involving \"...Card Muncher\" or \"Mal-Function Card Machine\").\n  * Line printers were the IBM 1403 and the slower IBM 1443.\n  * A paper tape reader, the IBM 2671, was introduced in 1964. It had a rated speed of 1,000 cps. There were also a paper tape reader and paper tape punch from an earlier era, available only as RPQs (Request Price Quotation). The 1054 (reader) and 1055 (punch), which were carried forward (like the 1052 console typewriter) from the IBM 1050 Teleprocessing System. All these devices operated at a maximum of 15.5 characters per second. The paper tape punch from the IBM 1080 System was also available by RPQ, but at a prohibitively expensive price.\n  * Optical character recognition (OCR) devices 1287 and later the 1288 were available on the 360's. The 1287 could read handwritten numerals, some OCR fonts, and cash register OCR paper tape reels. The 1288 'page reader' could handle up to legal size OCR font typewritten pages, as well as handwritten numerals. Both of these OCR devices employed a 'flying spot' scanning principle, with the raster scan provided by a large CRT, and the reflected light density changes were picked up by a high gain photomultiplier tube.\n  * Magnetic ink character recognition (MICR) was provided by the IBM 1412 and 1419 cheque sorters, with magnetic ink printing (for cheque books) on 1445 printers (a modified 1443 that used an MICR ribbon). 1412/1419 and 1445 were mainly used by banking institutions.\n\n## Remaining machines[edit]\n\nDespite having been sold or leased in very large numbers for a mainframe\nsystem of its era, only a few of System/360 computers remain\u2014mainly as non-\noperating property of museums or collectors. Examples of existing systems\ninclude:\n\n  * The Computer History Museum in Mountain View, California, has a non-working Model 30 on display, as do the Museum of Transport and Technology in Auckland, New Zealand, and the Vienna University of Technology in Austria.\n  * The University of Western Australia Computer Club has a complete Model 40 in storage.^[53]\n  * The KCG Computer Museum of Kyoto Computer Gakuin, Japan's first computer school in town,^[clarification needed] has an IBM System/360 Model 40 on display.^[54]\n  * Two IBM System/360 Model 20 processors along with numerous peripherals (forming two complete systems) located in Nuremberg, Germany, were purchased on eBay in April/May 2019 for \u20ac3,710 by two UK enthusiasts, Adam Bradley and Chris Blackburn, who, over the course of some months, moved the machine to Creslow Park in Buckinghamshire, United Kingdom. The system was in a small, abandoned building left untouched for decades, and apparently had been used in that building since all peripherals were still fully wired and interconnected. The systems are now in a dedicated machine room, and are undergoing restoration in preparation for public display in the future.^[55]\n  * The Living Computers: Museum + Labs has a 360 model 30.\n\nA running list of remaining System/360s that are more than just 'front panels'\ncan be found at World Inventory of remaining System/360 CPUs.\n\n## Gallery[edit]\n\nThis gallery shows the operator's console, with register value lamps, toggle\nswitches (middle of pictures), and \"emergency pull\" switch (upper right of\npictures) of the various models.\n\n  * Model 30\n\n  * Model 40\n\n  * Model 44\n\n  * Model 50\n\n  * Model 65\n\n  * Model 67\n\n  * Model 85\n\n  * Model 91\n\n## See also[edit]\n\n  * History of IBM\n  * List of IBM products\n  * IBM System/4 Pi\n  * Gerrit Blaauw\n  * Bob O. Evans\n\n## Notes[edit]\n\n  1. ^ There was no S/370 replacement for 44PS.\n  2. ^ IBM did provide upgrades to CP-67/CMS and TSS/360 that ran on S/370, but without 32-bit addressing.\n  3. ^ The RCA Spectra 70 had radically different architecture for interrupts and I/O. There were compatibility packages to allow operating systems for System/360 to run on a Spectra/70 and vice versa.\n  4. ^ Intended for real-time processing, the English Electric System 4 employed four processor states, each with its own set of general-purpose registers. Instructions available in the user state were identical to the System 360. The other states were entered according to the class or severity of interrupt. The fourth (the highest) state was entered when power failure was imminent, and enabled the processor to shut itself down in an orderly fashion.\n  5. ^ Performance calculated (not measured) based on a mix of instructions typical of scientific applications (\"Gibson Mix\") with the results in kilo Instructions Per Second (kIPS) per Longbottom, Roy. \"Computer Speeds From Instruction Mixes \u2013 pre-1960 to 1971\". Retrieved October 12, 2014. except for M95 and M195. The latter based upon estimates of performance relative to M65 from Pugh.\n  6. ^ Using commercial instruction mix (\"ADP Mix\")\n  7. ^ In System/360 architecture bit 12 of the program status word (PSW) controlled selection between the EBCDIC or a then proposed ASCII-8 mode signed decimal data. The proposed ASCII-8 ANSI standard was in the approval process when System/360 was announced but it was subsequently rejected and no ASCII peripheral devices were made available. This capability was not included in System/370; bit 12 of the PSW was redefined to switch between System/360 (BC mode) and System/370 (EC mode) PSW format.\n  8. ^ However, it could still be ordered, and a TSS/370 PRPQ was available on the S/370 and went through multiple releases.\n\n## References[edit]\n\n  1. ^ \"IBM System/360 Dates and Characteristics\". IBM. 2003-01-23.\n  2. ^ \"Why won't you DIE? IBM's S/360 and its legacy at 50\". The Register.\n  3. ^ \"System 360/30 announcement\". IBM. 2003-01-23.\n  4. ^ \"System/360 Model 91\". IBM. 2003-01-23.\n  5. ^ Jump up to: ^a ^b \"System/360 Announcement\" (press release), IBM Data Processing Division, April 7, 1964, webpage: IBM-PR360: states cycle time from \"...millionth-of-a-second to only 200 billionths-of-a-second,\" and \"...memory capacity ranges from 8,000 characters of information to more than 8,000,000.\"\n  6. ^ \"IBM - Former CEO John Opel - An Appreciation\". IBM. 24 October 2018.\n  7. ^ \"System/360 Time Sharing Computers\". DIGITAL COMPUTER NEWSLETTER. Vol. 17, no. 3. Office of Naval Research, Mathematical Sciences Division. July 1965. pp. 5\u20136.\n  8. ^ Elliott, Jim (2010). \"IBM Mainframes \u2013 45+ Years of Evolution\" (PDF). IBM Canada Ltd. p. 17. shows the announcement, ship and withdrawal dates for all S/360 models other than the transient models 64 and 66\n  9. ^ System/370 Model 165 Theory of Operation (Volume 8) 709/7090/7094/7094-II Compatibility Feature. Second Edition. IBM. February 1971. SY77-6835-0.\n  10. ^ System/360, Model 30 1401 Compatibility Feature (PDF). IBM. April 1964. A24-3255-1. \"Mode status (System/360, Model 30, mode or 1401 compatibility mode) is set during the read-in of the compatibility initialization deck.\"\n  11. ^ Emulating the IBM 7094 on the IBM Models 85 and 165 using OS/360 - Program Number for M/85: 360C-EU-734 - Program Number for M/165: 360C-EU-740 - OS Release 20 (Third ed.). IBM. November 1971. GC27-6951-2.\n  12. ^ 7094 OS Emulator on Models 165/168 Reference - Program Number for OS/MFT and OS/MVT - 360C-EU-740 and Program Number for OS/VS1 and OS/VS2 5744-AM1 (First ed.). IBM. GC27-6983-0.\n  13. ^ Jump up to: ^a ^b Gray, George T.; Smith, Ronald Q. (2001). \"Sperry Rand's Third-Generation Computers 1964-1980\". IEEE Annals of the History of Computing. 23 (1). IEEE Computer Society: 3\u201316. doi:10.1109/85.910845.\n  14. ^ \"Account of Soviet cloning of the IBM-360, from Pioneers of Soviet Computing by Boris Malinovsky\". Archived from the original on 2012-08-29. Retrieved 2012-09-30.\n  15. ^ Jump up to: ^a ^b ^c ^d ^e ^f ^g Pugh, Emerson W.; Johnson, Lyle R.; Palmer, John H. (1991). IBM's 360 and Early 370 Systems. MIT. ISBN 0-262-16123-0. References are to Appendix A unless page otherwise noted.\n  16. ^ Jump up to: ^a ^b Padegs, A. (September 1981). \"System/360 and Beyond\". IBM Journal of Research and Development. 25 (5). IBM: 377\u2013390. doi:10.1147/rd.255.0377.\n  17. ^ IBM System/360 Model 30 Functional Characteristics (PDF). IBM. August 1971.\n  18. ^ Jump up to: ^a ^b ^c ^d ^e ^f ^g ^h ^i ^j ^k IBM System/360 Installation Manual \u2013 Physical Planning (PDF). IBM. February 1974. GC22-6820-12.\n  19. ^ IBM System/360 Model 40 Functional Characteristics (PDF). IBM. A22-6881-2.\n  20. ^ IBM System/360 Model 50 Functional Characteristics (PDF). IBM. 1967. A22-6898-1.\n  21. ^ IBM System/360 Model 20 Disk Programming System Control and Service Programs (PDF). IBM. March 1969. C24-9006-4.\n  22. ^ Stuart, Sam (2014-05-23). \"IBM 360/20\". British Commercial Computer Digest: Pergamon Computer Data Series. Elsevier. pp. 3/65. ISBN 978-1-4831-4858-8.\n  23. ^ IBM System/360 Model 91 Functional Characteristics (PDF). IBM. November 1971. GA22-6907-3.\n  24. ^ IBM System/360 Model 65 Functional Characteristics (PDF). IBM. September 1968. A22-6884-3.\n  25. ^ IBM System/360 Model 75 Functional Characteristics (PDF). IBM. A22-6889-0.\n  26. ^ Jump up to: ^a ^b IBM System/360 Model 67 Functional Characteristics (PDF). Third Edition. IBM. February 1972. GA27-2719-2.\n  27. ^ Jump up to: ^a ^b IBM System/360 Model 44 Functional Characteristics (PDF). IBM. A22-6875-5.\n  28. ^ \"IBM System/360 Model 95\". IBM. 23 January 2003.\n  29. ^ IBM System/360 Model 25 Functional Characteristics (PDF). IBM. January 1968. A24-3510-0.\n  30. ^ IBM System/360 Model 85 Functional Characteristics (PDF). IBM. June 1968. A22-6916-1.\n  31. ^ IBM System/360 Model 195 Functional Characteristics (PDF). IBM. August 1970. GA22-6943-1.\n  32. ^ \"IBM System/360 Model 22\". IBM. 23 January 2003.\n  33. ^ NTIS (1979), I/O Channel Interface, National Technical Information Service, FIPSPUB60\n  34. ^ IBM System/360 Principles of Operation (PDF). First Edition. IBM. 1964. A22-6821-0.\n  35. ^ IBM System/360 Principles of Operation. Ninth Edition (last edition). Poughkeepsie, NY: IBM. November 1970. OCLC 1026271. A22-6821-8.\n  36. ^ IBM System/360 I/O Interface Channel to Control Unit Original Equipment Manufacturers' Information (PDF). Fifth Edition. IBM. A22-6843-3.\n  37. ^ \"Data-Streaming Feature\", IBM System/360 and System/370 I/O Interface Channel to Control Unit Original Equipment Manufacturers' Information (PDF) (Tenth ed.), IBM, February 1988, pp. 3-4\u20133-7\n  38. ^ System/370 Principles of Operation (PDF). IBM. September 1975. p. 189. GA22-7000-4. Retrieved December 30, 2015.\n  39. ^ IBM System/360 Operating System Operator's Guide for Display Consoles (PDF). IBM Corporation. 1972. p. 9. Retrieved July 13, 2020.\n  40. ^ IBM System/360 Operating System MVT Supervisor (PDF) (Eighth ed.). IBM. May 1973. GY28-6659-7. {{cite book}}: |work= ignored (help)\n  41. ^ Jump up to: ^a ^b ^c ^d ^e IBM System/360 Component Descriptions - 2841 and Associated DASD (PDF). Eighth Edition. IBM. December 1969. GA26-5988-7. Archived from the original (PDF) on 2011-10-14. Retrieved 2012-01-02.\n  42. ^ IBM 7320 Drum Storage (PDF), IBM Corporation, 1962, G22-6717, retrieved Dec 6, 2019\n  43. ^ Jump up to: ^a ^b IBM System/360 Component descriptions-2841 Storage Control Unit 2302 Disk Storage Models 3 and 4 2311 Disk Storage Drive 2321 Data Cell Drive Model 1 7320 Drum Storage (PDF), A26-5988-0, retrieved Dec 6, 2019\n  44. ^ IBM 2301 Drum Storage, Columbia University Computing History\n  45. ^ \"IBM 2305 product announcement\" (PDF).\n  46. ^ Reference Manual for IBM 2835 Storage Control and IBM 2305 Fixed Head Storage Module. Fifth Edition. IBM. November 1980. GA26-1689-4.\n  47. ^ The IBM 2321 Data Cell Drive, Columbia University Computing History\n  48. ^ IBM 2400-Series Magnetic Tape Units Original Equipment Manufacturers' Information (PDF) (fifth ed.).\n  49. ^ \"IBM 2415 Magnetic Tape Unit and Control for System/360\" (PDF).\n  50. ^ IBM 2400-Series Magnetic Tape Units Original Equipment Manufacturers' Information (PDF) (seventh ed.). November 1970.\n  51. ^ IBM 2420 Model 7 Magnetic Tape Unit Original Equipment Manufacturers' Information (PDF). October 1968.\n  52. ^ \"IBM 2420 magnetic tape unit\". IBM. 23 January 2003.\n  53. ^ \"University Computer Club\".\n  54. ^ Large and Midsized Computers at KCG Computer Museum (in Japanese) and KCG Computer Museum\n  55. ^ \"IBM 360 MODEL 20 RESCUE AND RESTORATION\". 2019. Retrieved 2019-05-20.\n\n## External links[edit]\n\nWikimedia Commons has media related to IBM System/360 mainframe line.\n\n  * \"Scanned manuals of IBM System/360\". bitsavers.org.\n  * IBM System/360 System Summary 11th edition August 1969\n  * IBM's announcement of the System/360\n  * Dates of announcement, first ship and withdrawal of all models of the IBM System/360\n  * Generations of the IBM 360/370/3090/390 by Lars Poulsen with multiple links and references\n  * Description of a large IBM System/360 model 75 installation at JPL\n  * \"The Beginning of I.T. Civilization - IBM's System/360 Mainframe\" by Mike Kahn\n  * Illustrations from \u201cIntroduction to IBM Data Processing Systems\u201d, 1968: contains photographs of IBM System/360 computers and peripherals\n  * IBM System 360 RPG Debugging Template and Keypunch Card\n  * Video of a two-hour lecture and panel discussion entitled The IBM System/360 Revolution, from the Computer History Museum on 2004-04-07\n  * Original vintage film from 1964 IBM System/360 Computer History Archives Project\n  * Several photos of a dual processor IBM 360/67 at the University of Michigan's academic Computing Center in the late 1960s or early 1970s are included in Dave Mills' article describing the Michigan Terminal System (MTS)\n  * Pictures of an IBM System/360 Model 67 at Newcastle (UK) University\n  * Pugh, Emerson W. (1984). Memories That Shaped an Industry: Decisions Leading to IBM System/360. MIT. ISBN 0-262-16094-3.\n  * \"THE IBM SYSTEM/360\". Computers and Automation. See also MICROELECTRONIC CIRCUITRY OF THE IBM SYSTEM/360, p. 37: 32\u201334, 36-36A, 36D, 40. May 1964.{{cite journal}}: CS1 maint: others (link)\n  * \"COMPUTERS AND DATA PROCESSORS, NORTH AMERICA: 2. International Business Machines Corporation, IBM System 360, White Plains, New York 10601\". Digital Computer Newsletter. 16 (4): 4\u201312. October 1964. Archived from the original on June 3, 2018.\n\n### From the IBM Journal of Research and Development[edit]\n\n  * Amdahl, G. M.; Blaauw, G. A.; Brooks, F. P. (1964). \"Architecture of the IBM System/360\". IBM Journal of Research and Development. 8 (2): 87\u2013101. doi:10.1147/rd.82.0087.\n  * Davis, E. M.; Harding, W. E.; Schwartz, R. S.; Corning, J. J. (1964). \"Solid Logic Technology: Versatile, High-Performance Microelectronics\". IBM Journal of Research and Development. 8 (2): 102\u2013114. doi:10.1147/rd.82.0102. S2CID 13288023.\n\n### From IBM Systems Journal[edit]\n\n  * Blaauw, G. A.; Brooks, F. P. (1964). \"The structure of SYSTEM/360: Part I\u2014Outline of the logical structure\". IBM Systems Journal. 3 (2): 119\u2013135. doi:10.1147/sj.32.0118.\n  * Stevens, W. Y. (1964). \"The structure of SYSTEM/360, Part II: System implementations\". IBM Systems Journal. 3 (2): 136\u2013143. doi:10.1147/sj.32.0136.\n  * Amdahl, G. M. (1964). \"The structure of SYSTEM/360, Part III: Processing unit design considerations\". IBM Systems Journal. 3 (2): 144\u2013164. doi:10.1147/sj.32.0144.\n  * Padegs, A. (1964). \"The structure of SYSTEM/360, Part IV: Channel design considerations\". IBM Systems Journal. 3 (2): 165\u2013179. doi:10.1147/sj.32.0165.\n  * Blaauw, G. A. (1964). \"The structure of SYSTEM/360, Part V: Multisystem organization\". IBM Systems Journal. 3 (2): 181\u2013195. doi:10.1147/sj.32.0181.\n  * Tucker, S. G. (1967). \"Microprogram control for SYSTEM/360\". IBM Systems Journal. 6 (4): 222\u2013241. doi:10.1147/sj.64.0222.\n\n  * v\n  * t\n  * e\n\nIBM System/360  \n---  \nArchitecture  \nModels| | Standard| \n\n  * Model 20\n  * Model 22\n  * Model 25\n  * Model 30\n  * Model 40\n  * Model 44\n  * Model 50\n  * Model 65\n  * Model 67\n  * Model 75\n  * Model 85\n  * Model 91\n  * Model 95\n  * Model 195\n\n  \n---|---  \nCustom|\n\n  * IBM 9020 (FAA)\n\n  \nPeripherals|\n\n  * 270x communications controllers\n  * 3705 Communications Controller\n  * 2540 punched-card reader\u2013writer\n\n  \nSoftware|\n\n  * Basic Operating System/360\n  * Tape Operating System/360\n  * System/360 Operating System (OS/360)\n  * Time Sharing System\n\n  \nInnovations|\n\n  * Bus and Tag\n  * Channel I/O\n  * Program status word\n  * Solid Logic Technology\n\n  \nRelated|\n\n  * Basic Assembly Language and successors\n  * ES EVM\n  * Hexadecimal floating-point\n  * Language for Systems Development\n  * PL360\n\n  \n  \n  * System/360\n  * System/370\n  * IBM System/390\n  * IBM zSeries\n  * System z9\n  * System z10\n  * IBM zEnterprise System\n  * IBM Z\n\n  \n  \nAuthority control databases: National|\n\n  * Israel\n  * United States\n\n  \n---|---  \n  \nRetrieved from\n\"https://en.wikipedia.org/w/index.php?title=IBM_System/360&oldid=1192066767\"\n\nCategories:\n\n  * IBM System/360 mainframe line\n  * Computing platforms\n  * 1960s software\n  * Computer-related introductions in 1964\n  * 32-bit computers\n\nHidden categories:\n\n  * CS1 errors: periodical ignored\n  * Articles with short description\n  * Short description is different from Wikidata\n  * All articles with unsourced statements\n  * Articles with unsourced statements from October 2017\n  * Articles needing cleanup from November 2020\n  * All pages needing cleanup\n  * Articles with sections that need to be turned into prose from November 2020\n  * Wikipedia articles needing clarification from November 2022\n  * Commons category link is on Wikidata\n  * CS1 maint: others\n  * Articles with J9U identifiers\n  * Articles with LCCN identifiers\n\n  * This page was last edited on 27 December 2023, at 12:11 (UTC).\n  * Text is available under the Creative Commons Attribution-ShareAlike License 4.0; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia\u00ae is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.\n\n  * Privacy policy\n  * About Wikipedia\n  * Disclaimers\n  * Contact Wikipedia\n  * Code of Conduct\n  * Developers\n  * Statistics\n  * Cookie statement\n  * Mobile view\n  * Edit preview settings\n\n", "frontpage": false}
