{"aid": "40090164", "title": "Dr Wenowdis: Specializing dynamic language C extensions using type information", "url": "https://arxiv.org/abs/2403.02420", "domain": "arxiv.org", "votes": 1, "user": "matt_d", "posted_at": "2024-04-19 18:11:22", "comments": 0, "source_title": "Dr Wenowdis: Specializing dynamic language C extensions using type information", "source_text": "[2403.02420] Dr Wenowdis: Specializing dynamic language C extensions using\ntype information\n\nSkip to main content\n\nWe gratefully acknowledge support from the Simons Foundation, member\ninstitutions, and all contributors. Donate\n\n> cs > arXiv:2403.02420\n\n# Computer Science > Programming Languages\n\narXiv:2403.02420 (cs)\n\n[Submitted on 4 Mar 2024]\n\n# Title:Dr Wenowdis: Specializing dynamic language C extensions using type\ninformation\n\nAuthors:Maxwell Bernstein, CF Bolz-Tereick\n\nView a PDF of the paper titled Dr Wenowdis: Specializing dynamic language C\nextensions using type information, by Maxwell Bernstein and 1 other authors\n\nView PDF HTML (experimental)\n\n> Abstract:C-based interpreters such as CPython make extensive use of C\n> \"extension\" code, which is opaque to static analysis tools and faster\n> runtimes with JIT compilers, such as PyPy. Not only are the extensions\n> opaque, but the interface between the dynamic language types and the C types\n> can introduce impedance. We hypothesise that frequent calls to C extension\n> code introduce significant overhead that is often unnecessary. We validate\n> this hypothesis by introducing a simple technique, \"typed methods\", which\n> allow selected C extension functions to have additional metadata attached to\n> them in a backward-compatible way. This additional metadata makes it much\n> easier for a JIT compiler (and as we show, even an interpreter!) to\n> significantly reduce the call and return overhead. Although we have\n> prototyped typed methods in PyPy, we suspect that the same technique is\n> applicable to a wider variety of language runtimes and that the information\n> can also be consumed by static analysis tooling.\n\nSubjects:| Programming Languages (cs.PL)  \n---|---  \nACM classes:| D.3.4  \nCite as:| arXiv:2403.02420 [cs.PL]  \n(or arXiv:2403.02420v1 [cs.PL] for this version)  \nhttps://doi.org/10.48550/arXiv.2403.02420arXiv-issued DOI via DataCite  \n  \n## Submission history\n\nFrom: Maxwell Bernstein [view email] [v1] Mon, 4 Mar 2024 19:12:55 UTC (658\nKB)\n\nFull-text links:\n\n## Access Paper:\n\nView a PDF of the paper titled Dr Wenowdis: Specializing dynamic language C\nextensions using type information, by Maxwell Bernstein and 1 other authors\n\n  * View PDF\n  * HTML (experimental)\n  * TeX Source\n  * Other Formats\n\nview license\n\nCurrent browse context:\n\ncs.PL\n\n< prev | next >\n\nnew | recent | 2403\n\nChange to browse by:\n\ncs\n\n### References & Citations\n\n  * NASA ADS\n  * Google Scholar\n  * Semantic Scholar\n\na export BibTeX citation Loading...\n\n## BibTeX formatted citation\n\n\u00d7\n\nData provided by:\n\n### Bookmark\n\n# Bibliographic and Citation Tools\n\nBibliographic Explorer (What is the Explorer?)\n\nLitmaps (What is Litmaps?)\n\nscite Smart Citations (What are Smart Citations?)\n\n# Code, Data and Media Associated with this Article\n\nCatalyzeX Code Finder for Papers (What is CatalyzeX?)\n\nDagsHub (What is DagsHub?)\n\nGotit.pub (What is GotitPub?)\n\nPapers with Code (What is Papers with Code?)\n\nScienceCast (What is ScienceCast?)\n\n# Demos\n\nReplicate (What is Replicate?)\n\nHugging Face Spaces (What is Spaces?)\n\nTXYZ.AI (What is TXYZ.AI?)\n\n# Recommenders and Search Tools\n\nInfluence Flower (What are Influence Flowers?)\n\nConnected Papers (What is Connected Papers?)\n\nCORE Recommender (What is CORE?)\n\n  * Author\n  * Venue\n  * Institution\n  * Topic\n\n# arXivLabs: experimental projects with community collaborators\n\narXivLabs is a framework that allows collaborators to develop and share new\narXiv features directly on our website.\n\nBoth individuals and organizations that work with arXivLabs have embraced and\naccepted our values of openness, community, excellence, and user data privacy.\narXiv is committed to these values and only works with partners that adhere to\nthem.\n\nHave an idea for a project that will add value for arXiv's community? Learn\nmore about arXivLabs.\n\nWhich authors of this paper are endorsers? | Disable MathJax (What is MathJax?)\n\n  * About\n  * Help\n\n  * Contact\n  * Subscribe\n\n  * Copyright\n  * Privacy Policy\n\n  * Web Accessibility Assistance\n  * arXiv Operational Status Get status notifications via email or slack\n\n", "frontpage": false}
