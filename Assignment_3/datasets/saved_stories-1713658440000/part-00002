{"aid": "40099447", "title": "Cloud Native Computing in 2024 \u2013 feeling the pulse at Kubecon", "url": "https://www.tweag.io/blog/2024-04-18-cloud-native-pulse-2024/", "domain": "tweag.io", "votes": 1, "user": "asymmetric", "posted_at": "2024-04-20 18:12:45", "comments": 0, "source_title": "Cloud Native Computing in 2024\u2014feeling the pulse at Kubecon", "source_text": "Cloud Native Computing in 2024\u2014feeling the pulse at Kubecon - Tweag\n\nTechnical groups\n\nOpen source\n\nCareers\n\nResearch\n\nBlog\n\nContact\n\nConsulting services\n\nTechnical groups\n\nOpen source\n\nCareers\n\nResearch\n\nBlog\n\nContact\n\nConsulting services\n\n## Cloud Native Computing in 2024\u2014feeling the pulse at Kubecon\n\n18 April 2024 \u2014 by Yann Hamdaoui, Matthias Meschede\n\nLast year, at the end of winter, we wrote our impressions of the trends and\nevolution of infrastructure and configuration management after attending\nFOSDEM and CfgMgmtCamp. We\u2019re at it again, but with Kubecon this year, the\nbiggest cloud native computing conference.\n\nIf you\u2019ve never heard of cloud native computing before, it has a number of\ndefinitions online, but the simplest one is that it\u2019s mostly about Kubernetes.\n\nKubecon is a huge event with thousands of attendees. The conference spanned\nseveral levels of the main convention center in Paris, with a myriad of\nconference rooms and a whole floor for sponsor booths. FOSDEM already felt\nhuge compared to academic conferences, but Kubecon is even bigger.\n\nAlthough the program was filled with appealing talks, we ended up spending\nmost of our time chatting with people and visiting booths, something you can\u2019t\ndo as easily online.\n\n## Nix for the win\n\nThe very first morning, as we were walking around and waiting for the caffeine\nto kick in, we immediately spotted a Nix logo on someone\u2019s sweatshirt. No\nbetter way to start the day than to meet with fellow Nix users!\n\nAnd Nix was in general a great entry point for conversations at this year\u2019s\nKubecon. We expected it to still be an outsider at an event about container-\ndriven technology, but the problems that \u201ccontainers as a default packaging\nunit\u201d can\u2019t solve were so present that Nix\u2019s value proposition is attuned to\nwhat everyone had on their minds anyway. In other words, Nix is now known\nenough as to serve as a conversation starter: the company might not use it,\nbut many people have heard about it and were very interested to hear insights\nfrom big contributors like Tweag, the Modus Create OSPO.\n\n## Cybersecurity\n\nMany security products were represented. Securing cloud-native applications is\nindeed a difficult matter, as their many layers and components expose a large\nattack surface.\n\nFor one, the schedule included a security track, with a fair share of talks\nbeing about SBOMs tying back into the problem of containers that ship an\nopaque content without inventory. Nix, as a solution to this problem, was a\ngreat conversation starter here as well, especially for fellow Nixer Matthias,\nwho can talk for hours about how Nix is the best (and maybe only) technology\nfor automatically deriving complete SBOMs of a piece of software, in a\ntrustworthy manner. Our own NLNet-funded project genealogos, which does\nexactly that, is recently getting a lot of interest.\n\nBesides the application code and what goes in it, another focus was avoiding\nmisconfiguration of the cloud infrastructure layer, of the Kubernetes cluster,\nand anything else going into container images. Many companies propose SaaS\ncombinations of static linters scanning the configuration files directly with\nvarious policy rules, heuristics and dynamic monitoring of secure cloud native\napplications. Our configuration language Nickel was very relevant here: one of\nits raisons d\u2019\u00eatre is to provide efficient tools (types, contracts and a\npowerful LSP) to detect and fix misconfigurations as early as possible. We had\ncool conversations around writing custom security policies as Nickel contracts\nwith the new LSP background contract checking (introduced in 1.5) reporting\nnon-compliance live in the editor \u2014 in that light, contracts are basically a\nlightweight way to program an LSP.\n\n## Internal Developer Platforms (IDPs)\n\nIDPs were a hot topic at Kubecon. Tweag\u2019s mission, as the OSPO of a leading\nsoftware development consultancy, is to improve developer experience across\nthe software lifecycle, which makes IDPs a natural topic for us.\n\nAn IDP is a platform - usually a web interface in practice - which glues\nseveral developer tools and services together and acts as the central entry\npoint for most developer workflows. It\u2019s centered around the idea of self-\nservice, not unlike the console of cloud providers, but configurable for your\nexact use case and open to integrate tools across ecosystem boundaries. We\nalready emphasized this emerging new abstraction in last year\u2019s post. Example\nuse cases are routinely deploying new infrastructure with just a few clicks,\nrather than requiring to sync and to send messages back-and-forth to the\nDevOps team. IDPs don\u2019t replace other tools but offer a unified interface,\nusually with customized presets, to interact with repositories, internal data\nand infrastructure.\n\nBackstage, an open-source IDP developed by Spotify, had its own sub-conference\nat Kubecon. Several products are built on top of it as well: it\u2019s not really a\nready-to-use solution but rather the engine to build a custom IDP for your\ncompany, which leaves room for turnkey offers. We feel that such integrated,\ncentralized and simple-to-use services may become a standard in the future:\nthink of how much GitHub (or an equivalent) is a central part of our modern\nworkflow, but also of how many things it frustratingly can\u2019t do (in particular\ninfrastructure).\n\n## Cloud & AI\n\nMany Kubernetes-based MLOps companies propose services to make it easy to\ndeploy and manage scalable AI models in the cloud.\n\nIn the other direction, with the advent of generative AI, there was no doubt\nthat we would see AI-based products to ease the automation of infrastructure-\nrelated tasks. We attended a demo of a multi-agent system which integrates\nwith e.g. Slack, where you can ask a bot to perform end-to-end tasks (which\nincludes interacting with several systems, like deploying something to the\ncloud, editing a Jira ticket and pushing something to a GitHub repo) or ask\nhigh-level questions, such as \u201cwhich AWS users don\u2019t have MFA enabled\u201d.\n\nIt\u2019s hard to tell from a demo how solid this would be in a real production\nsystem. I also don\u2019t know if I would trust an AI agent to perform tasks\nwithout proper validation from a human (though there is a mode where\nconfirmation is required before applying changes). There are also security\nconcerns around having those agents run somewhere with write access to your\ninfrastructure.\n\nPutting those important questions aside, the demo was still quite impressive.\nIt makes sense to automate those small boring tasks which usually require you\nto manually interact with several different platforms and are often quite\nmechanical indeed.\n\n## OSPO\n\nWe attended a Birds-of-a-Feather session on Open Source Program Offices\n(OSPO). While the small number of participants was a bit disappointing\n(between 10 and 15, compared to the size of the conference), the small group\ndiscussions were still engrossing, and we were pleased to meet people from\nother OSPOs as well as engineers wanting to push for an OSPO in their own\ncompany.\n\nThe generally small size OSPOs (including from very large and influential tech\ncompanies) and their low maturity from a strategic point of view was\nsurprising to us. Many OSPOs seem to be stuck in tactical concerns, managing\nlicense and IP issues that can occur when developers open up company-owned\nrepos. In such a situation, all OSPO members are fully occupied by the large\nnumber of requests they get. But the most interesting questions: how to share\nbenefits and costs by working efficiently with open source communities, how to\nprovide strategic guidance and support, and how to gain visibility in\ncommunities of interest were only addressed by few. A general concern seemed\nto be generally a lack of understanding by upper management about the real\nstrategic power that an OSPO can provide. From that perspective, Tweag,\nalthough a pink unicorn as a consulting OSPO, is quite far on the maturity\ncurve with concrete strategical and technical firepower through technical\ngroups, and our open-source portfolio (plus the projects that we contribute to\nbut aren\u2019t ours).\n\n## Concluding words\n\nKubecon was a great experience, and we\u2019re looking forward to the next one. We\nare excited about the advent of Internal Developer Platforms and the concept\nof self-serving infrastructure, which are important aspects of developer\nexperience.\n\nOn the technological side, the cloud-native world seems to be dominated by\nKubernetes with Helm charts and YAML, and Docker, while the technologies we\nbelieve in and are actively developing are still outsiders in the space (of\ncourse they aren\u2019t a full replacement for what currently exists, but they\ncould fill many gaps). I\u2019m thinking in particular about Nix (and more\ngenerally about declarative, hermetic and reproducible builds and deployments)\nand Nickel (better configuration languages and management tools). But,\nconversation after conversation, conference after conference, we\u2019re seeing\nmore and more interests in new paradigms, sometimes because those technologies\nare best equipped - by far - to solve problems that are on everyone\u2019s radar\n(e.g. software traceability through SBOMs with Nix) thanks to their different\napproach.\n\nAbout the authors\n\nYann HamdaouiYann is working at Tweag on the Nickel programming language, a\nnext-generation configuration language to manage the growing complexity of\nInfrastructure-as-Code and a candidate successor for the language Nix.\n\nMatthias MeschedeMatthias initiates and coordinates projects at Tweag. He says\nhe's a generalist \"half scientist, half musician, and a third half of other\nthings\" but you'll have to ask him what that means exactly! He lives in Paris,\nand is regularly in Tweag's Paris office where you'll most likely find him in\na discussion, writing long-form texts in vim or reading and occasionally\nwriting code.\n\nIf you enjoyed this article, you might be interested in joining the Tweag\nteam.\n\nThis article is licensed under a Creative Commons Attribution 4.0\nInternational license.\n\n\u2190 Evaluating retrieval in RAGs: a practical framework\n\nCompany\n\nAboutOpen SourceCareersContact Us\n\nWhat we do\n\nStrategyProduct DevelopmentPlatform ModernizationDigital OperationsWork\n\nInsights\n\nModus BlogOspo BlogResearchInnovation podcast\n\nConnect with us\n\n\u00a9 2024 Modus Create, LLC\n\nPrivacy PolicySitemap\n\n", "frontpage": false}
