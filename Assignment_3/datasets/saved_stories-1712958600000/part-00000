{"aid": "40014238", "title": "Shape typing in Python", "url": "https://jameshfisher.com/2024/04/12/shape-typing-in-python/", "domain": "jameshfisher.com", "votes": 2, "user": "jamesfisher", "posted_at": "2024-04-12 15:47:41", "comments": 0, "source_title": "Shape typing in Python", "source_text": "Shape typing in Python\n\n# Shape typing in Python\n\nWhile I was looking the other way, Python got advanced static types! Here\u2019s\nmatrix multiplication, describing the input shapes and its output shape:\n\n    \n    \n    def mat_mul[ N, K, M ]( m1: Mat[N, M], m2: Mat[M, K], ) -> Mat[N, K]: return m1 @ m2\n\nThere\u2019s a lot going on here! In traditional Python, we\u2019d write:\n\n    \n    \n    def mat_mul(m1, m2): return m1 @ m2\n\nThen if we used the wrong shapes, we\u2019d get a runtime error, like this:\n\n    \n    \n    >>> m1 @ m2 Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 3)\n\nOur type-safe wrapper mat_mul uses a type Mat[N, M], which I defined as:\n\n    \n    \n    type Mat[N, M] = np.ndarray[ tuple[N, M], np.dtype[np.float64], ]\n\nIf we try to multiply matrices of the wrong shape, Pyright gives a type error.\n\nThis uses Numpy\u2019s np.ndarray type, which takes two arguments that describe the\nshape and dtype. For example, we can describe a 2x3 matrix of integers as:\n\n    \n    \n    mat2x3: np.ndarray[ tuple[Literal[2], Literal[3]], np.dtype[np.int64], ] = np.array([[1,2,3],[4,5,6]])\n\nAt the moment, most of the numpy API does not use these type parameters. For\nexample, np.array(...) just gives you an np.ndarray[Any, Any]. So we have to\nmake our own type-safe wrappers.\n\nTagged #python, #types, #programming.\n\n\ud83d\udc4b I'm Jim, a full-stack product engineer. Want to build an amazing product and\na profitable business? Read more about me or Get in touch!\n\n### Similar posts\n\nA C typedef convention for complex types\n\nA convention for expressing complex C types using typedef and a \u201creverse\nPolish notation\u201d syntax to improve readability. 2016-11-24\n\nDoes C have generics?\n\nC\u2019s _Generic is not true generics. It requires manual implementation of\nconcrete type cases, unlike generics that automatically generate code for any\ntype. 2017-08-19\n\nWhat is the type of a constant in C?\n\nIntegers in C are int by default, while suffixes like L and U denote long and\nunsigned types. Floats are double without a suffix. 2017-01-23\n\nThe golden rule of PR reviews\n\nThe \u201cgolden rule\u201d of code reviews is to approve improvements. Approve pull\nrequests that fix bugs, even if the implementation isn\u2019t ideal. 2023-10-07\n\nExecutables in npm?\n\nNPM packages can contain executables, not just Node.js modules. NPM provides\nfeatures to help distribute and run these executables, such as the bin field\nin package.json and the npm run-script command. 2020-10-02\n\nWhy is the contentRect of my NSWindow ignored?\n\nCalling setFrameAutosaveName on an NSWindow causes its size and position to be\nsaved to user defaults, overriding the contentRect passed to the constructor.\nTo avoid this, do not call setFrameAutosaveName. 2020-07-10\n\n### Similar posts\n\nA C typedef convention for complex types\n\nA convention for expressing complex C types using typedef and a \u201creverse\nPolish notation\u201d syntax to improve readability. 2016-11-24\n\nWhat is the type of a constant in C?\n\nIntegers in C are int by default, while suffixes like L and U denote long and\nunsigned types. Floats are double without a suffix. 2017-01-23\n\nDoes C have generics?\n\nC\u2019s _Generic is not true generics. It requires manual implementation of\nconcrete type cases, unlike generics that automatically generate code for any\ntype. 2017-08-19\n\nThe golden rule of PR reviews\n\nThe \u201cgolden rule\u201d of code reviews is to approve improvements. Approve pull\nrequests that fix bugs, even if the implementation isn\u2019t ideal. 2023-10-07\n\nExecutables in npm?\n\nNPM packages can contain executables, not just Node.js modules. NPM provides\nfeatures to help distribute and run these executables, such as the bin field\nin package.json and the npm run-script command. 2020-10-02\n\nWhy is the contentRect of my NSWindow ignored?\n\nCalling setFrameAutosaveName on an NSWindow causes its size and position to be\nsaved to user defaults, overriding the contentRect passed to the constructor.\nTo avoid this, do not call setFrameAutosaveName. 2020-07-10\n\n### More by Jim\n\nWhat does the dot do in JavaScript?\n\nfoo.bar, foo.bar(), or foo.bar = baz - what do they mean? A deep dive into\nprototypical inheritance and getters/setters. 2020-11-01\n\nSmear phishing: a new Android vulnerability\n\nTrick Android to display an SMS as coming from any contact. Convincing\nphishing vuln, but still unpatched. 2020-08-06\n\nA probabilistic pub quiz for nerds\n\nA \u201ctrue or false\u201d quiz where you respond with your confidence level, and the\noptimal strategy is to report your true belief. 2020-04-26\n\nTime is running out to catch COVID-19\n\nSimulation shows it\u2019s rational to deliberately infect yourself with COVID-19\nearly on to get treatment, but after healthcare capacity is exceeded, it\u2019s\nbetter to avoid infection. Includes interactive parameters and visualizations.\n2020-03-14\n\nThe inception bar: a new phishing method\n\nA new phishing technique that displays a fake URL bar in Chrome for mobile. A\nkey innovation is the \u201cscroll jail\u201d that traps the user in a fake browser.\n2019-04-27\n\nThe hacker hype cycle\n\nI got started with simple web development, but because enamored with\nincreasingly esoteric programming concepts, leading to a \u201ctrough of hipster\ntechnologies\u201d before returning to more productive work. 2019-03-23\n\nProject C-43: the lost origins of asymmetric crypto\n\nBob invents asymmetric cryptography by playing loud white noise to obscure\nAlice\u2019s message, which he can cancel out but an eavesdropper cannot. This\nidea, published in 1944 by Walter Koenig Jr., is the forgotten origin of\nasymmetric crypto. 2019-02-16\n\nHow Hacker News stays interesting\n\nHacker News buried my post on conspiracy theories in my family due to\noverheated discussion, not censorship. Moderation keeps the site focused on\ninteresting technical content. 2019-01-26\n\nMy parents are Flat-Earthers\n\nFor decades, my parents have been working up to Flat-Earther beliefs. From\nEgyptology to Jehovah\u2019s Witnesses to theories that human built the Moon\nbillions of years in the future. Surprisingly, it doesn\u2019t affect their\nsuccessful lives very much. For me, it\u2019s a fun family pastime. 2019-01-20\n\nThe dots do matter: how to scam a Gmail user\n\nGmail\u2019s \u201cdots don\u2019t matter\u201d feature lets scammers create an account on, say,\nNetflix, with your email address but different dots. Results in convincing\nphishing emails. 2018-04-07\n\nThe sorry state of OpenSSL usability\n\nOpenSSL\u2019s inadequate documentation, confusing key formats, and deprecated\ninterfaces make it difficult to use, despite its importance. 2017-12-02\n\nI hate telephones\n\nI hate telephones. Some rational reasons: lack of authentication, no spam\nfiltering, forced synchronous communication. But also just a visceral fear.\n2017-11-08\n\nThe Three Ts of Time, Thought and Typing: measuring cost on the web\n\nBusinesses often tout \u201cfree\u201d services, but the real costs come in terms of\ntime, thought, and typing required from users. Reducing these \u201cThree Ts\u201d is\nkey to improving sign-up flows and increasing conversions. 2017-10-26\n\nGranddad died today\n\nGranddad died. The unspoken practice of death-by-dehydration in the NHS. The\nLiverpool Care Pathway. Assisted dying in the UK. The importance of planning\nin end-of-life care. 2017-05-19\n\nHow do I call a program in C, setting up standard pipes?\n\nA C function to create a new process, set up its standard input/output/error\npipes, and return a struct containing the process ID and pipe file\ndescriptors. 2017-02-17\n\nYour syntax highlighter is wrong\n\nSyntax highlighters make value judgments about code. Most highlighters judge\nthat comments are cruft, and try to hide them. Most diff viewers judge that\ncode deletions are bad. 2014-05-11\n\nThis page copyright James Fisher 2024. Content is not associated with my\nemployer. Found an error? Edit this page.\n\nJim Fisher\n\nCV\n\nSpeaking\n\nBlogroll\n\nRSS\n\nTigYog\n\nKickabout\n\n", "frontpage": false}
