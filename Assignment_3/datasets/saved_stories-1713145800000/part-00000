{"aid": "40033840", "title": "Vanguard X League of Legends", "url": "https://www.leagueoflegends.com/en-us/news/dev/dev-vanguard-x-lol/", "domain": "leagueoflegends.com", "votes": 1, "user": "cowthulhu", "posted_at": "2024-04-14 19:48:22", "comments": 0, "source_title": "/dev: Vanguard x LoL - League of Legends", "source_text": "/dev: Vanguard x LoL - League of Legends\n\nOpens in a new window Opens an external website Opens an external website in a\nnew window\n\nThis website utilizes technologies such as cookies to enable essential site\nfunctionality, as well as for analytics, personalization, and targeted\nadvertising purposes. You may change your settings at any time or accept the\ndefault settings. You may close this banner to continue with only essential\ncookies. Privacy Notice\n\nStorage Preferences\n\nDev\n\n/dev: Vanguard x LoL\n\nRiot\u2019s Vanguard comes to League.\n\n3 days ago\n\nDevAuthormirageofpenguins\n\n  * Copied to clipboard\n\n## The \"How\" and \"Why\" of Anti-Cheat\n\nIt's getting to be about that time, and I must once again extend to you our\nquadrennial anti-cheat greetings. I'm \"mirageofpenguins,\" an anti-cheat\nartisan with lifetime 85 million bans served, and I'm manifesting today to\ntalk to y'all about Vanguard.\n\nYou actually may've already suffered through our LoL anti-cheat literature in\nthe past, and here is some of the recommended prerequisite reading. Feel free\nto skim through it, but this material is now known to the state of California\nto cause bone lengthening and will not be on this semester's midterm.\n\nThe news of Vanguard in LoL was certainly divisive\u2014after all, the majority of\nplayers aren't cheating, and no one is exactly thrilled at the notion of\ninstalling more stuff solely because cheaters can't figure out how to fight\nfair. Anti-cheat is a shadowy game, and the darkness we usually operate in has\nthe unfortunate side-effect of generating a lot of confusion, concern, and\nfrankly, misinformation.\n\nSo strap in, and we'll try to shine the brightest light possible on just how\nVanguard gets the job done. This one's a little long, but I promise I put a\nfew pictures in it.\n\n### Cheating in League 101\n\nLeague of Legends is a fairly secure video game. The server simulates the\nentirety of the game state, and the client is really only responsible for\nmaking \"requests\" to it. Often referred to as an authoritative model, it\nessentially means that our server is the final arbiter of truth, and things\nlike \"sending spells on cooldown\" should fail once we've added enough server\nvalidation. This is why we don't see as many exploits anymore, and instead,\nmost cheaters resort to input automation, or more colloquially, \"scripting.\"\n\nScripting developers create platforms that are essentially wrappers for the\nLoL client. They rebroadcast the game as an event stream and allow the end-\nuser to create (or more likely, copy and paste) a selection of \"scripts\" that\nautomate certain behaviors in response to these events. The end result is\nusually a frame-perfect Zeri kiting on what appears to be a near-lethal dose\nof caffeine or a god-touched Cassiopeia that, through the power of prayer, has\nbeen rendered untouchable by any skillshot. It's not fun to play against\ncheaters, and worse, once you know scripts are out there, it's hard not to\nsuspect other players of using them.\n\n### Scripter Persistence\n\nOur first problem is that cheating is addictive, and scripters are persistent.\nLoL is a free-to-play game, and one ban is never enough. Regular suspensions\nhave stood up a saturated secondary account market, and the barrier to reentry\nis only the cost of a fresh level 30, which at the time of this article is\nabout $1.99 with a side of large fries. This type of quantity-over-quality\npricing strategy is made possible, because\u2014you guessed it\u2014the accounts\nthemselves are leveled by scripting applications, resulting in a loop that\nallows cheaters to iterate against us indefinitely.\n\nAn examination into the average scripter's total lack of desire to get good is\nbest visualized in an antiquated medium known by today's historians as \"The\nLine Graph,\" and the one pictured above is a percentage of LoL games played\nwith at least one cheater or botter in them. As always, I've graphed the\nnumber of accounts banned on the second y-axis, so that you may see the volume\nand taste their pain.\n\nThroughout 2023, the lovable rascals on our anti-cheat team have been sneaking\ndetections into the LoL client that offer glimpses into the size of the\nscripting epidemic. These cheeky security maneuvers, also called \"honeypots\"\nor \"spicy values,\" only work once, as any bans issued on them will be met with\nexcess scrutiny, followed by their immediate discovery in cheat communities.\nWe only have so many tricks up our sleeves, so this pattern is about as\nsustainable as bunker fuel. However, we now have access to mankind's greatest\nweapon: Statistics.\n\nIn recent months, as many as 1 in 15 games globally has had a scripter or\nbotter in it, but in some regions, this number is as high as 1 in 5. Cheating\nisn't really region-specific, cheaters just go wherever cheating is easiest.\nIn eastern countries, we see higher rates of scripting, because they're\ngetting spillover from cheaters in China and Korea, both of which have region-\nexclusive anti-cheats and more importantly, identity requirements for gaming\nfrom their regional governments.\n\nIt's only worth making cheats if there's glory worth stealing, so attempts at\ncheating are actually the sign of a successful competitive environment.\nHowever, this is far too many for a game with Olympic-level ambitions, and if\nwe want the win to mean something, we must protect its integrity.\n\n### Scripter Effectiveness\n\nThe second problem is that scripting is rather effective, and to their credit\n(if you can call it that), scripters have gotten quite good at playing without\nthe use of their hands. When piloted optimally, scripter win rates hover\naround 80% in Ranked games, continually propelling their unyielding supply of\naccounts through the ladder.\n\nAs scripting volume increases, we're starting to see stratification of their\ndistribution amongst the tiers again, with bias towards higher ranks. It's\nalso important to me that you know I personally digested and averaged the\nranked regalia icons for the hex colors that rendered this masterpiece. It\ntook me over an hour, and my eyes won't stop watering.\n\nThe polyphonic rainbow you're now bearing witness to is the percentage of\nRanked games completed with a cheater, bucketed by what tier the scripter was\nin at the end of the game. You are reading that correctly, more than 10% of\nMaster+ games had a cheater in them. Even Challenger, which we manually audit\non a regular cadence, has suffered from a significant number of cheaters.\nStatistically, this is what analysts might refer to as a \"Bad Line,\" and we're\nseriously not jazzed about the trend.\n\nWorse still, we can't see how that trend continues, because the current anti-\ncheat is beaten.\n\n### Packman (Not a Typo)\n\nFor all the reasons we're about to get into, we didn't want to push the\nVanguard button until we absolutely had to, so up until now, League has been\nsurviving (for nearly six years) on an anti-tamper called \"Packman.\" However,\ndue to an unrelenting volley of cheats and bans, the anti-cheat technological\nspace moves at recursive lightspeed. After factoring in for hyperbaric time-\ndilation, the resulting bistromath makes Packman roughly 250 million \"cheat-\nyears\" old, pushing the pre-mesozoic boundary.\n\nPackman's primary objective is to make analysis of the game binary more\ndifficult, and this includes \"hiding\" the anti-cheat detections that it\nappends to a game client. The problem is that dumping the deobfuscated game\nbinary and bypassing the anti-cheat checks are now something closer to a\ntraining exercise, and it's one that's only been made potentially easier by\nthe breach earlier last year. Packman was never meant to last this long, and\niterating on it has become prohibitively expensive.\n\nAccording to the publishing department, use of a log y-axis is apparently a\ncrime of the same magnitude as witchcraft, so to assist in the comparison,\nI've removed \"honeypot\" type detections from the graph above. Remaining are\nonly bans issued or reviewed in the old packman system.\n\nThis chart attempts to visualize our emotional turmoil, though its true\nintensity could never be captured in two-dimensional form. Pictured are weekly\nLoL scripting bans, bucketed based on those issued for a detection within\nPackman (blue), versus those that were banned \"manually\" (reviewed by an anti-\ncheat agent). As Packman's effectiveness wanes, we are unable to keep up with\nthe scripting \"demand,\" and an infinite number of hands reviewing an infinite\nnumber of scripters is not a strategically viable option. If we want a fair\nvideo game, we must upgrade.\n\n## Enter Vanguard\n\nLike most anti-cheats, Vanguard is made up of preventative and detective\nlayers. We endeavor to outright block as many cheating methods as possible,\nbut in gap areas where \"preventing\" a cheat locally (and obviously) would too\neasily allow our vector to be audited, we instead passively \"detect\" the\nintrusion and take action on a delay. Putting our darkest detection magic\nbehind the scrutiny of our server gives us the opportunity to hide our methods\nby occluding signals to the developer through seemingly arbitrary bans. This\nmouthful is often called \"the cat and mouse game,\" and it's an absurd waltz\nthat every anti-cheat developer worldwide steps to on the daily.\n\n### Best Anti-Cheat is Fastest Anti-Cheat\n\nBy uncoupling ourselves from the game client and moving more of Vanguard to\nthe server, we can deliver different \"checks\" to riskier players, making our\nintrusion detection far more targeted and much faster.\n\n\"Time-to-action\" is the number of games a cheater is able to complete before\ntheir account slips into the dimension between worlds. It's not perfect for a\nvariety of reasons, but I count myself among the lucky few with an opportunity\nto A/B test user-mode and kernel-mode anti-cheats.\n\nTo demonstrate, here is a graph of \"Time to Action\" on both games, though it's\nnot a totally fair comparison. Cheating is far, far more sophisticated in\nfirst person shooters, so even though LoL games are shorter in duration,\nLeague was already heavily favored to win this race. However, because of\nVanguard's aerodynamic design (and the speed at which it can be adapted), it\nhas become so large a chore to stay undetected that most cheaters don't even\nbother. Instead they rage for a few games and get banned, just as nature\nintended.\n\n### Environment Security\n\nWhere Vanguard starts to further distinguish itself from other anti-cheats is\nin its enforcement of security standards even further to the left of the game\nclient\u2014on the operating system itself. Several of these requirements aren't\ntotally frictionless, but they inflict many hurdles onto those that want to\ndistribute cheats successfully. For this reason, we're constantly having to\nmake tradeoffs for the security of the game versus the ease with which players\ncan access it.\n\n### TPM 2.0\n\nLoL x Vanguard comes with a TPM 2.0 requirement, and while Microsoft\noriginally intended to require one for all new Windows 11 installations, their\nactual implementation of this enforcement was relatively weak and easily\nbypassable. We took them up on their original offer and instead elected to\nenforce it ourselves. So, a select few Windows 11 users may find their ability\nto play League is impacted, especially if you modified registry keys to bypass\nthis requirement.\n\nTPM stands for \"Trusted Platform Module,\" and we require it for two reasons.\nThe first is because it adds security to cert signing validation (something we\nrely on to know if other software can be trusted), but the second (and more\nimportant), is because it acts as an extremely non-fungible form of hardware\nID. If it's on and working, we can pretty much assume you don't intend to\ncheat, because if you did, we could easily banish the chip from this realm\nforever.\n\nFor more details on how to enable TPM, please see this helpful support\narticle.\n\n### The Driver\n\nAnti-cheat drivers are not new, and we didn't invent them. The purpose of our\ndriver component is not to collect more information\u2014we can already see\neverything we need to from user-mode. Instead, Vanguard's primary goal is to\nconfirm the game is currently running in an environment we can trust. This\nreduces the number of detections we have to create, the amount of data we have\nto collect, and most importantly, the ease with which any prospective cheater\ncan access the game.\n\nWe want to move as much of our anti-cheat into a \"preventative\" pattern as is\nfeasible (and safe). Windows is easily corruptible, and the current threat\nlandscape necessitates that we validate its defenses ourselves. We need to be\nable to trust what the operating system is telling us about the VALORANT\nprocess, otherwise cheaters could compromise it, middleman our checks, eat hot\nchip, and \"lie\" that everything is good to go.\n\n\"Hardware\" indicates that the account was detected immediately as a re-\noffender, \"Manual\" references an account that had to be reviewed by an agent\nbefore it was suspended, and \"Detection\" is exactly what it sounds like\u2014a ban\nthat occurred with an explicitly detected cheat asset. They're colored by\n\"speed,\" and manual is still our least favorite.\n\nOur final timeline of the evening is a look at VALORANT's percent of Ranked\ngames with a cheater, beautifully contrasted to dishes served by the Vanguard\nkitchen. Even when the going gets rough, Vanguard's hardware identifiers and\nsystem requirements help us hold down the fort, but what this really\nhighlights is everything we're missing today in League of Legends. LoL's\nexisting anti-cheat has no attestation or environment components\u2014it's all\n\"detection\" or \"manual.\"\n\nThrough the friction of its checks to host security, Vanguard drives up the\ncost of repeatedly cheating. Sure, a cheater can still put their harddrives\nthrough the dishwasher's sanitize cycle or manually map their own code into\nkernel memory (I dare you to try either), but the point is that these things\ncost cheaters money and time.\n\n### Why is it always on?\n\nVanguard is not really \"running all the time.\" The driver loads at boot, but\nnothing is making calls to it, and there's no network connectivity until you\nrun one of Riot's games. It's literally just sitting there (menacingly), so\nthat it can attest to the fact that nothing's happened between Windows loading\nand the game starting that would break the operating system.\n\nWhen you launch League, the Vanguard client contacts the driver to confirm\nthat it thinks everything is 100%, and if so, you receive a valid anti-cheat\nsession and may connect to the game server. Instructions from the client then\nstart enabling features within the driver to watch for things that might\ntamper with the signed League process and prevent them. You can always disable\nthe driver whenever you'd like-you'll just need a fresh reboot to \"recertify\"\nthe integrity of the trust chain before you jump into game.\n\n## LoL x Vanguard\n\nAs Vanguard rolls out to League, we'll see a dramatic decrease in the number\nof cheaters, but the fun doesn't have to stop there.\n\nWith heightened VM prevention, we'll drive up the cost of botting and inflict\nsignificant friction onto re-offenders. Bot supply for boosting accounts will\ndry up, and bypassing bans will no-longer be \"buy another level 30.\" With its\ndevice fingerprinting, Vanguard also gives us a renewed opportunity to sink\nteeth into boosting, smurfing, and account compromise. We'll be able to revoke\nrewards boosters didn't deserve, get smurfs to their proper rating faster, and\nmaybe even invalidate \"unfair\" premades.\n\nIncreased client security and less scripting means that the League team will\nbe able to leverage more mechanically rewarding designs, like combos, timing\nwindows, and executes. Ranked statistics won't be as poisoned by scripters,\nfacilitating easier balancing of high risk-and-reward champions, and games\nruined by cheaters can eventually be \"undone,\" returning LP to those affected.\n\nI know it's hard to be delighted about new anti-cheat, but this is the hardest\npart. It's only up and to the right from here.\n\n## Until Next Time\n\nThe Vanguard team is now almost thirty people, up nearly 1000% from the tight\nthree it was when we got started in 2014. We've in-housed everything from our\ndata pipeline to our cheat reconnaissance, and members of this team pour\neverything they have into creating the most fair gaming experiences physically\npossible. Some of our successes have come from technical innovation, but a\nmuch larger percentage of it has just been raw, unrelenting effort. Cheaters\nare always working against us, and our diligence is only possible with the\nplayer's support.\n\nThanks for reading, thanks for playing, and thanks for helping a few silly ex-\ncheaters find a greater purpose.\n\n## F.A.Q.\n\nWelcome back. These next few questions didn't really belong anywhere else, but\nthey've been included below for avid readers\u2014primarily so that they may\nconsume all of the knowledge we have to spare. I'll warn you that my marvelous\neditor explicitly ignored this part with a \"it's your funeral,\" so if your\neyes continue past this line, you're signing up for unfiltered madness. This\nwas your only warning.\n\n### Q. Isn't Vanguard Spyware?\n\nNo, but I'm sure those words in that exact order are mathematically the\nfastest way to farm retweets. Content algorithms everywhere are\nprogrammatically addicted to the clicks the words \"spyware\" or \"rootkit\" can\ngenerate, and mathematically hunting for their next fix has steered them away\nfrom informative journalism and into a sort of faux-pandemonium that's only\nremarkable in its unhelpfulness.\n\nEach region must adhere to its own specific policy and regulatory\nrequirements. Tencent, for example, has their own anti-cheat for games\noperated in their region, including Riot's titles, for which they are the CN\npublisher. While we do share the cheats we find so that our respective teams\ncan make detections for them, we have no need to share anything else. We've\nmet with Tencent's anti-cheat team maybe three times in a decade, and the only\nthings we exchanged were high-fives and ban counts (they won both contests).\nWe don't share Vanguard or its code, and anti-cheat data has never left Riot's\nwarehouse.\n\n### Q. Why do we need anti-cheat?\n\nI do hope that this article made at least a small dent in the polycarbonate\nwall that is this question. But to further wax philosophical: improving in\nLeague is like learning an instrument, and you get better at it through cold,\nhard practice. Now, I personally haven't had this experience (15 years and\nnever even put a toe past platinum), but the whole point is that you could.\nThe only things you should need to be competitive are your brain, an ethernet\ncable, and a backlit input peripheral.\n\nPractice is time-consuming and shortcuts aren't. What if instead of getting\ngood, you could pay someone to press the buttons for you? And what if instead\nof pressing the buttons, you could program your toaster to play the game? What\nif instead of playing the game, you just bought a trophy that said \"The\nGreatest\" on it? These things break the meritocracy, reduce satisfaction, and\neliminate any competitor's incentive to truly compete. We want the win to be\nearned, and we want it to mean something to you when it is.\n\n### Q: What about Linux?\n\nWe've never officially supported Linux, and it's true that the current Lutris-\nbased implementation for League (that uses wine) will not be able to satisfy\nthe Vanguard driver requirements. Linux does not currently afford us\nsufficient ability to attest boot state or kernel modules, and the difficulty\nin securing it is only compounded by all the frustrating differences between\ndistributions. Even allowing emulation is an exceptionally dangerous game, as\nmany cheats could then just run on the host, manipulating or analyzing the VM\nin a way that would be invisible to Vanguard within it.\n\nHalf of anti-cheat is making sure the environment hasn't been tampered with,\nand this is extremely hard on Linux by design. Any backdoors we leave open for\nit are ones developers will immediately leverage for cheats, and yesterday,\nthere were just over 800 Linux users on League. We have evaluated this risk to\nnot be worth the payoff.\n\n### Q: Have you tried just asking cheaters nicely to stop?\n\nWe once let cheaters submit hand-written apologies for unbans. Some promised\nto stop, many stiffed kids on Fiverr to write their apology for them, and 91%\nof the unbanned accounts were banned again for scripting within the next 6\nmonths. This enemy cannot be reasoned with, and our best defense is preventing\ntheir attempts until they've had sufficient time to develop empathy.\n\n### Q: I've heard that Vanguard bricks keyboards?\n\nAt launch (in 2020), we made the decision to have Vanguard utilize its on-boot\npositioning to prevent known signed-but-vulnerable drivers from loading in\ntheir entirety. This was only so cheaters couldn't load (or leverage cracked\nservices to load) their own drivers, and in turn, subvert Vanguard. However,\nwhat we hadn't discovered in the compatibility lab (or even in the alpha test)\nwere extraordinarily specific hardware configurations utilizing bespoke,\nbroken kernel drivers to communicate instructions to relatively obscure\ndevices.\n\nIn one infamous case, this included a driver that was responsible for keyboard\nlighting. Cheaters unfortunately were able to use this otherwise properly\nsigned driver to load their own malware, allowing them to \"look\" like a clean\nwindows installation (with cert verification still enabled), yet still be\nrunning kernel-level cheats. Because this driver was only for keyboard\nlighting and macros, we kept the driver denylisted until the developers\nreleased a new one, and in the process, got ourselves a reputation for hating\nkeyboard backlights\u2014which admittedly is true (we prefer darkness).\n\n### Q: What about false positives?\n\nPlayers claiming a \"false ban\" are in one of seven categories, ordered here by\nlikelihood:\n\n  1. They are presenting a fictional narrative.\n  2. They tested a cheat on a smurf, poisoning their main through hardware linking (known internally as \"whoopsie daisies\").\n  3. They shared their account with someone who cheated, usually a paid boosting service or a relative.\n  4. They repeatedly queued with a booster that used cheats and ate a 180 day ban for their trouble.\n  5. Their account was stolen by a serial rage hacker, who used it to torture other players for exactly 6 games.\n  6. They used cheating software for another game, and Vanguard unfortunately picked it up.\n  7. They have malware installed that performs the same operations as a cheat.\n\nIn the account compromise cases, we try to place protective suspensions on the\naccounts, though we are not always fast enough. Sometimes the damage is too\ngreat a percentage of the account's playtime, and it becomes too difficult to\nidentify any sort of \"true\" owner. With hardware-level cheating, we can't\nalways tell which game you intended to cheat on, so it's our firm\nrecommendation that you just not cheat on any game. For genuine false\npositives (usually caused by malware), we completely \"revert\" the rule that\ncaused them after analysis, undoing all bans that originated from a bad asset.\nThis does infrequently happen, but it's exceedingly rare that such suspensions\nlast longer than a few days.\n\nTo request an audit of a suspension, please submit a ticket, and if you don't\nget the answer you were looking for, it indicates only that the account was\nruled to be one of the first 6 cases.\n\n### Q: Why not just sue the cheat developers?\n\nOh for sure we do that when we need to, and our legal team couldn't be more\nhype to defend Riot's experiences. But with Vanguard, few developers have had\nthe persistence necessary to ever warrant it. Most don't attempt bypasses, and\nthose that do usually give up after sheepishly returning one or two basic\nanti-cheat volleys. The unrelenting exit scams also kinda do the hard work for\nus by sowing distrust in the cheating community and reducing the likelihood\nthat larger resellers ever really become a problem. With the right anti-cheat\nposture, it's rare that sufficient business forms around any one provider to\njustify a lawsuit. Right now, the majority of our legal efforts are directed\ntowards advertisements for malware masquerading as an aimbot.\n\n### Q: Why not create a game mode for cheaters?\n\n\"Cheater's Island\" sounds very amusing, but we have chosen instead to spend\nall our engineering time on just preventing the cheats in the first place. We\ndon't have infinite money, and using resources for in-game features that exist\nsolely to torture the cheaters we've already caught would kinda take the\n\"anti-\" out of \"anti-cheat.\" However, should my budget quintuple, you will\nagain find me advocating for cheaters to be grounded. I will call your parents\nfor a gamer-developer conference. Forget about hardware bans, guess who's not\ngoing to senior prom? Please contact your local member of congress.\n\n### Q: What about OSX?\n\nThere isn't yet as much tooling on OSX for script development, although the\n\"need\" is growing. For now, Mac won't have Vanguard, but we've still got a few\nbullets in the chamber for when cheaters inevitably try to exploit this. It\nhas since been pointed out to me that each chamber can hold only one bullet. I\nreject this hypothesis on the basis of improved throughput. Why shouldn't we\nfire two bullets at once? 2x the damage with the same amount of reloads. Wake\nup gunsmiths.\n\n### Q: Does Vanguard break 3rd party tools?\n\nDevelopers not using the official APIs will find it difficult to continue\nexfiltrating information directly from client memory, primarily because that's\nexactly what cheats do. One of the key concerns with allow-listing specific\ntools is that we are then responsible for their security when cheats seek to\nleverage them, so it is our vast preference that everyone just use the API. If\ntools choose to read client memory anyway, we make no guarantees that it won't\nbreak. In fact, we promise to deliberately break it as often as possible.\n\n### Q: Why not AI Anti-Cheat?\n\nWe do use machine models to predict the likelihood that a player is cheating,\nbut using only data the game server receives does not currently afford us the\ngranularity necessary to detect \"informational\" cheats that do not modify\nplayer input\u2014ESPs, FoW leaks, and radar hacks are almost totally undetectable.\nVALORANT and LoL both rely heavily upon the art of gathering or obscuring\ninformation, so cheats like these are very damaging, ultimately necessitating\ntraditional anti-cheat anyway.\n\nAnd even solely for aimbots, recall just isn't that great. The best models can\nonly identify around 30-50% of cheats on server-sided player input alone, and\nthis is not sufficient for a free competitive game with literally no barriers\nto reentry. Worse, aimbot developers have already started offering\n\"humanization\" features to prevent player reports, and while they're still\nmostly goofy pseudo-random noise generators, at some point, a particularly\nenterprising young cheater will spend the weekend training a model to \"move\nthe mouse like it's a real boy.\" Honestly, I wouldn't be surprised to see this\nexact white paper in the next six months, probably titled \"Operation\nGeppetto.\"\n\n### Q: Why not open source the driver?\n\nAnti-cheat is an iterative, indefinite battle. Many of the preventative checks\nthat Vanguard makes to ensure system integrity are deliberately stealthy,\nbleeding-edge, and in some cases, built on total pillars of sand. We benefit\nextensively from the confusion that the system inflicts on cheaters, and\nletting them simply browse the detection methods would exhaust our supply\nfaster than we could invent new ones. An open source anti-cheat application\nwould be totally useless (April Fools 2021).\n\n### Q: What if I'm having technical issues with Vanguard?\n\nThese days, Vanguard suffers from a lot of attribution bias, and the majority\nof bugs we see actually come from external sources that are difficult to lock\ndown. One of the largest perpetrators recently has been the distribution of\npirated software that toggles a registry option (\"DevOverrideEnable\") and\nallows \"different\" versions of key Windows files to be loaded into all running\nprocesses. Now, we can't say exactly what your intentions would be for doing\nsomething like this (wink), but what we can say is that Vanguard doesn't like\nwhen corrupted windows files are loaded into VALORANT\u2014we use a great many of\nthem to do tampering checks ourselves. We'd also recommend that you be careful\nwhat you turn off windows defender for, because it's doing what it says on the\ntin (defending windows).\n\nAnyways, issues can arise, but please submit a ticket. We'll get you sorted.\n\n### Q: If Vanguard is so good, why do I still see cheats on VALORANT?\n\nFor starters, we do not action every cheat or account instantly. Every ban is\nlike broadcasting a signal to the developer that their cheat has been detected\nand that they need to \"update\" it. In order to slow the progression of our\n\"cheat arms race,\" we delay bans based on the sophistication and visibility of\nthe cheat and cheater, respectively.\n\nBut also, cheaters gonna cheat. We've really driven our preventative layer as\nfar as we can feasibly go without colliding with existing setups and hurting\nlegitimate players. We'll detect them soon enough, but not before they snap a\nvideo and repeatedly drop it on TikTok for the highest ad-to-malware\nclickthrough rate ever before realized. And just because it says \"live,\" does\nnot mean you're watching a live stream. Don't download garbage.\n\n### Q: Does Vanguard do anything to help with DDoS?\n\nThere are (generally) three types of drophacks: (1) DDoS replay attacks\ntargeted at the server, (2) DDoS UDP flooding targeted at other users, and (3)\nmalformed server packets. None of these are clever, and there's no need to be\nimpressed. Vanguard is client-sided anti-cheat, so it gives us detection on\nthe tooling required to exfiltrate traffic for the former, and prevention to\nthe hooks on our packet handler usually used for the latter. For DDoS attacks\nthat target users at home, Vanguard doesn't have much to offer\u2014local software\ncannot prevent network elements from being overwhelmed.\n\n### Q. Why can't we just put Vanguard in Vietnam only?\n\nThat would just make all of those scripters move to the Philippines.\n\n### Q. Why can't we just put Vanguard in Vietnam and the Philippines only?\n\nThen they'd move to Singapore.\n\n### Q. Why can't we put Vanguard in Vietnam, the Philippines, and Singapore\nonly?\n\nCheating is not a regionally-specific problem. Most of our servers are not\ngeofenced, and even if they were, tunneling is a google search away. Cheaters\ncheat without borders, and this thought exercise was brought to you by Anti-\nCheat Airways.\n\n### Q: What if I am personally incompatible with Vanguard?\n\nWe get it, and we 100% respect your decision. Hopefully one day soon, the\nplatforms our games run on will offer developers the security features\nrequired to prevent cheating without necessitating extracurricular software.\nHowever, if your beef is only about data privacy at Riot, running the game\nclient or running Vanguard makes not one bit of difference. Data can still be\nretrieved from user-mode, and we're all engineers for the same studio with the\nsame goals, none of which are collecting your personal information. If Riot\nhasn't earned your trust, do not run our software.\n\n### Q. What personal information does Vanguard collect?\n\nRiot only collects what we need to run and secure our games. More data is just\nmore risk for us, and we don't want anything except the bare minimum required\nto get the job done. Locally, Vanguard has system hooks to run its\nprotections, but we're not shipping back your files or documents. Like most\nanti-malware and anti-cheat systems, we leverage a technique called \"Signature\nScanning,\" to determine if a series of bytes in memory matches a known\ncheating application. The results of these are only true or false (it was\npresent or it wasn't), and we try to use this pattern for other checks too.\nThings like, \"are you currently using a DMA device\" or \"did an application\njust try to submit input to the game\" send mostly binary responses (though the\nlatter includes the name of the process that did it).\n\nFor other detections, we need snapshots to scrutinize in post, and there are\nchances that these can contain PII. For example, we log the file path of every\nlibrary loaded into League, and this could contain a user name (if it's in a\nuser folder). We do things like this so that, after a cheat is discovered, we\nstand a chance to detect cheaters who have already used it (instead of only\nthose moving forward). This type of data is only in \"warm\" storage for 14\ndays, and we will never use it for anything that is not cheat detection. I\ncan't tell you every single thing Vanguard looks at, as cheaters would then\nknow what areas to scrub the hardest. We need some obscurity to succeed, but I\nhope this makes our intentions with the data we do collect more clear.\n\n### Q: What is the phrase that sends you back to the pain dimension?\n\nNice try, Asmodeus.\n\nmirageofpenguins\n\nKeeper of the Five Oaths \u2015 Phil Koskinas\n\nDuring a low-stakes dirigible race in 1414, mirageofpenguins invented\ncheating. This was later determined to have been a bad move. He now must work\nto rid it from the universe or risk being sent back to the pain dimension.\n\n# Tags:\n\n  * Copied to clipboard\n\nRelated Articles\n\nRelated Articles\n\n  * Dev\n\nTL;DW: Arena, Lee Sin & PvE Mode First-Look\n\nA quick rundown of updates on Arena, Lee Sin, Ranked Rewards, Champion\nMastery, and a new PvE mode.\n\nRiot Brightmoon\n\n6 days ago\n\n  * Dev\n\nDev Update: Gameplay, Vanguard & More\n\nRiot Brightmoon, Pupulasers, and Phroxzon discuss the gameplay changes,\nVanguard, bots, and skins.\n\nlast month\n\n  * Dev\n\n/dev: League's Business Model in 2023\n\nWe're here to share how League's business model has evolved over time.\n\njust a capybara\n\n4 months ago\n\n", "frontpage": false}
