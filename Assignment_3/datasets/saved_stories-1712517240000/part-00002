{"aid": "39960537", "title": "Show HN: I open-sourced the in-memory PostgreSQL I built at work for E2E tests", "url": "https://github.com/stackframe-projects/pgmock", "domain": "github.com/stackframe-projects", "votes": 15, "user": "n2d4", "posted_at": "2024-04-07 13:13:43", "comments": 2, "source_title": "GitHub - stackframe-projects/pgmock: In-memory Postgres for unit/E2E tests", "source_text": "GitHub - stackframe-projects/pgmock: In-memory Postgres for unit/E2E tests\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nstackframe-projects / pgmock Public\n\n  * Notifications\n  * Fork 0\n  * Star 5\n\nIn-memory Postgres for unit/E2E tests\n\nstackframe-projects.github.io/pgmock/\n\n### License\n\nMIT license\n\n5 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# stackframe-projects/pgmock\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nN2D41.0.262129fe \u00b7\n\n## History\n\n21 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Remove working-directory env from GH Actions  \n  \n### examples\n\n|\n\n### examples\n\n| Update README  \n  \n### src\n\n|\n\n### src\n\n| web-demo example  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Update README  \n  \n### LICENSE.md\n\n|\n\n### LICENSE.md\n\n| Prepare for release  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README with documentation section  \n  \n### package-lock.json\n\n|\n\n### package-lock.json\n\n| 1.0.2  \n  \n### package.json\n\n|\n\n### package.json\n\n| 1.0.2  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| Initialize code from other repo  \n  \n## Repository files navigation\n\n# pgmock\n\n### Demo \u2014 Discord\n\npgmock is an in-memory PostgreSQL mock server for unit and E2E tests. It\nrequires no external dependencies and runs entirely within WebAssembly on both\nNode.js and the browser.\n\n## Installation\n\n    \n    \n    npm install pgmock\n\nIf you'd like to run pgmock in a browser, see the Browser support section for\ndetailed instructions.\n\n## Getting started\n\nYou can run an in-memory server like so:\n\n    \n    \n    import { PostgresMock } from \"pgmock\"; const mock = await PostgresMock.create(); const connectionString = await mock.listen(5432);\n\nRecommended: If you use node-postgres (pg on npm), pgmock provides you with a\nconfiguration object that doesn't require you to serve on a port (and also\nworks in the browser):\n\n    \n    \n    import * as pg from \"pg\"; const mock = await PostgresMock.create(); const client = new pg.Client(mock.getNodePostgresConfig()); await client.connect(); console.log(await client.query('SELECT $1::text as message', ['Hello world!']));\n\nIt is considered good practice to destroy the mock server after you are done\nwith it to free up resources:\n\n    \n    \n    mock.destroy();\n\n## Documentation\n\nCheck the PostgresMock source file for a list of all available methods and\ntheir documentation.\n\n## Browser support\n\npgmock fully supports browser environments. While webapps can't listen to TCP\nports, you can still use PostgresMock.createSocket and the node-postgres\nconfiguration. However, if your bundler statically analyzes imports, the\ndefault configuration may show a warning because of missing (optional) Node.js\nmodules. Check examples/web-demo/next.config.mjs for an example on how to\nconfigure Webpack for bundling.\n\nIf you're only looking to run a database in the browser, you might want to\nconsider pglite instead. It is more performant and lightweight, but only has a\nlimited feature set. pgmock is designed for feature parity with production\nPostgreSQL environments, as you would want in a testing environment.\n\n## How does it work?\n\nThere are two approaches to run Postgres in WebAssembly; by forking it to\nsupport WASM natively or by emulating the Postgres server in an x86 emulator.\nThe former is more performant and uses considerably less memory, but only\nsupports single-user mode (no connections), and no extensions.\n\nTo prevent discrepancies between testing and production, and because\nperformance is not usually a concern in tests, pgmock currently uses the\nlatter approach. In the mid-term future, once native Postgres WASM forks\nmature, we plan to make both options available, and eventually, switch to\nnative WASM as default. We don't expect there to be many breaking changes\nbesides the APIs inside PostgresMock.subtle.\n\npgmock differs from previous Postgres-in-the-browser projects by providing\nfull feature-compatibility entirely inside the JavaScript runtime, without\ndepending on a network proxy for communication. We did this by simulating a\nnetwork stack in JavaScript that behaves like a real network, that can\nsimulate TCP connections even on platforms that do not allow raw socket\naccess.\n\n## Wanna contribute?\n\nGreat! We have a Discord server where you can talk to us.\n\n## Can this run other Docker images or databases?\n\nIn theory, yes. I just haven't tested them. Ping me on our Discord server if\nyou're interested.\n\n## Acknowledgements\n\n  * v86, the x86 emulator which makes this possible\n  * Supabase & Snaplet for building their own approach of running Postgres inside WebAssembly, which this is based on\n  * Stackframe for keeping me on a payroll while I was building pgmock\n\n## About\n\nIn-memory Postgres for unit/E2E tests\n\nstackframe-projects.github.io/pgmock/\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\nCustom properties\n\n### Stars\n\n5 stars\n\n### Watchers\n\n2 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * JavaScript 81.6%\n  * TypeScript 18.4%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
