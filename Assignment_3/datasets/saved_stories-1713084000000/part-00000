{"aid": "40028228", "title": "The Computer Scientist Who Can't Stop Telling Stories", "url": "https://www.quantamagazine.org/computer-scientist-donald-knuth-cant-stop-telling-stories-20200416/", "domain": "quantamagazine.org", "votes": 2, "user": "alexzeitler", "posted_at": "2024-04-14 02:39:30", "comments": 0, "source_title": "The Computer Scientist Who Can\u2019t Stop Telling Stories", "source_text": "The Computer Scientist Who Can\u2019t Stop Telling Stories | Quanta Magazine\n\nLoading [MathJax]/extensions/tex2jax.js\n\nWe care about your data, and we'd like to use cookies to give you a smooth\nbrowsing experience. Please agree and read more about our privacy policy.\n\nThe Computer Scientist Who Can\u2019t Stop Telling Stories\n\nRead Later\n\n###### Share\n\nCopied!\n\n  * Comments\n\n  * Read Later\n\nQ&A\n\n# The Computer Scientist Who Can\u2019t Stop Telling Stories\n\nBy Susan D'Agostino\n\nApril 16, 2020\n\nFor pioneering computer scientist Donald Knuth, good coding is synonymous with\nbeautiful expression.\n\nRead Later\n\nDonald Knuth has worked his whole life to tell stories with and about computer\nprograms.\n\nVivian Cromwell\n\nBy Susan D'Agostino\n\nContributing Writer\n\nApril 16, 2020\n\nView PDF/Print Mode\n\ncomputer sciencecomputershistory of scienceQ&AAll topics\n\n## Introduction\n\nDonald Knuth is a computer scientist who came of age with his field. During\nthe nascent years of computer programming in the middle of the last century, a\ncandy company ran a contest that summoned his talents as a 13-year-old. The\ncontest asked kids to determine how many words could be made from the letters\nof the candy\u2019s name: Ziegler\u2019s Giant Bar. It was a well-defined problem with\ndistinct pieces, just the kind he loved.\n\n\u201cI had an obsessive-compulsive streak that drew me to digital, discrete\nproblems. And I loved poring over large collections of information,\u201d Knuth\nsaid.\n\nKnuth methodically leafed through his family\u2019s 2,000-page Funk & Wagnalls\nunabridged dictionary in the basement. He even convinced his parents he was\nsick, winning himself two weeks away from school to work on the problem. After\nlabeling index cards with headings such as \u201cAa,\u201d \u201cAb\u201d and \u201cBa\u201d based on the\nbeginnings of possible words using letters from the candy\u2019s name, he went down\nthe dictionary\u2019s columns noting words that qualified. He found that he could\nskip entire sections of the dictionary, such as pages for words starting with\nthe letter \u201cC,\u201d or sections of the \u201cB\u201d words whose second letter was \u201cU.\u201d\n\nThe contest officials had identified approximately 2,000 words they could\nexpect, but Knuth found more than 4,700. He was rewarded with a spot on\ntelevision and chocolate for his entire class. He would go on to win many more\naccolades, including the first ACM Grace Murray Hopper Award, the National\nMedal of Science and the A.M. Turing Award.\n\nKnuth eventually merged his dual loves of discrete digital problems and large\ncollections of information in his magnum opus, The Art of Computer Programming\n\u2014 a book series he began writing as a graduate student in 1962 and has yet to\ncomplete. He published volume 1 in 1968, and the current version is in its\n42nd printing. Volume 2 followed in 1969 and volume 3 in 1973. By then he was\na computer science professor at Stanford University, but he worried that his\nwork would prevent him from completing his books. So he took a leave of\nabsence in 1990 and then retired in 1993 to spend the rest of his life\ncompleting the seven-volume set. Now 82, he\u2019s hard at work on part B of volume\n4, and he anticipates that the book will have at least parts A through F.\n\nShare this article\n\nCopied!\n\nNewsletter\n\nGet Quanta Magazine delivered to your inbox\n\nRecent newsletters\n\nKnuth is currently working on volume 4, part B, of The Art of Computer\nProgramming. He expects it to have at least four more parts, and the whole set\nto have three more volumes.\n\nJill Knuth\n\n## Introduction\n\nThe Art of Computer Programming is more than a how-to manual. Just as Isaac\nAsimov and Eric Temple Bell wove narratives and characters into their science\nand math stories, Knuth delights in telling stories of computer science.\n\n\u201cThe best way to communicate from one human being to another is through\nstory,\u201d he said.\n\nThis passion for communication helped him play another starring role in the\nstory of computer science beyond his magnum opus. When his publisher sent him\ngalley proofs for the second edition of volume 2 in the 1970s, Knuth was\ndisturbed by the arrangement and appearance of the numbers, symbols and words\non the pages. He flew to Los Angeles to see a machine that printed glossy\nmagazines digitally, hoping it could provide aesthetic relief, but it was too\nexpensive. Nonetheless, on that trip he began developing a computer language\nthat would allow him to typeset mathematics digitally.\n\nI\u2019m unable to resist a good story. I viewed myself not as a pioneer, but as a\njournalist.\n\nBack at Stanford, Knuth put aside The Art of Computer Programming for nearly a\ndecade to develop TeX (pronounced \u201ctech\u201d), a sophisticated, game-changing\nprogram that put digital typography on a desktop computer. He made it open\nsource, much to the benefit of professional mathematicians, computer\nscientists, economists, engineers, linguists, statisticians and anyone else\nwho lacked technical symbols on their keyboards but understood the placement\nof complicated formulas better than their publishers. In a world of often\nephemeral computer programs, TeX has endured as the gold standard for making\nscientific papers more beautiful and easier for experts to read and\nunderstand.\n\nKnuth\u2019s interest in storytelling also led him to develop a philosophy of\nliterate programming \u2014 a method for writing computer programs as literary\nessays. A literate program intersperses source code with elegant prose written\nin a familiar language, such as English. The source code delivers\nfunctionality and efficiency, while the exposition addresses a human reader,\nrather than the computer\u2019s compiler. Anyone who later updates or debugs a\nliterate program will avoid the often time-consuming and costly problem of\ntrying to understand the original programmer\u2019s algorithms, design decisions\nand implementation strategies. Knuth is a computer scientist who understands\nthat words matter.\n\nQuanta Magazine spoke with Knuth in February at his home on the Stanford\ncampus. The interview has been condensed and edited for clarity.\n\n### Have you always been interested in writing?\n\nEarly on, I was advised that the real world would be too hard for me. I didn\u2019t\nexpect to discover anything new, but I loved conveying my enjoyment of ideas\nin writing.\n\nKnuth has always told stories, with a science twist. In college, he penned a\nshort story where each word was a chemical formula.\n\nJill Knuth\n\nIn sixth grade, a couple friends and I started a two-page paper on a ditto\nmachine. We had jokes. In high school, every Monday night as the newspaper\neditor, I did an all-nighter to get the paper out. I saw my first line of type\nin college as the student paper copy editor. In my junior and senior years, we\nstarted the engineering and science review. For example, I wrote, \u201cTh_5E_4\nCH_3EmIC_2Al_2 Ca_3P_4Er.\u201d Every word was a chemical formula.\n\n### And that led to your magnum opus? Do you think of it as another story?\n\nThe Art of Computer Programming is a manifesto. It describes the way I love to\ndo math and the way I wish I had been taught. Beginning on Page 1, I tell the\nstory of algorithms. Most textbooks at the time didn\u2019t explore the human side\nof discoveries. They just said, \u201cThis is how chemistry works,\u201d or \u201cThis is how\nphysics works.\u201d\n\nI also tell a technical story. I say, \u201cHere\u2019s something that doesn\u2019t work, and\nhere\u2019s a way to solve that problem.\u201d Instead of presenting only facts, I add\ndrama. Science is much easier to learn if you know the sequence of\ndiscoveries. Also, I\u2019m unable to resist a good story. I viewed myself not as a\npioneer, but as a journalist.\n\n### Beyond the story, then, what\u2019s The Art of Computer Programming about?\n\nAfter two years of writing my book, I realized that its novelty was\nquantitatively determining how good a program is. I didn\u2019t just want to say\none program was better than another. I wanted to say one is 13.8% better than\nanother, and explain how to compare them.\n\nAuthor A would talk about algorithm A, and author B would talk about his\ncompeting algorithm B. And author A never wrote about algorithm B, and author\nB never wrote about algorithm A. Also, authors A and B used different\ncomputers. As a neutral journalist, I explained both from one point of view.\nAsking, \u201cHow good is an algorithm really?\u201d is a fun problem. That\u2019s the\nanalysis of algorithms.\n\n### Is \u201cthe analysis of algorithms\u201d just a different way of saying \u201cthe art of\ncomputer programming\u201d?\n\nI was at a Society for Industrial and Applied Mathematics conference in 1967\nwhen somebody asked what I did. In those days, computer science was\npartitioned into numerical analysis, artificial intelligence and programming\nlanguages. That was it. I realized I needed a name for what I do.\n\nMy book\u2019s novelty was its rigorous studies of how good the algorithms were. I\ndecided that the next time I was asked this question, I would say, \u201cAnalysis\nof algorithms.\u201d My definition was: If I\u2019m interested in it, it\u2019s the analysis\nof algorithms. It wasn\u2019t a very good definition.\n\nI knew computer programming could make books look good again.\n\nLater, I decided to justify it. I decided it was the quantitative study of how\ngood an algorithm is, which I divided into two parts. One part considered all\npossible algorithms for a certain problem. The other part considered one\nparticular algorithm for a certain problem.\n\nAnalysis of algorithms was going to be my life\u2019s work. I told my publisher to\nchange the title of my book to The Analysis of Algorithms. My publisher said,\n\u201cThat will never sell.\u201d They made the right decision. Still, I was happy when,\n40 years later, five or six books came out with the title Analysis of\nAlgorithms.\n\n### But for you, programming is also about more than functionality. When you\ndesigned TeX, for example, you wanted to find \u201cthe most pleasing curve\u201d that\nconnects certain points. Were you trying to program beauty?\n\nMy program had to connect points in some way that reverse-engineered what a\ngood calligrapher would do. The letter \u201cS\u201d comes to a point where the\ncurvature changes from positive to negative. Then maybe it stays steady for a\nwhile. The letter\u2019s designers followed some logic to make lines into letter\nshapes. I wanted to capture not only the design\u2019s outcome, but the\nintelligence behind it. That\u2019s like writing a computer program.\n\nKnuth in his Stanford office with typeface designer Herman Zapf in 1980, just\na few years after the release of Knuth\u2019s typography program, TeX.\n\nChuck Painter / Stanford News Service\n\nI talked to designers to understand what they were trying to achieve. The math\nwas there to capture the design in a quantitative way. With mathematics, I put\nlittle dials on everything. I could say the letter \u201cA\u201d has got this point,\nthat thickness, angles here, tapering there, a hump in the bottom and a\ncertain serif length.\n\nI never intended to replace designers. I only wanted to capture for future\ngenerations exactly what we were doing then. With TeX, a design is\nreproducible.\n\n### Did you anticipate TeX\u2019s global acceptance or its ability to endure?\n\nTeX was only supposed to be for my secretary and myself. Phyllis [Astrid\nBenson Winkler] was a wonderful secretary. She could read my handwriting and\nmake it beautiful. Printing technology was going down the tubes because the\ntried-and-true methods were becoming too expensive. Nearly every piece of\nmathematics published in the 1970s looked atrocious. In the American\nMathematical Monthly, the subscripts were in a different font from main-line\ntext. I knew computer programming could make books look good again.\n\nI finished debugging a trial version of TeX in April 1978. In May, I had 10\nusers. In June, I had 100 users. In July, I had 1,000. Each new group would\nsay, \u201cYou\u2019ve gotta have this feature.\u201d Five years later, I released what is\nessentially the TeX we have now. That was designed for Americans. Then the\nEuropeans started to use it. So in the 1980s, I made it work for world\nlanguages.\n\n### It sounds like discovery has always been part of your process. Does that\nremain true today?\n\nI write an average of five new programs every week. Poets have to write poems.\nI have to write computer programs.\n\nThe ultimate test of whether I understand something is if I can explain it to\na computer. I can say something to you and you\u2019ll nod your head, but I\u2019m not\nsure that I explained it well. But the computer doesn\u2019t nod its head. It\nrepeats back exactly what I tell it. In most of life, you can bluff, but not\nwith computers.\n\n\u201cThe best way to communicate from one human being to another is through\nstory,\u201d Knuth said. This approach allowed him to analyze algorithms more\nrigorously and neutrally.\n\nVivian Cromwell\n\n## Introduction\n\n### You spend your days writing, but you also have other interests. How do you\napproach each day?\n\nJack London wrote 1,000 words every day before talking to anybody. He was\ntotally, \u201cLet me alone until I\u2019ve got my thousand words!\u201d Then he would drink\nor proofread the rest of the day. No, my scheduling principle is to do the\nthing I hate most on my to-do list. By week\u2019s end, I\u2019m very happy.\n\n### Really? How does doing what you hate make you happy?\n\nIt would be very easy for me to say, \u201cOh, let me be a genius and never clean\nthe toilet.\u201d But even cleaning toilets is doable. [My wife] Jill and I got\nuniforms that have a slot where the 409 cleaner fits. You go over there and\nsquirt and feel good cleaning the toilet!\n\nA person\u2019s success in life is determined by having a high minimum, not a high\nmaximum. If you can do something really well but there are other things at\nwhich you\u2019re failing, the latter will hold you back. But if almost everything\nyou do is up there, then you\u2019ve got a good life. And so I try to learn how to\nget through things that others find unpleasant.\n\nKnuth at his home in 2020. He retired in 1993 to complete his magnum opus, The\nArt of Computer Programming.\n\nJill Knuth\n\n## Introduction\n\n### You also have many projects that have nothing to do with computer science,\nsuch as your musical composition, Fantasia Apocalyptica. You even built your\nhouse around a two-story pipe organ. Is this variety also part what makes you\nhappy?\n\nI wrote a couple of books, including Things a Computer Scientist Rarely Talks\nAbout, that are about theology \u2014 things you can\u2019t prove \u2014 rather than\nmathematics or computer science. My life would not be complete if it was all\nabout cut and dried things. The mystical things I don\u2019t understand give me\nhumility. There are things beyond my understanding.\n\nIn mathematics, I know when a theorem is correct. I like that. But I wouldn\u2019t\nhave much of a life if everything were doable. This knowledge doesn\u2019t tear me\napart. Rather, it ensures I don\u2019t get stuck in a rut.\n\n### Does it matter if you finish The Art of Computer Programming?\n\nOh, I realize that computer science will keep living and developing. One\nscenario is that everybody will stop working on the kinds of computers we have\nnow. They\u2019ll all go to machine learning and use quantum computers. Then I\ncould come to the end of the story of non-quantum computers. I\u2019m happier when\nI can say, \u201cThis is the story\u2019s end.\u201d That\u2019s the easiest way to imagine that\nI\u2019ll finish. But I\u2019m not answering your question.\n\n## Related:\n\n  1. ### In Search of God\u2019s Perfect Proofs\n\n  2. ### The Architect of Modern Algorithms\n\n  3. ### Cryptography That Is Provably Secure\n\nDo you know the story of Tristram Shandy? Laurence Sterne, in the late 1700s,\nwrote an autobiographical book, The Life and Opinions of Tristram Shandy,\nGentleman, which he published in fascicles, or installments. It has about 100\npages just on his first week of life. He wants the life story to be complete\nbut, of course, he won\u2019t make it. Sterne wrote Tristram Shandy\u2019s story until\nhe couldn\u2019t write anymore.\n\nI want to continue writing good content in the best way I know, and cover\nthings for which I have something original to say. I\u2019ll do as much of that as\nI can, instead of saying that I\u2019ve got to finish by a certain deadline. I\u2019ve\nbeen so fortunate riding waves and being born at a time that was just right\nfor my particular peculiarity. I\u2019ve now achieved all of my life\u2019s goals except\nThe Art of Computer Programming. I\u2019m in a situation where I\u2019ll continue\ntelling whatever stories I find and passing them on.\n\nCorrection: April 17, 2020 This article previously misidentified the number of\nprintings of volume 1 of The Art of Computer Programming and the year Knuth\nreleased TeX. Both have been corrected.\n\nBy Susan D'Agostino\n\nContributing Writer\n\nApril 16, 2020\n\nView PDF/Print Mode\n\ncomputer sciencecomputershistory of scienceQ&AAll topics\n\nShare this article\n\nCopied!\n\nNewsletter\n\nGet Quanta Magazine delivered to your inbox\n\nRecent newsletters\n\nThe Quanta Newsletter\n\nGet highlights of the most important news delivered to your email inbox\n\nRecent newsletters\n\n## Also in Computer Science\n\nartificial intelligence\n\n### How Do Machines \u2018Grok\u2019 Data?\n\nBy Anil Ananthaswamy\n\nApril 12, 2024\n\nRead Later\n\nTuring Award\n\n### Avi Wigderson, Complexity Theory Pioneer, Wins Turing Award\n\nBy Stephen Ornes\n\nApril 10, 2024\n\nRead Later\n\nQ&A\n\n### The Researcher Who Explores Computation by Conjuring New Worlds\n\nBy Ben Brubaker\n\nMarch 27, 2024\n\nRead Later\n\n## Comment on this article\n\nQuanta Magazine moderates comments to facilitate an informed, substantive,\ncivil conversation. Abusive, profane, self-promotional, misleading, incoherent\nor off-topic comments will be rejected. Moderators are staffed during regular\nbusiness hours (New York time) and can only accept comments written in\nEnglish.\n\n## Next article\n\nNeutrino Asymmetry Passes Critical Threshold\n\nAll Rights Reserved \u00a9 2024\n\nAn editorially independent publication supported by the Simons Foundation.\n\nLog in to Quanta\n\n## Use your social network\n\nor\n\nDon't have an account yet? Sign up\n\nSign Up\n\nCreating an account means you accept Quanta Magazine's Terms & Conditions and\nPrivacy Policy\n\nForgot your password?\n\nWe\u2019ll email you instructions to reset your password\n\nChange your password\n\nEnter your new password\n\n", "frontpage": false}
