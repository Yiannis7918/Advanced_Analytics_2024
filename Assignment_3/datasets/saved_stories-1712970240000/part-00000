{"aid": "40016456", "title": "Secretary Problem", "url": "https://en.wikipedia.org/wiki/Secretary_problem", "domain": "wikipedia.org", "votes": 7, "user": "sherilm", "posted_at": "2024-04-12 19:01:08", "comments": 0, "source_title": "Secretary problem", "source_text": "Secretary problem - Wikipedia\n\nJump to content\n\nSearch\n\n# Secretary problem\n\n  * Deutsch\n  * Espa\u00f1ol\n  * \u0641\u0627\u0631\u0633\u06cc\n  * Fran\u00e7ais\n  * \u0540\u0561\u0575\u0565\u0580\u0565\u0576\n  * \u05e2\u05d1\u05e8\u05d9\u05ea\n  * Nederlands\n  * \u65e5\u672c\u8a9e\n  * Norsk bokm\u00e5l\n  * Polski\n  * \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n  * \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430\n  * Ti\u1ebfng Vi\u1ec7t\n  * \u4e2d\u6587\n\nEdit links\n\nFrom Wikipedia, the free encyclopedia\n\nMathematical problem involving optimal stopping theory\n\nGraphs of probabilities of getting the best candidate (red circles) from n\napplications, and k/n (blue crosses) where k is the sample size\n\nThe secretary problem demonstrates a scenario involving optimal stopping\ntheory^[1]^[2] that is studied extensively in the fields of applied\nprobability, statistics, and decision theory. It is also known as the marriage\nproblem, the sultan's dowry problem, the fussy suitor problem, the googol\ngame, and the best choice problem. Its solution is also known as the 37%\nrule.^[3]\n\nThe basic form of the problem is the following: imagine an administrator who\nwants to hire the best secretary out of rankable applicants for a position.\nThe applicants are interviewed one by one in random order. A decision about\neach particular applicant is to be made immediately after the interview. Once\nrejected, an applicant cannot be recalled. During the interview, the\nadministrator gains information sufficient to rank the applicant among all\napplicants interviewed so far, but is unaware of the quality of yet unseen\napplicants. The question is about the optimal strategy (stopping rule) to\nmaximize the probability of selecting the best applicant. If the decision can\nbe deferred to the end, this can be solved by the simple maximum selection\nalgorithm of tracking the running maximum (and who achieved it), and selecting\nthe overall maximum at the end. The difficulty is that the decision must be\nmade immediately.\n\nThe shortest rigorous proof known so far is provided by the odds algorithm. It\nimplies that the optimal win probability is always at least (where e is the\nbase of the natural logarithm), and that the latter holds even in a much\ngreater generality. The optimal stopping rule prescribes always rejecting the\nfirst applicants that are interviewed and then stopping at the first applicant\nwho is better than every applicant interviewed so far (or continuing to the\nlast applicant if this never occurs). Sometimes this strategy is called the\nstopping rule, because the probability of stopping at the best applicant with\nthis strategy is already about for moderate values of . One reason why the\nsecretary problem has received so much attention is that the optimal policy\nfor the problem (the stopping rule) is simple and selects the single best\ncandidate about 37% of the time, irrespective of whether there are 100 or 100\nmillion applicants.\n\n## Formulation[edit]\n\nAlthough there are many variations, the basic problem can be stated as\nfollows:\n\n  * There is a single position to fill.\n  * There are n applicants for the position, and the value of n is known.\n  * The applicants, if all seen together, can be ranked from best to worst unambiguously.\n  * The applicants are interviewed sequentially in random order, with each order being equally likely.\n  * Immediately after an interview, the interviewed applicant is either accepted or rejected, and the decision is irrevocable.\n  * The decision to accept or reject an applicant can be based only on the relative ranks of the applicants interviewed so far.\n  * The objective of the general solution is to have the highest probability of selecting the best applicant of the whole group. This is the same as maximizing the expected payoff, with payoff defined to be one for the best applicant and zero otherwise.\n\nA candidate is defined as an applicant who, when interviewed, is better than\nall the applicants interviewed previously. Skip is used to mean \"reject\nimmediately after the interview\". Since the objective in the problem is to\nselect the single best applicant, only candidates will be considered for\nacceptance. The \"candidate\" in this context corresponds to the concept of\nrecord in permutation.\n\n## Deriving the optimal policy[edit]\n\nThe optimal policy for the problem is a stopping rule. Under it, the\ninterviewer rejects the first r \u2212 1 applicants (let applicant M be the best\napplicant among these r \u2212 1 applicants), and then selects the first subsequent\napplicant that is better than applicant M. It can be shown that the optimal\nstrategy lies in this class of strategies.^[citation needed] (Note that we\nshould never choose an applicant who is not the best we have seen so far,\nsince they cannot be the best overall applicant.) For an arbitrary cutoff r,\nthe probability that the best applicant is selected is\n\nThe sum is not defined for r = 1, but in this case the only feasible policy is\nto select the first applicant, and hence P(1) = 1/n. This sum is obtained by\nnoting that if applicant i is the best applicant, then it is selected if and\nonly if the best applicant among the first i \u2212 1 applicants is among the first\nr \u2212 1 applicants that were rejected. Letting n tend to infinity, writing as\nthe limit of (r\u22121)/n, using t for (i\u22121)/n and dt for 1/n, the sum can be\napproximated by the integral\n\nTaking the derivative of P(x) with respect to , setting it to 0, and solving\nfor x, we find that the optimal x is equal to 1/e. Thus, the optimal cutoff\ntends to n/e as n increases, and the best applicant is selected with\nprobability 1/e.\n\nFor small values of n, the optimal r can also be obtained by standard dynamic\nprogramming methods. The optimal thresholds r and probability of selecting the\nbest alternative P for several values of n are shown in the following\ntable.^[note 1]\n\n1| 2| 3| 4| 5| 6| 7| 8| 9| 10  \n---|---|---|---|---|---|---|---|---|---  \n1| 1| 2| 2| 3| 3| 3| 4| 4| 4  \n1.000| 0.500| 0.500| 0.458| 0.433| 0.428| 0.414| 0.410| 0.406| 0.399  \n  \nThe probability of selecting the best applicant in the classical secretary\nproblem converges toward .\n\n## Alternative solution[edit]\n\nThis problem and several modifications can be solved (including the proof of\noptimality) in a straightforward manner by the odds algorithm, which also has\nother applications. Modifications for the secretary problem that can be solved\nby this algorithm include random availabilities of applicants, more general\nhypotheses for applicants to be of interest to the decision maker, group\ninterviews for applicants, as well as certain models for a random number of\napplicants.^[citation needed]\n\n## Limitations[edit]\n\nThe solution of the secretary problem is only meaningful if it is justified to\nassume that the applicants have no knowledge of the decision strategy\nemployed, because early applicants have no chance at all and may not show up\notherwise.\n\nOne important drawback for applications of the solution of the classical\nsecretary problem is that the number of applicants must be known in advance,\nwhich is rarely the case. One way to overcome this problem is to suppose that\nthe number of applicants is a random variable with a known distribution of\n(Presman and Sonin, 1972). For this model, the optimal solution is in general\nmuch harder, however. Moreover, the optimal success probability is now no\nlonger around 1/e but typically lower. This can be understood in the context\nof having a \"price\" to pay for not knowing the number of applicants. However,\nin this model the price is high. Depending on the choice of the distribution\nof , the optimal win probability can approach zero. Looking for ways to cope\nwith this new problem led to a new model yielding the so-called 1/e-law of\nbest choice.\n\n## 1/e-law of best choice[edit]\n\nThe essence of the model is based on the idea that life is sequential and that\nreal-world problems pose themselves in real time. Also, it is easier to\nestimate times in which specific events (arrivals of applicants) should occur\nmore frequently (if they do) than to estimate the distribution of the number\nof specific events which will occur. This idea led to the following approach,\nthe so-called unified approach (1984):\n\nThe model is defined as follows: An applicant must be selected on some time\ninterval from an unknown number of rankable applicants. The goal is to\nmaximize the probability of selecting only the best under the hypothesis that\nall arrival orders of different ranks are equally likely. Suppose that all\napplicants have the same, but independent to each other, arrival time density\non and let denote the corresponding arrival time distribution function, that\nis\n\n    , .\n\nLet be such that Consider the strategy to wait and observe all applicants up\nto time and then to select, if possible, the first candidate after time which\nis better than all preceding ones. Then this strategy, called 1/e-strategy,\nhas the following properties:\n\nThe 1/e-strategy\n\n    (i) yields for all a success probability of at least 1/e,\n\n    (ii) is a minimax-optimal strategy for the selector who does not know ,\n\n    (iii) selects, if there is at least one applicant, none at all with probability exactly 1/e.\n\nThe 1/e-law, proved in 1984 by F. Thomas Bruss, came as a surprise. The reason\nwas that a value of about 1/e had been considered before as being out of reach\nin a model for unknown , whereas this value 1/e was now achieved as a lower\nbound for the success probability, and this in a model with arguably much\nweaker hypotheses (see e.g. Math. Reviews 85:m).\n\nHowever, there are many other strategies that achieve (i) and (ii) and,\nmoreover, perform strictly better than the 1/e-strategy simultaneously for all\n>2\\. A simple example is the strategy which selects (if possible) the first\nrelatively best candidate after time provided that at least one applicant\narrived before this time, and otherwise selects (if possible) the second\nrelatively best candidate after time .^[4]\n\nThe 1/e-law is sometimes confused with the solution for the classical\nsecretary problem described above because of the similar role of the number\n1/e. However, in the 1/e-law, this role is more general. The result is also\nstronger, since it holds for an unknown number of applicants and since the\nmodel based on an arrival time distribution F is more tractable for\napplications.\n\n## The game of googol[edit]\n\nIn the article \"Who solved the Secretary problem?\" (Ferguson, 1989)^[1], it's\nclaimed the secretary problem first appeared in print in Martin Gardner's\nFebruary 1960 Mathematical Games column in Scientific American:\n\n> Ask someone to take as many slips of paper as he pleases, and on each slip\n> write a different positive number. The numbers may range from small\n> fractions of 1 to a number the size of a googol (1 followed by a hundred\n> zeroes) or even larger. These slips are turned face down and shuffled over\n> the top of a table. One at a time you turn the slips face up. The aim is to\n> stop turning when you come to the number that you guess to be the largest of\n> the series. You cannot go back and pick a previously turned slip. If you\n> turn over all the slips, then of course you must pick the last one\n> turned.^[5]\n\nFerguson pointed out that the secretary game remained unsolved, as a zero-sum\ngame with two antagonistic players.^[1] In this game:\n\n  * Alice, the informed player, writes secretly distinct numbers on cards.\n  * Bob, the stopping player, observes the actual values and can stop turning cards whenever he wants, winning if the last card turned has the overall maximal number.\n  * Bob wants to guess the maximal number with the highest possible probability, while Alice's goal is to keep this probability as low as possible.\n\nThe difference with the basic secretary problem are two:\n\n  * Alice does not have to write numbers uniformly at random. She may write them according to any joint probability distribution to trick Bob.\n  * Bob observes the actual values written on the cards, which he can use in his decision procedures.\n\n### Strategic analysis[edit]\n\nAlice first writes down n numbers, which are then shuffled. So, their ordering\ndoes not matter, meaning that Alice's numbers must be an exchangeable random\nvariable sequence . Alice's strategy is then just picking the trickiest\nexchangeable random variable sequence.\n\nBob's strategy is formalizable as a stopping rule for the sequence .\n\nWe say that a stopping rule for Bob is a relative rank stopping strategy iff\nit depends on only the relative ranks of , and not on their numerical values.\nIn other words, it is as if someone secretly intervened after Alice picked her\nnumbers, and changed each number in into its relative rank (breaking ties\nrandomly). For example, is changed to or with equal probability. This makes it\nas if Alice played an exchangeable random permutation on . Now, since the only\nexchangeable random permutation on is just the uniform distribution over all\npermutations on , the optimal relative rank stopping strategy is the optimal\nstopping rule for the secretary problem, given above, with a winning\nprobability\n\nAlice's goal then is to make sure Bob cannot do better than the relative-rank\nstopping strategy.\n\nBy the rules of the game, Alice's sequence must be exchangeable, but to do\nwell in the game, Alice should not pick it to be independent. If Alice samples\nthe numbers independently from some fixed distribution, it would allow Bob to\ndo better. To see this intuitively, imagine if , and Alice is to pick both\nnumbers from the normal distribution , independently. Then if Bob turns over\none number and sees , then he can quite confidently turn over the second\nnumber, and if Bob turns over one number and sees , then he can quite\nconfidently pick the first number. Alice can do better by picking that are\npositively correlated.\n\nSo the fully formal statement is as below:\n\n> Does there exist an exchangeable sequence of random variables , such that\n> for any stopping rule ,\n>\n> ?\n\n### Solution[edit]\n\nFor , if Bob plays the optimal relative-rank stoppings strategy, then Bob has\nwinning probability 1/2. Surprisingly, Alice has no minimax strategy, which is\nclosely related to a paradox of T. Cover^[6] and the two envelopes paradox.\nConcretely, Bob can play this strategy: sample a random number . If , then\npick , else pick . Now, Bob can win with probability strictly greater than\n1/2. Suppose Alice's numbers are different, then conditional on , Bob wins\nwith probability 1/2, but conditional on , Bob wins with probability 1.\n\nNote that the random number can be sampled from any random distribution, as\nlong as has nonzero probability.\n\nHowever, for any , Alice can construct an exchangeable sequence such that\nBob's winning probability is at most .^[1]\n\nBut for , the answer is yes: Alice can choose random numbers (which are\ndependent random variables) in such a way that Bob cannot play better than\nusing the classical stopping strategy based on the relative ranks.^[7]\n\n## Heuristic performance[edit]\n\nThe remainder of the article deals again with the secretary problem for a\nknown number of applicants.\n\nExpected success probabilities for three heuristics\n\nStein, Seale & Rapoport 2003 derived the expected success probabilities for\nseveral psychologically plausible heuristics that might be employed in the\nsecretary problem. The heuristics they examined were:\n\n  * The cutoff rule (CR): Do not accept any of the first y applicants; thereafter, select the first encountered candidate (i.e., an applicant with relative rank 1). This rule has as a special case the optimal policy for the classical secretary problem for which y = r.\n  * Candidate count rule (CCR): Select the y-th encountered candidate. Note, that this rule does not necessarily skip any applicants; it only considers how many candidates have been observed, not how deep the decision maker is in the applicant sequence.\n  * Successive non-candidate rule (SNCR): Select the first encountered candidate after observing y non-candidates (i.e., applicants with relative rank > 1).\n\nEach heuristic has a single parameter y. The figure (shown on right) displays\nthe expected success probabilities for each heuristic as a function of y for\nproblems with n = 80.\n\n## Cardinal payoff variant[edit]\n\nFinding the single best applicant might seem like a rather strict objective.\nOne can imagine that the interviewer would rather hire a higher-valued\napplicant than a lower-valued one, and not only be concerned with getting the\nbest. That is, the interviewer will derive some value from selecting an\napplicant that is not necessarily the best, and the derived value increases\nwith the value of the one selected.\n\nTo model this problem, suppose that the applicants have \"true\" values that are\nrandom variables X drawn i.i.d. from a uniform distribution on [0, 1]. Similar\nto the classical problem described above, the interviewer only observes\nwhether each applicant is the best so far (a candidate), must accept or reject\neach on the spot, and must accept the last one if he/she is reached. (To be\nclear, the interviewer does not learn the actual relative rank of each\napplicant. He/she learns only whether the applicant has relative rank 1.)\nHowever, in this version the payoff is given by the true value of the selected\napplicant. For example, if he/she selects an applicant whose true value is\n0.8, then he/she will earn 0.8. The interviewer's objective is to maximize the\nexpected value of the selected applicant.\n\nSince the applicant's values are i.i.d. draws from a uniform distribution on\n[0, 1], the expected value of the tth applicant given that is given by\n\nAs in the classical problem, the optimal policy is given by a threshold, which\nfor this problem we will denote by , at which the interviewer should begin\naccepting candidates. Bearden showed that c is either or .^[8] (In fact,\nwhichever is closest to .) This follows from the fact that given a problem\nwith applicants, the expected payoff for some arbitrary threshold is\n\nDifferentiating with respect to c, one gets\n\nLearning in the partial-information sequential search paradigm. The numbers\ndisplay the expected values of applicants based on their relative rank (out of\nm total applicants seen so far) at various points in the search. Expectations\nare calculated based on the case when their values are uniformly distributed\nbetween 0 and 1. Relative rank information allows the interviewer to more\nfinely evaluate applicants as they accumulate more data points to compare them\nto.\n\nSince for all permissible values of , we find that is maximized at . Since V\nis convex in , the optimal integer-valued threshold must be either or . Thus,\nfor most values of the interviewer will begin accepting applicants sooner in\nthe cardinal payoff version than in the classical version where the objective\nis to select the single best applicant. Note that this is not an asymptotic\nresult: It holds for all . However, this is not the optimal policy to maximize\nexpected value from a known distribution. In the case of a known distribution,\noptimal play can be calculated via dynamic programming.\n\nA more general form of this problem introduced by Palley and Kremer (2014)^[9]\nassumes that as each new applicant arrives, the interviewer observes their\nrank relative to all of the applicants that have been observed previously.\nThis model is consistent with the notion of an interviewer learning as they\ncontinue the search process by accumulating a set of past data points that\nthey can use to evaluate new candidates as they arrive. A benefit of this so-\ncalled partial-information model is that decisions and outcomes achieved given\nthe relative rank information can be directly compared to the corresponding\noptimal decisions and outcomes if the interviewer had been given full\ninformation about the value of each applicant. This full-information problem,\nin which applicants are drawn independently from a known distribution and the\ninterviewer seeks to maximize the expected value of the applicant selected,\nwas originally solved by Moser (1956),^[10] Sakaguchi (1961),^[11] and Karlin\n(1962).\n\n## Other modifications[edit]\n\nThere are several variants of the secretary problem that also have simple and\nelegant solutions.\n\n### Pick the second-best, using one try[edit]\n\nOne variant replaces the desire to pick the best with the desire to pick the\nsecond-best.^[12]^[13]^[14] Robert J. Vanderbei calls this the \"postdoc\"\nproblem arguing that the \"best\" will go to Harvard. For this problem, the\nprobability of success for an even number of applicants is exactly . This\nprobability tends to 1/4 as n tends to infinity illustrating the fact that it\nis easier to pick the best than the second-best.\n\n### Pick the top-k ones, using k tries[edit]\n\nConsider the problem of picking the k best secretaries out of n candidates,\nusing k tries.\n\nIn general, the optimal decision method starts by observing candidates without\npicking any one of them, then pick every candidate that is better than those\nfirst candidates until we run out of candidates or picks. If is held constant\nwhile , then the probability of success converges to .^[15] By Vanderbei 1980,\nif , then the probability of success is .\n\n### Pick the best, using multiple tries[edit]\n\nIn this variant, a player is allowed choices and wins if any choice is the\nbest. An optimal strategy for this problem belongs to the class of strategies\ndefined by a set of threshold numbers , where .\n\nSpecifically, imagine that you have letters of acceptance labelled from to .\nYou would have application officers, each holding one letter. You keep\ninterviewing the candidates and rank them on a chart that every application\nofficer can see. Now officer would send their letter of acceptance to the\nfirst candidate that is better than all candidates to . (Unsent letters of\nacceptance are by default given to the last applicants, the same as in the\nstandard secretary problem.)^[16]\n\nAt limit, each , for some rational number .^[17]\n\n#### Probability of winning[edit]\n\nWhen , the probability of winning converges to . More generally, for positive\nintegers , the probability of winning converges to , where .^[17]\n\n^[16] computed up to , with .\n\nMatsui & Ano 2016 gave a general algorithm. For example, .\n\n## Experimental studies[edit]\n\nExperimental psychologists and economists have studied the decision behavior\nof actual people in secretary problem situations.^[18] In large part, this\nwork has shown that people tend to stop searching too soon. This may be\nexplained, at least in part, by the cost of evaluating candidates. In real\nworld settings, this might suggest that people do not search enough whenever\nthey are faced with problems where the decision alternatives are encountered\nsequentially. For example, when trying to decide at which gas station along a\nhighway to stop for gas, people might not search enough before stopping. If\ntrue, then they would tend to pay more for gas than if they had searched\nlonger. The same may be true when people search online for airline tickets.\nExperimental research on problems such as the secretary problem is sometimes\nreferred to as behavioral operations research.\n\n## Neural correlates[edit]\n\nWhile there is a substantial body of neuroscience research on information\nintegration, or the representation of belief, in perceptual decision-making\ntasks using both animal^[19]^[20] and human subjects,^[21] there is relatively\nlittle known about how the decision to stop gathering information is arrived\nat.\n\nResearchers have studied the neural bases of solving the secretary problem in\nhealthy volunteers using functional MRI.^[22] A Markov decision process (MDP)\nwas used to quantify the value of continuing to search versus committing to\nthe current option. Decisions to take versus decline an option engaged\nparietal and dorsolateral prefrontal cortices, as well ventral striatum,\nanterior insula, and anterior cingulate. Therefore, brain regions previously\nimplicated in evidence integration and reward representation encode threshold\ncrossings that trigger decisions to commit to a choice.\n\n## History[edit]\n\nThe secretary problem was apparently introduced in 1949 by Merrill M. Flood,\nwho called it the fianc\u00e9e problem in a lecture he gave that year. He referred\nto it several times during the 1950s, for example, in a conference talk at\nPurdue on 9 May 1958, and it eventually became widely known in the folklore\nalthough nothing was published at the time. In 1958 he sent a letter to\nLeonard Gillman, with copies to a dozen friends including Samuel Karlin and J.\nRobbins, outlining a proof of the optimum strategy, with an appendix by R.\nPalermo who proved that all strategies are dominated by a strategy of the form\n\"reject the first p unconditionally, then accept the next candidate who is\nbetter\".^[23]\n\nThe first publication was apparently by Martin Gardner in Scientific American,\nFebruary 1960. He had heard about it from John H. Fox Jr., and L. Gerald\nMarnie, who had independently come up with an equivalent problem in 1958; they\ncalled it the \"game of googol\". Fox and Marnie did not know the optimum\nsolution; Gardner asked for advice from Leo Moser, who (together with J. R.\nPounder) provided a correct analysis for publication in the magazine. Soon\nafterwards, several mathematicians wrote to Gardner to tell him about the\nequivalent problem they had heard via the grapevine, all of which can most\nlikely be traced to Flood's original work.^[24]\n\nThe 1/e-law of best choice is due to F. Thomas Bruss.^[25]\n\nFerguson has an extensive bibliography and points out that a similar (but\ndifferent) problem had been considered by Arthur Cayley in 1875 and even by\nJohannes Kepler long before that, who spent 2 years investigating 11\ncandidates for marriage during 1611 -- 1613 after the death of his first\nwife.^[26]\n\n## Combinatorial generalization[edit]\n\nThe secretary problem can be generalized to the case where there are multiple\ndifferent jobs. Again, there are applicants coming in random order. When a\ncandidate arrives, she reveals a set of nonnegative numbers. Each value\nspecifies her qualification for one of the jobs. The administrator not only\nhas to decide whether or not to take the applicant but, if so, also has to\nassign her permanently to one of the jobs. The objective is to find an\nassignment where the sum of qualifications is as big as possible. This problem\nis identical to finding a maximum-weight matching in an edge-weighted\nbipartite graph where the nodes of one side arrive online in random order.\nThus, it is a special case of the online bipartite matching problem.\n\nBy a generalization of the classic algorithm for the secretary problem, it is\npossible to obtain an assignment where the expected sum of qualifications is\nonly a factor of less than an optimal (offline) assignment.^[27]\n\n## See also[edit]\n\n  * Economics portal\n  * Mathematics portal\n\n  * Assignment problem\n  * Odds algorithm\n  * Optimal stopping\n  * Robbins' problem\n  * Search theory\n  * Stable marriage problem\n\n## Notes[edit]\n\n  1. ^ Jump up to: ^a ^b ^c ^d Ferguson, Thomas S. (August 1989). \"Who Solved the Secretary Problem?\". Statistical Science. 4 (3): 282\u2013289. doi:10.1214/ss/1177012493.\n  2. ^ Hill, Theodore P. (2009). \"Knowing When to Stop\". American Scientist. 97 (2): 126\u2013133. doi:10.1511/2009.77.126. ISSN 1545-2786. S2CID 124798270. For French translation, see cover story in the July issue of Pour la Science (2009).\n  3. ^ Thomson, Jonny (21 April 2022). \"Mathematicians suggest the \"37% rule\" for your life's biggest decisions\". Big Think. Retrieved 6 February 2024.\n  4. ^ Gnedin 2021.\n  5. ^ Gardner 1966.\n  6. ^ Cover, Thomas M. (1987), Cover, Thomas M.; Gopinath, B. (eds.), \"Pick the Largest Number\", Open Problems in Communication and Computation, New York, NY: Springer, pp. 152\u2013152, doi:10.1007/978-1-4612-4808-8_43, ISBN 978-1-4612-4808-8, retrieved 25 June 2023\n  7. ^ Gnedin 1994.\n  8. ^ Bearden 2006.\n  9. ^ Palley, Asa B.; Kremer, Mirko (8 July 2014). \"Sequential Search and Learning from Rank Feedback: Theory and Experimental Evidence\". Management Science. 60 (10): 2525\u20132542. doi:10.1287/mnsc.2014.1902. ISSN 0025-1909.\n  10. ^ Moser, Leo (1956). \"On a problem of Cayley\". Scripta Math. 22: 289\u2013292.\n  11. ^ Sakaguchi, Minoru (1 June 1961). \"Dynamic programming of some sequential sampling design\". Journal of Mathematical Analysis and Applications. 2 (3): 446\u2013466. doi:10.1016/0022-247X(61)90023-3. ISSN 0022-247X.\n  12. ^ Rose, John S. (1982). \"Selection of nonextremal candidates from a random sequence\". J. Optim. Theory Appl. 38 (2): 207\u2013219. doi:10.1007/BF00934083. ISSN 0022-3239. S2CID 121339045.\n  13. ^ Szajowski, Krzysztof (1982). \"Optimal choice of an object with ath rank\". Matematyka Stosowana. Annales Societatis Mathematicae Polonae, Series III. 10 (19): 51\u201365. doi:10.14708/ma.v10i19.1533. ISSN 0137-2890.\n  14. ^ Vanderbei, Robert J. (21 June 2021). \"The postdoc variant of the secretary problem\". Mathematica Applicanda. Annales Societatis Mathematicae Polonae, Series III. 49 (1): 3\u201313. doi:10.14708/ma.v49i1.7076. ISSN 2299-4009.{{cite journal}}: CS1 maint: date and year (link)\n  15. ^ Girdhar & Dudek 2009.\n  16. ^ Jump up to: ^a ^b Gilbert & Mosteller 1966.\n  17. ^ Jump up to: ^a ^b Matsui & Ano 2016.\n  18. ^ Bearden, Murphy, and Rapoport, 2006; Bearden, Rapoport, and Murphy, 2006; Seale and Rapoport, 1997; Palley and Kremer, 2014\n  19. ^ Shadlen, M. N.; Newsome, W. T. (23 January 1996). \"Motion perception: seeing and deciding\". Proceedings of the National Academy of Sciences. 93 (2): 628\u2013633. Bibcode:1996PNAS...93..628S. doi:10.1073/pnas.93.2.628. PMC 40102. PMID 8570606.\n  20. ^ Roitman, Jamie D.; Shadlen, Michael N. (1 November 2002). \"Response of Neurons in the Lateral Intraparietal Area during a Combined Visual Discrimination Reaction Time Task\". The Journal of Neuroscience. 22 (21): 9475\u20139489. doi:10.1523/JNEUROSCI.22-21-09475.2002. PMC 6758024. PMID 12417672.\n  21. ^ Heekeren, Hauke R.; Marrett, Sean; Ungerleider, Leslie G. (9 May 2008). \"The neural systems that mediate human perceptual decision making\". Nature Reviews Neuroscience. 9 (6): 467\u2013479. doi:10.1038/nrn2374. PMID 18464792. S2CID 7416645.\n  22. ^ Costa, V. D.; Averbeck, B. B. (18 October 2013). \"Frontal-Parietal and Limbic-Striatal Activity Underlies Information Sampling in the Best Choice Problem\". Cerebral Cortex. 25 (4): 972\u2013982. doi:10.1093/cercor/bht286. PMC 4366612. PMID 24142842.\n  23. ^ Flood 1958.\n  24. ^ Gardner 1966, Problem 3.\n  25. ^ Bruss 1984.\n  26. ^ Ferguson 1989.\n  27. ^ Kesselheim, Thomas; Radke, Klaus; T\u00f6nnis, Andreas; V\u00f6cking, Berthold (2013). \"An Optimal Online Algorithm for Weighted Bipartite Matching and Extensions to Combinatorial Auctions\". Algorithms \u2013 ESA 2013. Lecture Notes in Computer Science. Vol. 8125. pp. 589\u2013600. doi:10.1007/978-3-642-40450-4_50. ISBN 978-3-642-40449-8.\n\n## References[edit]\n\n  * Bearden, J.N. (2006). \"A new secretary problem with rank-based selection and cardinal payoffs\". Journal of Mathematical Psychology. 50: 58\u20139. doi:10.1016/j.jmp.2005.11.003.\n  * Bearden, J.N.; Murphy, R.O.; Rapoport, A. (2005). \"A multi-attribute extension of the secretary problem: Theory and experiments\". Journal of Mathematical Psychology. 49 (5): 410\u2013425. CiteSeerX 10.1.1.497.6468. doi:10.1016/j.jmp.2005.08.002. S2CID 9186039.\n  * Bearden, J. Neil; Rapoport, Amnon; Murphy, Ryan O. (September 2006). \"Sequential Observation and Selection with Rank-Dependent Payoffs: An Experimental Study\". Management Science. 52 (9): 1437\u20131449. doi:10.1287/mnsc.1060.0535.\n  * Bruss, F. Thomas (June 2000). \"Sum the odds to one and stop\". The Annals of Probability. 28 (3): 1384\u20131391. doi:10.1214/aop/1019160340.\n  * Bruss, F. Thomas (October 2003). \"A note on bounds for the odds theorem of optimal stopping\". The Annals of Probability. 31 (4): 1859\u20131961. doi:10.1214/aop/1068646368.\n  * Bruss, F. Thomas (August 1984). \"A Unified Approach to a Class of Best Choice Problems with an Unknown Number of Options\". The Annals of Probability. 12 (3): 882\u2013889. doi:10.1214/aop/1176993237.\n  * Flood, Merrill R. (1958). \"Proof of the optimum strategy\". Letter to Martin Gardner. Martin Gardner papers series 1, box 5, folder 19: Stanford University Archives.{{cite press release}}: CS1 maint: location (link)\n  * Freeman, P.R. (1983). \"The secretary problem and its extensions: A review\". International Statistical Review / Revue Internationale de Statistique. 51 (2): 189\u2013206. doi:10.2307/1402748. JSTOR 1402748.\n  * Gardner, Martin (1966). \"3\". New Mathematical Diversions from Scientific American. Simon and Schuster. [reprints his original column published in February 1960 with additional comments]\n  * Girdhar, Yogesh; Dudek, Gregory (2009). \"Optimal Online Data Sampling or How to Hire the Best Secretaries\". 2009 Canadian Conference on Computer and Robot Vision. pp. 292\u2013298. CiteSeerX 10.1.1.161.41. doi:10.1109/CRV.2009.30. ISBN 978-1-4244-4211-9. S2CID 2742443.\n  * Gilbert, J; Mosteller, F (1966). \"Recognizing the Maximum of a Sequence\". Journal of the American Statistical Association. 61 (313): 35\u201373. doi:10.2307/2283044. JSTOR 2283044.\n  * Gnedin, A. (1994). \"A solution to the game of Googol\". Annals of Probability. 22 (3): 1588\u20131595. doi:10.1214/aop/1176988613.\n  * Gnedin, A. (2021). \"The best choice problem with random arrivals: How to beat the 1/e-strategy\". Stochastic Processes and Their Applications. 145: 226\u2013240. doi:10.1016/j.spa.2021.12.008. S2CID 245449000.\n  * Hill, T.P. \"Knowing When to Stop\". American Scientist, Vol. 97, 126-133 (2009). (For French translation, see cover story in the July issue of Pour la Science (2009))\n  * Ketelaar, Timothy; Todd, Peter M. (2001). \"Framing Our Thoughts: Ecological Rationality as Evolutionary Psychology's Answer to the Frame Problem\". Conceptual Challenges in Evolutionary Psychology. Studies in Cognitive Systems. Vol. 27. pp. 179\u2013211. doi:10.1007/978-94-010-0618-7_7. ISBN 978-94-010-3890-4.\n  * Matsui, T; Ano, K (2016). \"Lower bounds for Bruss' odds problem with multiple stoppings\". Mathematics of Operations Research. 41 (2): 700\u2013714. arXiv:1204.5537. doi:10.1287/moor.2015.0748. S2CID 31778896.\n  * Miller, Geoffrey F. (2001). The mating mind: how sexual choice shaped the evolution of human nature. Anchor Books. ISBN 978-0-385-49517-2.\n  * Sardelis, Dimitris A.; Valahas, Theodoros M. (March 1999). \"Decision Making: A Golden Rule\". The American Mathematical Monthly. 106 (3): 215. doi:10.2307/2589677. JSTOR 2589677.\n  * Seale, D.A.; Rapoport, A. (1997). \"Sequential decision making with relative ranks: An experimental investigation of the 'secretary problem'\". Organizational Behavior and Human Decision Processes. 69 (3): 221\u2013236. doi:10.1006/obhd.1997.2683.\n  * Stein, W.E.; Seale, D.A.; Rapoport, A. (2003). \"Analysis of heuristic solutions to the best choice problem\". European Journal of Operational Research. 151: 140\u2013152. doi:10.1016/S0377-2217(02)00601-X.\n  * Vanderbei, R. J. (November 1980). \"The Optimal Choice of a Subset of a Population\". Mathematics of Operations Research. 5 (4): 481\u2013486. doi:10.1287/moor.5.4.481.\n  * Vanderbei, Robert J. (2012). The postdoc variant of the secretary problem (PDF) (Report). CiteSeerX 10.1.1.366.1718.\n\n## External links[edit]\n\n  * OEIS sequence A054404 (Number of daughters to wait before picking in sultan's dowry problem with n daughters)\n  * Weisstein, Eric W. \"Sultan's Dowry Problem\". MathWorld.\n  * Neil Bearden. \"Optimal Search (Secretary Problems)\". Archived from the original on 4 January 2017.\n  * Optimal Stopping and Applications book by Thomas S. Ferguson\n\n## Notes[edit]\n\n  1. ^\n    \n        import numpy as np import pandas as pd # Define the function for which you want to find the maximum def func(r, n): if r == 1: return 0 else: return (r - 1) / n * np.sum([1 / (i - 1) for i in range(r, n+1)]) # Define a function to solve the problem for a specific n def solve(n): values = [func(r, n) for r in range(1, n+1)] r_max = np.argmax(values) + 1 return r_max, values[r_max - 1] # Define a function to print the results as a Markdown table def print_table(n_max): # Prepare data for the table data = [solve(n) for n in range(1, n_max+1)] df = pd.DataFrame(data, columns=['r', 'Max Value'], index=range(1, n_max+1)) df.index.name = 'n' # Convert the DataFrame to Markdown and print print(df.transpose().to_markdown()) # Print the table for n from 1 to 10 print_table(10)\n\nAuthority control databases: National|\n\n  * Israel\n  * United States\n\n  \n---|---  \n  \nRetrieved from\n\"https://en.wikipedia.org/w/index.php?title=Secretary_problem&oldid=1204225016\"\n\nCategories:\n\n  * Decision theory\n  * Sequential methods\n  * Matching (graph theory)\n  * Optimal decisions\n  * Probability problems\n  * Mathematical optimization in business\n\nHidden categories:\n\n  * CS1 maint: date and year\n  * Articles with short description\n  * Short description is different from Wikidata\n  * Use dmy dates from March 2020\n  * All articles with unsourced statements\n  * Articles with unsourced statements from June 2016\n  * Articles with unsourced statements from May 2022\n  * CS1 maint: location\n  * Articles with J9U identifiers\n  * Articles with LCCN identifiers\n\n  * This page was last edited on 6 February 2024, at 17:57 (UTC).\n  * Text is available under the Creative Commons Attribution-ShareAlike License 4.0; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia\u00ae is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.\n\n  * Privacy policy\n  * About Wikipedia\n  * Disclaimers\n  * Contact Wikipedia\n  * Code of Conduct\n  * Developers\n  * Statistics\n  * Cookie statement\n  * Mobile view\n  * Edit preview settings\n\n", "frontpage": true}
