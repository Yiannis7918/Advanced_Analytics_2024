{"aid": "40034586", "title": "Show HN: I just released Awning. A fully dockerized Bitcoin+LND (+BTCPay) node", "url": "https://github.com/giovantenne/awning", "domain": "github.com/giovantenne", "votes": 2, "user": "zener79", "posted_at": "2024-04-14 21:20:41", "comments": 0, "source_title": "GitHub - giovantenne/awning: A dockerized Bitcoin + LND node. Something like Umbrel but lighter and portable. Something like RaspiBolt but easier and automated. Bitcoin/Lightning-Network oriented with no frills.", "source_text": "GitHub - giovantenne/awning: A dockerized Bitcoin + LND node. Something like\nUmbrel but lighter and portable. Something like RaspiBolt but easier and\nautomated. Bitcoin/Lightning-Network oriented with no frills.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ngiovantenne / awning Public\n\n  * Notifications\n  * Fork 4\n  * Star 9\n\nA dockerized Bitcoin + LND node. Something like Umbrel but lighter and\nportable. Something like RaspiBolt but easier and automated.\nBitcoin/Lightning-Network oriented with no frills.\n\n### License\n\nMIT license\n\n9 stars 4 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# giovantenne/awning\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ngiovantenneREADMEb2aea28 \u00b7\n\n## History\n\n8 Commits  \n  \n### Dockerfiles\n\n|\n\n### Dockerfiles\n\n| lndconnect and TOR hidden services  \n  \n### configs\n\n|\n\n### configs\n\n| btcpay disabled by default  \n  \n### data\n\n|\n\n### data\n\n| First public release  \n  \n### .env\n\n|\n\n### .env\n\n| First public release  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| First public release  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| First public release  \n  \n### README.md\n\n|\n\n### README.md\n\n| README  \n  \n### docker-compose.yml\n\n|\n\n### docker-compose.yml\n\n| btcpay disabled by default  \n  \n## Repository files navigation\n\n# A dockerized Bitcoin + LND + BTCPay node\n\nSomething like Umbrel but lighter and portable. Something like RaspiBolt but\neasier and automated. Bitcoin/Lightning-Network oriented with no frills.\n\nAwning doesn't install anything on your PC, making it lightweight,\ncustomizable and portable. It is a plain/vanilla Docker setup. No script is\never run in your host.\n\n### Run your BTC/LN node in 6 steps:\n\n  1. Clone this repository\n  2. Create a Github repository for storing the LND Static Channel Backups (SCB)\n  3. Edit and customize the .env file\n  4. Start the Docker containers\n  5. Authorize SCB to be uploaded on Github\n  6. Create o restore a LND wallet\n\nYou can also add your BTCPay Server eventually.\n\n# Prerequisites\n\n  * git\n  * docker\n  * docker-compose (or docker compose plugin)\n\n    \n    \n    $ sudo apt-get install -y docker.io docker-compose git\n\nPlease follow this guide if you don't want to preface the docker and the\ndocker-compose commands with sudo. In this guide sudo will be always omitted.\n\n# Before you begin\n\nClone or download this repository and enter the project directory.\n\n    \n    \n    $ git clone https://github.com/giovantenne/awning.git $ cd awning\n\n## LND channel backups preparation\n\nThe Static Channels Backup (SCB) is a feature of LND that allows for the on-\nchain recovery of lightning channel balances in the case of a bricked node.\nDespite its name, it does not allow the recovery of your LN channels but\nincreases the chance that you'll recover all (or most) of your off-chain\n(local) balances.\n\nAwning will automatically upload a copy of your channel.backup every time it\nchanges on a Github repository you own, so you will need to create one and\nprovide upload credential (see here)\n\n#### Create a GitHub repository\n\n  * Go to GitHub, sign up for a new user account, or log in with an existing one.\n\n  * Create a new repository: https://github.com/new\n\n    * Choose a repository name (eg. remote-lnd-backup)\n    * Select \"Private\" (rather than the default \"Public\")\n    * Click on \"Create repository\"\n    * Annotate your SSH repository address. You will need this later.\n\n## Edit and understand the .env file\n\nThe .env file contains some Awning setup parameters that you can/need to\ncustomize:\n\nParameter| Description  \n---|---  \nBITCOIN_ARCH| Here you need to choose your computer CPU architecture. Write\naarch64 for ARM (Raspberry Pi, etc) or x86_64 for Intel or AMD.  \nLND_ARCH| Write arm64 for ARM (Raspberry Pi, etc) or amd64 for Intel or AMD.  \nRTL_PASSWORD| Choose the password for accessing the \"Ride The Lightning\" web\ninterface. You can change it any time but don't forget to restart the RTL\ncontainer afterwards with docker-compose restart rtl.  \nLND_PASSWORD| Choose the password to automatically protected and unlock the\nLND wallet (write moneyprintergobrrr if you are migrating from Umbrel). You\nwill need to use this password again here. Changing this after the first setup\nwill have no effect.  \nSCB_REPO| Paste here the address of your new created Github repository. It\nshould be something like git@github.com:giovantenne/remote-lnd-backup.git.  \nUID| The uid (user id) of your current user. Use this command to retrieve it:\nid -u.  \nGID| The gid (group id) of your current user. Use this command to retrieve it:\nid -g.  \n  \n# How to begin\n\nRun the following command:\n\n    \n    \n    $ docker-compose up -d\n\nThis will spin-up the following services/containers in background:\n\n  * Bitcoin Core\n  * Electrs\n  * LND\n  * RTL (Ride The Lightning)\n  * TOR\n  * Nginx (used as reverse-proxy)\n  * SCB (Automatic static channel backups)\n\nThe first time it will take some time to build all the images from scratch\n(especially compiling the Electrs binary can take up to one hour).\n\nAfter all the images are built, \u201cbitcoind\u201d should start, begin to sync and\nvalidate the Bitcoin blockchain. If you already downloaded the blockchain\nsomewhere else, you can just copy the data to the ./data/bitcoin directory\nbefore the docker-compose up -d command.\n\nCheck the status of the bitcoin daemon that was started with the following\ncommand. Exit with Ctrl-C\n\n    \n    \n    $ docker logs -f bitcoin\n\nThose services open the following TCP ports on your host:\n\nParameter| Service| Description  \n---|---|---  \n50002| Electrs| Electrs with SSL  \n8080| LND| Rest API for LND with SSL  \n8081| RTL| RTL web interface with SSL  \n8082| RTL| RTL web interface without SSL  \n8083| BTCPay Server (optional)| BTCPay server web interface with SSL  \n8084| BTCPay Server (optional)| BTCPay server web interface without SSL  \n  \n# Finish the setup\n\nOnce you first start the containers there is still a couple of steps to\ncomplete:\n\n### Authorize SCB to be uploaded on Github\n\nRun this command:\n\n    \n    \n    $ docker logs scb 2> /dev/null | grep -o 'ssh-rsa.*' | head -1\n\n  * Go back to the GitHub repository webpage\n  * Click on \"Settings\", then \"Deploy keys\", then \"Add deploy key\"\n  * Type a title (e.g., \"SCB\")\n  * In the \"Key\" box, copy/paste the string generated above starting (e.g. ssh-rsa 5678efgh... scb@28ba58e278da)\n  * Tick the box \"Allow write access\" to enable this key to push changes to the repository\n  * Click \"Add key\"\n\n### Create or restore the LND wallet\n\nIf you are migrating from Umbrel or from an existing LND node just copy your\ndata to the ./data/lnd directory and skip the rest of this step, otherwise run\nthis command:\n\n    \n    \n    $ docker exec -it lnd lncli create\n\nEnter your password as wallet password (it must be exactly the same you stored\nin .env as LND_PASSWORD).\n\nTo create a a new wallet, select n when asked if you have an existing cipher\nseed. Just press enter if asked about an additional seed passphrase, unless\nyou know what you\u2019re doing. A new cipher seed consisting of 24 words is\ncreated.\n\nThese 24 words is all that you need to restore the Bitcoin on-chain wallet.\nThe current state of your channels, however, cannot be recreated from this\nseed.\n\n\ud83d\udea8 This information must be kept secret at all times.\n\nWrite these 24 words down manually on a piece of paper and store it in a safe\nplace.\n\n# Accessing RTL web interface\n\nRide The Lightining is accessible on both http and https with a self signed\nSSL certificate (so expect a warning message from your browser) using the\npassword choosen on the .env file.\n\nIf you are running Awning on your PC you can access the web interface through\nthese URLs:\n\n  * https://localhost:8081\n  * http://localhost:8082\n\nReplace localhost with the IP of your node if you are runnin Awning on a\ndifferent PC.\n\n# Connect Zeus to your node (via TOR)\n\n  * Download the Zeus app for your mobile phone.\n  * Open Zeus and tap on \u201cGET STARTED\u201d\n  * Tap on \u201cConnect a node\u201d and then tap on the \u201c+\u201d at the top right to add your node\n  * Enter a Nickname for your node (e.g., AwningNode)\n  * Click on \u201cSCAN LNDCONNECT CONFIG\u201d and, if prompted, allow Zeus to use the camera\n  * Scan the QR code generated with the following command. It will be a big QR code, so maximize your terminal window and use CTRL+- to shrink the code further to fit the screen\n\n    \n    \n    $ URI=`docker exec tor cat /var/lib/tor/hidden_service_lnd_rest/hostname` && docker exec lnd lndconnect --host $URI --port 8080\n\n  * Click on \u201cSAVE NODE CONFIG\u201d. Zeus is now connecting to your node, and it might take a while the first time.\n\n# Useful comands\n\nCommand| Description  \n---|---  \ndocker ps| Lists the containers that are running on your host  \ndocker logs -f bitcoin| Stream the logs for the bitcoin/lnd/electrs container  \ndocker exec -it lnd bash| Connect to the lnd container so that you can use the\nlncli command (eg. lncli getinfo)  \ndocker-compose restart bitcoin| Restart the bitcoin/lnd/electrs container  \ndocker-compose build --no-cache| Rebuild all the containers from scratch  \ndocker-compose down| Stop all the containers  \ndocker-compose up -d| Start all the containers  \n  \n# Directories structure\n\n    \n    \n    \u251c\u2500\u2500 configs \u2502 \u251c\u2500\u2500 bitcoin.conf \u2502 \u251c\u2500\u2500 electrs.toml \u2502 \u251c\u2500\u2500 lnd.conf \u2502 \u251c\u2500\u2500 nginx-reverse-proxy.conf \u2502 \u251c\u2500\u2500 rtl.json \u2502 \u2514\u2500\u2500 torrc \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 bitcoin \u2502 \u251c\u2500\u2500 btcpay \u2502 \u251c\u2500\u2500 electrs \u2502 \u251c\u2500\u2500 lnd \u2502 \u251c\u2500\u2500 nbx \u2502 \u251c\u2500\u2500 postgres \u2502 \u251c\u2500\u2500 rtl \u2502 \u251c\u2500\u2500 scb \u2502 \u2514\u2500\u2500 tor \u251c\u2500\u2500 docker-compose.yml \u251c\u2500\u2500 Dockerfiles \u2502 \u251c\u2500\u2500 Dockerfile.bitcoin \u2502 \u251c\u2500\u2500 Dockerfile.electrs \u2502 \u251c\u2500\u2500 Dockerfile.lnd \u2502 \u251c\u2500\u2500 Dockerfile.nbx \u2502 \u251c\u2500\u2500 Dockerfile.nginx \u2502 \u251c\u2500\u2500 Dockerfile.rtl \u2502 \u251c\u2500\u2500 Dockerfile.scb \u2502 \u251c\u2500\u2500 Dockerfile.tor \u2502 \u251c\u2500\u2500 entrypoints \u2502 \u2502 \u251c\u2500\u2500 lnd.sh \u2502 \u2502 \u2514\u2500\u2500 scb.sh \u2502 \u2514\u2500\u2500 files \u2502 \u2514\u2500\u2500 nginx.conf \u251c\u2500\u2500 LICENSE \u2514\u2500\u2500 README.md\n\nDirectory| Description  \n---|---  \nconfigs| Here you can find all the configuration files. Feel free to edit them\nas you like, but please be carefull to not mess-up with authentication method:\nAwning currently uses cookies authentication between services instead of RPC.  \ndata| Here is where the data are persisted. The Bitcoin Blockchain, the\nElectrs indexes, the LND channels, etc. are all stored here.  \nDockerfiles| Here you can find and inspect all the files used to build the\nimages. Don't trust, verify!  \n  \n# BTCPAY Server (optional)\n\nYou can easily run your own self-hosted instance of BTCPay Server with Awning\nwith just a few slight modification to a couple of files provided with this\nreposiroty:\n\nFile| Modification  \n---|---  \ndocker-compose.yml|\n\n  * Replace the depends_on directive under the nginx section with the one provided.\n  * Uncomment the ports 8083 and 8084 under the nginx section.\n  * Uncomment the btcpay, nbx and postgres services blocks.\n\n  \nconfigs/nginx-reverse-proxy.conf| Uncomment the upstream btcpay and 8083, 8084\nserver blocks.  \n  \nRun docker-compose down and then docker-compose up -d again.\n\nBTCPay server will run 3 additionals containers (requred files and directories\nare already present on this repository):\n\n  * Postgres\n  * NBXplorer\n  * BTCPay-server\n\n# Donations/Project contributions\n\nIf you would like to contribute and help dev team with this project you can\nsend a donation to the following LN address \u26a1donate@btcpay.cryptogadgets.net\u26a1\nor on-chain bc1qg2t8vnahzv5yy7e885l0a59ggagne9nxdvts4t\n\nEnjoy!\n\n## About\n\nA dockerized Bitcoin + LND node. Something like Umbrel but lighter and\nportable. Something like RaspiBolt but easier and automated.\nBitcoin/Lightning-Network oriented with no frills.\n\n### Topics\n\ndocker bitcoin lightning-network lnd\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n9 stars\n\n### Watchers\n\n3 watching\n\n### Forks\n\n4 forks\n\nReport repository\n\n## Languages\n\n  * Shell 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
