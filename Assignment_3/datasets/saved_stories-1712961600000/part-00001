{"aid": "40014858", "title": "Show HN: JSX-Htmx that doesn't conflict with react", "url": "https://github.com/BetterCorp/jsx-htmx", "domain": "github.com/bettercorp", "votes": 2, "user": "mrinc", "posted_at": "2024-04-12 16:38:29", "comments": 0, "source_title": "GitHub - BetterCorp/jsx-htmx: TypeSafe HTML/HTMX templates using TypeScript. No need to learn a template library.", "source_text": "GitHub - BetterCorp/jsx-htmx: TypeSafe HTML/HTMX templates using TypeScript.\nNo need to learn a template library.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nBetterCorp / jsx-htmx Public\n\n  * Notifications\n  * Fork 0\n  * Star 1\n\nTypeSafe HTML/HTMX templates using TypeScript. No need to learn a template\nlibrary.\n\n1 star 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# BetterCorp/jsx-htmx\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmrincUpdated some boolean attrs4878b10 \u00b7\n\n## History\n\n10 Commits  \n  \n### src\n\n|\n\n### src\n\n| Updated some boolean attrs  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Added base code  \n  \n### README.md\n\n|\n\n### README.md\n\n| Added custom components for easy reference and component creation  \n  \n### package-lock.json\n\n|\n\n### package-lock.json\n\n| Added src to package for all ts types  \n  \n### package.json\n\n|\n\n### package.json\n\n| Updated some boolean attrs  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| Updated build and exports  \n  \n## Repository files navigation\n\n# jsx-htmx\n\n## Why?\n\nSimply put, I needed an htmx JSX library that did not (1) globally override\nthe JSX namespace and (2) did not use /// require anywhere. Both those meant\nthat your whole project would be subject to those imports. Where all I wanted\nwas to be able to import a library and reference with jsx to get type same\nhtml/htmx AND be able to still use React/React.email elsewhere - while still\nbeing fully typesafe.\n\n(example from original design by Desdaemon - typed-htmx)\n\nDefinitions for htmx+html attributes in JSX.\n\n## Usage\n\nYou can configure jsx-htmx either as pure type declarations, or as a JSX\ntemplating engine.\n\n### As type declarations\n\nConfigure your tsconfig.json as follows:\n\n    \n    \n    { \"compilerOptions\": { \"jsx\": \"react-jsx\", \"moduleResolution\": \"node\" } }\n\nThis library was designed for use with commonjs.\n\n#### Importing/using this:\n\nEither by defining it globally in your tsconfig file:\n\n    \n    \n    { \"compilerOptions\": { \"jsx\": \"react-jsx\", \"moduleResolution\": \"node16\", \"jsxImportSource\": \"jsx-htmx\" } }\n\nOR Directly in the tsx/jsx files:\n\n    \n    \n    /** @jsxImportSource jsx-htmx */ function MyComponent({ children }) { return <div hx-get=\"/asd\">{children}</div>; // ^?: string | undefined }\n\n## Component Creation\n\nThere are 2 types to make things easier: CustomComponent and\nSimpleCustomComponent.\n\nThe difference is the CustomComponent contains a type property which you can\nextend for default props you want to always passthrough instead of re-\ndeclaring them.\n\nEG: SimpleCustomComponent\n\n    \n    \n    const Badge: SimpleCustomComponent = (props) => { return <div class=\"component\">{props.children}</div>; };\n\nEG: CustomComponent\n\n    \n    \n    type MyParams = { userName: string; }; type MyComponentType<Props = null> = CustomComponent<MyParams, Props>; type MyComponentTypeUser<Props = null> = CustomComponent< MyParams & { id: string }, Props >; const Badge: MyComponentType = (props) => { return <div class=\"component\">{props.userName}</div>; }; const Badge2: MyComponentType<{ id: string }> = (props) => { return ( <div class=\"component2\"> {props.userName} - {props.id} </div> ); }; const Badge3: MyComponentTypeUser = (props) => { return ( <div class=\"component2\"> {props.userName} - {props.id} </div> ); }; const Content: SimpleCustomComponent = (props) => { return ( <div class=\"component\"> <MyComponentType userName=\"USER\" id={\"id\"} /> </div> ); };\n\n# Original sources/attributions:\n\ntyped-htmx typed-html\n\n## About\n\nTypeSafe HTML/HTMX templates using TypeScript. No need to learn a template\nlibrary.\n\n### Resources\n\nReadme\n\nActivity\n\nCustom properties\n\n### Stars\n\n1 star\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * TypeScript 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
