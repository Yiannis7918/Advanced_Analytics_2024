{"aid": "40014421", "title": "Backrest: UI for Restic Backups", "url": "https://github.com/garethgeorge/backrest", "domain": "github.com/garethgeorge", "votes": 1, "user": "thangngoc89", "posted_at": "2024-04-12 16:03:07", "comments": 0, "source_title": "GitHub - garethgeorge/backrest: Backrest is a web UI and orchestrator for restic backup.", "source_text": "GitHub - garethgeorge/backrest: Backrest is a web UI and orchestrator for\nrestic backup.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ngarethgeorge / backrest Public\n\n  * Notifications\n  * Fork 20\n  * Star 475\n\nBackrest is a web UI and orchestrator for restic backup.\n\n### License\n\nGPL-3.0 license\n\n475 stars 20 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# garethgeorge/backrest\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n8 Branches\n\n30 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ngarethgeorgechore(main): release 0.17.1 (#212)66d63c1 \u00b7\n\n## History\n\n298 Commits  \n  \n### .devcontainer\n\n|\n\n### .devcontainer\n\n| chore: add devcontainer and vscode launch configurations (#128)  \n  \n### .github\n\n|\n\n### .github\n\n| chore: finish homebrew tap onboarding  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| chore: add devcontainer and vscode launch configurations (#128)  \n  \n### gen/go\n\n|\n\n### gen/go\n\n| feat: allow hook exit codes to control backup execution (e.g fail, sk...  \n  \n### internal\n\n|\n\n### internal\n\n| fix: revert orchestrator changes  \n  \n### pkg/restic\n\n|\n\n### pkg/restic\n\n| fix: address minor data race in command output handling and enable --...  \n  \n### proto\n\n|\n\n### proto\n\n| feat: allow hook exit codes to control backup execution (e.g fail, sk...  \n  \n### scripts\n\n|\n\n### scripts\n\n| chore: update install / download scripts  \n  \n### test/helpers\n\n|\n\n### test/helpers\n\n| chore: enable full test coverage for Windows (#206)  \n  \n### webui\n\n|\n\n### webui\n\n| feat: allow hook exit codes to control backup execution (e.g fail, sk...  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| chore: add devcontainer and vscode launch configurations (#128)  \n  \n### .goreleaser.yaml\n\n|\n\n### .goreleaser.yaml\n\n| chore: finish homebrew tap onboarding  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| chore(main): release 0.17.1 (#212)  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| feat: add release artifacts for arm32  \n  \n### Dockerfile.alpine\n\n|\n\n### Dockerfile.alpine\n\n| fix: include restic binary in alpine and scratch docker images  \n  \n### Dockerfile.scratch\n\n|\n\n### Dockerfile.scratch\n\n| fix: include restic binary in alpine and scratch docker images  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| chore: add GNU license  \n  \n### README.md\n\n|\n\n### README.md\n\n| fix: default BACKREST_PORT to 127.0.0.1:9898 (localhost only) when us...  \n  \n### backrest.go\n\n|\n\n### backrest.go\n\n| chore: improve log messages  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| fix: misc UI and backend bug fixes  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| fix: misc UI and backend bug fixes  \n  \n### install.sh\n\n|\n\n### install.sh\n\n| fix: default BACKREST_PORT to 127.0.0.1:9898 (localhost only) when us...  \n  \n### uninstall.sh\n\n|\n\n### uninstall.sh\n\n| chore: update install / download scripts  \n  \n## Repository files navigation\n\nOverview\n\nBackrest is a web-accessible backup solution built on top of restic. Backrest\nprovides a WebUI which wraps the restic CLI and makes it easy to create repos,\nbrowse snapshots, and restore files. Additionally, Backrest can run in the\nbackground and take an opinionated approach to scheduling snapshots and\norchestrating repo health operations.\n\nBy building on restic, Backrest leverages restic's mature feature set. Restic\nprovides fast, reliable (used by tens of thousands of individuals and by\ncorporations in production environments), and secure backup operations.\nBackrest itself is built in Golang (matching restic's implementation) and is\nshipped as a self-contained and light weight (<20 MB on all platforms) binary\nwith no dependecies other than restic.\n\nThis project aims to be the easiest way to setup and get started with backups\non any system. You can expect to be able to perform all operations from the\nweb interface but should you ever need more control, you are free to browse\nyour repo and perform operations using the restic cli. Backrest safely detects\nand imports external operations (e.g. manual backups).\n\nPreview\n\nPlatform Support\n\n  * Docker\n  * Linux\n  * MacOS\n  * Windows\n  * FreeBSD\n\nFeatures\n\n  * WebUI for restic supports local and remote access (e.g. run on a NAS and access from your desktop)\n  * Realtime UI e.g. live progress bars for backup operations and live refreshes of operation history.\n  * Snapshot browser\n  * Restore interface\n  * Configurable backup plans\n\n    * Cronexprs provide flexible scheduling options\n    * Configurable retention policies with restic forget (e.g. keep 1 snapshot per day for 30 days, 1 snapshot per week for 6 months, etc)\n    * Include lists\n    * Exclusion lists\n    * Add custom CLI flags for detailed control of restic e.g. for use with rclone\n    * Supported destinations are any restic supported repository (e.g. local filesystem, S3, Backblaze, rclone, etc).\n  * Automatic repo health operations e.g. forget and prune.\n\n    * Forget runs after every backup.\n    * Prune once every 7 days by default.\n  * Multiple backup plans can be configured running on different schedules and with different retention policies.\n  * Multiple restic repositories can be configured and used in different plans.\n  * Event hooks for notifications\n\n    * Lifecycle hooks are triggered with status information from operations backrest runs on your behalf.\n    * Supported services: Discord, Gotify, Shell Command\n    * Events: Backup Start, Backup Finish, Backup Error, Any Error\n  * Multi-user authentication: backrest can be secured with a username and password.\n\n# User Guide\n\nSee the backrest wiki.\n\n# Installation\n\nBackrest is packaged as a single executable. It can be run directly on Linux,\nMacOS, and Windows. restic will be downloaded and installed in the data\ndirectory on first run.\n\nDownload options\n\n  * Download and run a release from the releases page.\n  * Build from source (see below).\n  * Run with docker: garethgeorge/backrest:latest (see on dockerhub) or garethgeorge/backrest:latest-alpine for an image that includes rclone and common unix utilities.\n\nBackrest is accessible from a web browser. By default it binds to 0.0.0.0:9898\nand can be accessed at http://localhost:9898. Change the port with the\nBACKREST_PORT environment variable e.g. BACKREST_PORT=127.0.0.1 backrest to\nlisten only on local interfaces. On first startup backrest will prompt you to\ncreate a default username and password, this can be changed later in the\nsettings page.\n\nNote: backrest installs a specific restic version to ensure that the version\nof restic matches the version backrest is tested against. This provides the\nbest guarantees for stability. If you wish to use a different version of\nrestic OR if you would prefer to install restic manually you may do so by\nsetting the BACKREST_RESTIC_COMMAND environment variable to the path of the\nrestic binary you wish to use.\n\n## Running with Docker Compose\n\nDocker image: https://hub.docker.com/r/garethgeorge/backrest\n\nExample compose file:\n\n    \n    \n    version: \"3.2\" services: backrest: image: garethgeorge/backrest container_name: backrest hostname: backrest #Use this to set the hostname instead of container ID to the config.json and WebUI. volumes: - ./backrest/data:/data - ./backrest/config:/config - ./backrest/cache:/cache - /MY-BACKUP-DATA:/userdata # mount your directories to backup somewhere in the filesystem - /MY-REPOS:/repos # (optional) mount your restic repositories somewhere in the filesystem. environment: - BACKREST_DATA=/data # path for backrest data. restic binary and the database are placed here. - BACKREST_CONFIG=/config/config.json # path for the backrest config file. - XDG_CACHE_HOME=/cache # path for the restic cache which greatly improves performance. restart: unless-stopped ports: - 9898:9898\n\n## Running on Linux\n\nDownload a release from the releases page\n\n#### Using systemd with the install script (Recommended)\n\nExtract the release you downloaded and run the install script:\n\n    \n    \n    # extract the release to a subfolder of the current directory mkdir backrest && tar -xzvf backrest_Linux_x86_64.tar.gz -C backrest # run the install script cd backrest && ./install.sh\n\nThe install script will:\n\n  * Move the backrest binary to /usr/local/bin\n  * Create a systemd service file at /etc/systemd/system/backrest.service\n  * Enable and start the service\n\nRead the script before running it to make sure you are comfortable with these\noperations.\n\n#### Run on startup with cron (Basic)\n\nMove the backrest binary to /usr/local/bin:\n\n    \n    \n    sudo mv backrest /usr/local/bin/backrest\n\nAdd the following line to your crontab (e.g. crontab -e):\n\n    \n    \n    @reboot /usr/local/bin/backrest\n\n#### Run on startup with systemd manually\n\n    \n    \n    sudo mv backrest /usr/local/bin/backrest\n\nCreate a systemd service file at /etc/systemd/system/backrest.service with the\nfollowing contents:\n\n    \n    \n    [Unit] Description=ResticWeb After=network.target [Service] Type=simple User=<your linux user> Group=<your linux group> ExecStart=/usr/local/bin/backrest Environment=\"BACKREST_PORT=127.0.0.1:9898\" [Install] WantedBy=multi-user.target\n\nThen run the following commands to enable and start the service:\n\n    \n    \n    sudo systemctl enable backrest sudo systemctl start backrest\n\nNote: you can set the linux user and group to your primary user (e.g. whoami\nwhen logged in).\n\n## Running on MacOS\n\nDownload a Darwin release from the releases page and install it to\n/usr/local/bin.\n\n#### Using launchd with the install script (Recommended)\n\nExtract the release you downloaded and run the install script:\n\n    \n    \n    # extract the release to a subfolder of the current directory mkdir backrest && tar -xzvf backrest_Darwin_arm64.tar.gz -C backrest # run the install script cd backrest && ./install.sh\n\nThe install script will:\n\n  * Move the backrest binary to /usr/local/bin\n  * Create a launch agent file at ~/Library/LaunchAgents/com.backrest.plist\n  * Load the launch agent\n\nRead the script before running it to make sure you are comfortable with these\noperations.\n\n#### Manually\n\nIf setting up backrest manually it's recommended to install the binary to\n/usr/local/bin and run it manually. You can also create a launch agent to run\nit on startup or may run it manually when needed.\n\n## Running on Windows\n\nDownload a Windows release from the releases page and install it to C:\\Program\nFiles\\Backrest\\backrest.exe (create the path if it does not exist). The binary\nshould be run as administrator on first launch, otherwise the restic\ninstallation will fail and the process will terminate.\n\nTo run the binary on login, create a shortcut to the binary and place it in\nthe shell:startup folder. See this windows support article for more details.\n\nwarning: If you get filesystem errors you may need to run Backrest as\nadministrator for full filesystem access.\n\nwarning: Backrest is not tested on Windows to the same bar as Linux and MacOS.\nSome features may not work as expected.\n\n# Configuration\n\n## Environment Variables\n\n  * BACKREST_PORT - the port to bind to. Defaults to 9898.\n  * BACKREST_CONFIG - the path to the config file. Defaults to $HOME/.config/backrest/config.json or if $XDG_CONFIG_HOME is set, $XDG_CONFIG_HOME/backrest/config.json.\n  * BACKREST_DATA - the path to the data directory. Defaults to $HOME/.local/share/backrest or if $XDG_DATA_HOME is set, $XDG_DATA_HOME/backrest.\n  * BACKREST_RESTIC_COMMAND - the path to the restic binary. Defaults managed version of restic which will be downloaded and installed in the data directory.\n  * XDG_CACHE_HOME -- the path to the cache directory. This is propagated to restic.\n\n## About\n\nBackrest is a web UI and orchestrator for restic backup.\n\n### Topics\n\nbackups webui restic-backups restic\n\n### Resources\n\nReadme\n\n### License\n\nGPL-3.0 license\n\nActivity\n\n### Stars\n\n475 stars\n\n### Watchers\n\n5 watching\n\n### Forks\n\n20 forks\n\nReport repository\n\n## Releases 19\n\nv0.17.1 Latest\n\nApr 12, 2024\n\n\\+ 18 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 11\n\n## Languages\n\n  * TypeScript 50.0%\n  * Go 48.1%\n  * Shell 1.6%\n  * Other 0.3%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
