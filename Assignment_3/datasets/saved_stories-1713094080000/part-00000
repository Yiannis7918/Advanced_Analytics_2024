{"aid": "40028868", "title": "License Proliferation", "url": "https://en.wikipedia.org/wiki/License_proliferation", "domain": "wikipedia.org", "votes": 1, "user": "aragonite", "posted_at": "2024-04-14 05:25:47", "comments": 0, "source_title": "License proliferation", "source_text": "License proliferation - Wikipedia\n\nJump to content\n\nSearch\n\n# License proliferation\n\n  * Catal\u00e0\n  * Espa\u00f1ol\n  * Esperanto\n  * \ud55c\uad6d\uc5b4\n  * Italiano\n  * Magyar\n  * \u65e5\u672c\u8a9e\n  * \u0420\u0443\u0441\u0441\u043a\u0438\u0439\n  * Suomi\n  * Svenska\n  * \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430\n\nEdit links\n\nFrom Wikipedia, the free encyclopedia\n\nCreation of many new software licenses\n\nLicense proliferation is the phenomenon of an abundance of already existing\nand the continued creation of new software licenses for software and software\npackages in the FOSS ecosystem. License proliferation affects the whole FOSS\necosystem negatively by the burden of increasingly complex license selection,\nlicense interaction, and license compatibility considerations.^[1]\n\n## Impact[edit]\n\nOften when a software developer would like to merge portions of different\nsoftware programs they are unable to do so because the licenses are\nincompatible. When software under two different licenses can be merged into a\nlarger software work, the licenses are said to be compatible. As the number of\nlicenses increases, the probability that a free and open-source software\n(FOSS) developer will want to merge software that are available under\nincompatible licenses increases. There is also a greater cost to companies\nthat wish to evaluate every FOSS license for software packages that they\nuse.^[1] Strictly speaking, no one is in favor of license proliferation.\nRather, the issue stems from the tendency for organizations to write new\nlicenses in order to address real or perceived needs for their software\nreleases.\n\n## License compatibility[edit]\n\nLicense proliferation is especially a problem when licenses have only limited\nor complicated license compatibility relationships with other licenses.\nTherefore, some consider compatibility with the widely used GNU General Public\nLicense (GPL) an important characteristic, for instance David A.\nWheeler^[2]^[3] as also the Free Software Foundation (FSF), who maintains a\nlist of the licenses that are compatible with the GPL.^[4] On the other hand,\nsome recommend Permissive licenses, instead of copyleft licenses,^[5] due to\nthe better compatibility with more licenses.^[6]^[7] The Apache Foundation for\ninstance criticizes the fact that while the Apache License is compatible with\nthe copyleft GPLv3, the GPLv3 is not compatible with the permissive Apache\nlicense \u2014 Apache software can be included in GPLv3 software but not vice\nversa.^[8] As another relevant example, the GPLv2 is by itself not compatible\nwith the GPLv3.^[9] The 2007 released GPLv3 was criticized by several authors\nfor adding another incompatible license in the FOSS\necosystem.^[10]^[11]^[12]^[13]^[14]^[15]^[16]\n\n## Vanity licenses[edit]\n\nA vanity license is a license that is written by a company or person for no\nother reason than to write their own license (\"NIH syndrome\").^[17] If a new\nlicense is created that has no obvious improvement or difference over another\nmore common FOSS license it can often be criticized as a vanity license. As of\n2008, many people create a custom new license for their newly released\nprogram, without knowing the requirements for a FOSS license and without\nrealizing that using a nonstandard license can make that program almost\nuseless to others.^[18]\n\n## Solution approaches[edit]\n\n### GitHub's stance[edit]\n\nIn July 2013, GitHub started a license selection wizard called\nchoosealicense.^[19] GitHub's choosealicense frontpage offers as a quick\nselection only three licenses: the MIT License, the Apache License and the GNU\nGeneral Public License. Some additional licenses are offered on subpages and\nvia links.^[20] Following in 2015, approx. 77% of all licensed projects on\nGitHub were licensed under at least one of these three licenses.^[21]\n\n### Google's stance[edit]\n\nFrom 2006 Google Code only accepted projects licensed under the following\nseven licenses:^[22]\n\n  * Apache License 2.0\n  * New BSD License\n  * MIT License\n  * GNU General Public License 2.0\n  * GNU Lesser General Public License 2.1\n  * Mozilla Public License 1.1\n  * Artistic License/GPL dual-licensed (often used by the Perl community)\n\nOne year later, around 2008, the GNU General Public License 3.0 was added and\nstrongly recommended together with the permissive Apache license,^[23] notably\nexcluded was the AGPLv3 to reduce license proliferation.^[24]\n\nIn 2010, Google removed these restrictions, and announced that it would allow\nprojects to use any OSI-approved license (see OSI's stance below),^[25] but\nwith the limitation that public domain projects are only allowed as single\ncase decision.\n\n### OSI's stance[edit]\n\nOpen Source Initiative (OSI) maintains a list of approved licenses.^[26] Early\nin its history, the OSI contributed to license proliferation by approving\nvanity and non-reusable licenses. In 2004 an OSI License Proliferation Project\nwas started^[27] has prepared a License Proliferation Report in 2007.^[28] The\nreport defined classes of licenses:\n\n  * Licenses that are popular and widely used or with strong communities\n  * International licenses\n  * Special purpose licenses\n  * Other/Miscellaneous licenses\n  * Licenses that are redundant with more popular licenses\n  * Non-reusable licenses\n  * Superseded licenses\n  * Licenses that have been voluntarily retired\n  * Uncategorized Licenses\n\nThe group of \"popular\" licenses include nine licenses: Apache License 2.0, New\nBSD license, GPLv2, LGPLv2, MIT license, Mozilla Public License 1.1, Common\nDevelopment and Distribution License, Common Public License, Eclipse Public\nLicense.\n\n### FSF's stance[edit]\n\nRichard Stallman, former president of Free Software Foundation, and Bradley M.\nKuhn, former Executive Director, have argued against license proliferation\nsince 2000, when they instituted the FSF license list, which urges developers\nto license their software under GPL-compatible free software license(s),\nthough multiple GPL-incompatible free software licenses are listed with a\ncomment stating that there is no problem using and/or working on a piece of\nsoftware already under the licenses in question while also urging readers of\nthe list not to use those licenses on software they write.^[29]\n\nCiar\u00e1n O'Riordan of FSF Europe argues that the main thing that the FSF can do\nto prevent license proliferation is to reduce the reasons for making new\nlicenses in the first place, in an editorial entitled How GPLv3 tackles\nlicense proliferation.^[30] Generally the FSF Europe consistently recommends\nthe use of the GNU GPL as much as possible, and when that is not possible, to\nuse GPL-compatible licenses.\n\n### Others[edit]\n\nIn 2005 Intel has voluntarily retracted their Intel Open Source License from\nthe OSI list of open source licenses and has also ceased to use or recommend\nthis license to reduce license proliferation.^[31]\n\nThe 451group created in June 2009 a proliferation report called The Myth of\nOpen Source License Proliferation.^[32] A 2009 paper from the University of\nWashington School of Law titled Open Source License Proliferation: Helpful\nDiversity or Hopeless Confusion? called for three things as a solution: \"A\nWizzier Wizzard\" (for license selection), \"Best Practices and Legacy\nLicenses\", \"More Legal Services For Hackers\".^[33] The OpenSource Software\nCollaboration Counseling (OSSCC) recommends, based on the originally nine\nrecommended OSI licenses, five licenses: the Apache License 2.0, New BSD\nLicense, CDDL, MIT license, and to some degree the MPL, as they support\ncollaboration, grant patent use and offer patent protection. Notably missing\nis the GPL as \"this license cannot be used inside other works under a\ndifferent license.\"^[34]\n\n## See also[edit]\n\n  * License compatibility\n  * Rights Expression Language\n\n## References[edit]\n\n  1. ^ Jump up to: ^a ^b \"OSI and License Proliferation\" on FOSSBazaar by Martin Michlmayr on August 21st, 2008. \"Too many different licenses makes it difficult for licensors to choose: it's difficult to choose a good license for a project because there are so many. Some licenses do not play well together: some open source licenses do not inter-operate well with other open source licenses, making it hard to incorporate code from other projects. Too many licenses makes it difficult to understand what you are agreeing to in a multi-license distribution: since a FOSS application typically contains code with different licenses and people use many applications which each contain one or several licenses, it's difficult to see what your obligations are.\"\n  2. ^ \"The Free-Libre / Open Source Software (FLOSS) License Slide\" by David A. Wheeler on September 27, 2007.\n  3. ^ Wheeler, David A. (February 16, 2014). \"Make Your Open Source Software GPL-Compatible. Or Else\". Archived from the original on November 13, 2023.\n  4. ^ \"Various Licenses and Comments about Them\", GNU. Archived 2000-08-15 at the Wayback Machine.\n  5. ^ Laurent, Philippe (September 24, 2008). \"The GPLv3 and compatibility issues\" (PDF). European Open source Lawyers Event 2008. University of Namur \u2013 Belgium. p. 7. Archived from the original (PDF) on March 4, 2016. Retrieved May 30, 2015. \"Copyleft is the main source of compatibility problems\"\n  6. ^ Hanwell, Marcus D. (January 28, 2014). \"Should I use a permissive license? Copyleft? Or something in the middle?\". opensource.com. Retrieved May 30, 2015. \"Permissive licensing simplifies things One reason the business world, and more and more developers [...], favor permissive licenses is in the simplicity of reuse. The license usually only pertains to the source code that is licensed and makes no attempt to infer any conditions upon any other component, and because of this there is no need to define what constitutes a derived work. I have also never seen a license compatibility chart for permissive licenses; it seems that they are all compatible.\"\n  7. ^ \"Licence Compatibility and Interoperability\". Open-Source Software - Develop, share, and reuse open source software for public administrations. joinup.ec.europa.eu. Archived from the original on June 17, 2015. Retrieved May 30, 2015. \"The licences for distributing free or open source software (FOSS) are divided in two families: permissive and copyleft. Permissive licences (BSD, MIT, X11, Apache, Zope) are generally compatible and interoperable with most other licences, tolerating to merge, combine or improve the covered code and to re-distribute it under many licences (including non-free or \"proprietary\").\"\n  8. ^ Apache foundation (May 30, 2015). \"GPL compatibility\". Retrieved May 30, 2015. \"Apache 2 software can therefore be included in GPLv3 projects, because the GPLv3 license accepts our software into GPLv3 works. However, GPLv3 software cannot be included in Apache projects. The licenses are incompatible in one direction only, and it is a result of ASF's licensing philosophy and the GPLv3 authors' interpretation of copyright law.\"\n  9. ^ \"Frequently Asked Questions about the GNU Licenses \u2013 Is GPLv3 compatible with GPLv2?\". gnu.org. Retrieved June 3, 2014. \"No. Some of the requirements in GPLv3, such as the requirement to provide Installation Information, do not exist in GPLv2. As a result, the licenses are not compatible: if you tried to combine code released under both these licenses, you would violate section 6 of GPLv2. However, if code is released under GPL \"version 2 or later,\" that is compatible with GPLv3 because GPLv3 is one of the options it permits.\"\n  10. ^ Landley, Rob. \"CELF 2013 Toybox talk\". landley.net. Retrieved August 21, 2013. \"GPLv3 broke \"the\" GPL into incompatible forks that can't share code.\"\n  11. ^ Asay, Clark D. \"Michigan Telecommunications and Technology Law Review Volume 14 - Issue 22008 The General Public License Version 3.0: Making or Breaking the Foss Movement\". law.umich.edu. \"In the end, GPLv3 constitutes license proliferation.\"\n  12. ^ Nikolai Bezroukov (2000). \"Comparative merits of GPL, BSD and Artistic licences (Critique of Viral Nature of GPL v.2 - or In Defense of Dual Licensing Idea)\". Archived from the original on December 22, 2001. \"Viral property stimulates proliferation of licenses and contributes to the \"GPL-enforced nightmare\" -- a situation when many other licenses are logically incompatible with the GPL and make life unnecessary difficult for developers working in the Linux environment (KDE is a good example here, Python is a less known example). I think that this petty efforts to interpret GPL as a \"holy text\" are non-productive discussion that does not bring us anywhere. And they directly contributed to the proliferation of different \"free software\" licenses.\"\n  13. ^ Byfield, Bruce (November 22, 2011). \"7 Reasons Why Free Software Is Losing Influence: Page 2\". Datamation.com. Retrieved August 23, 2013. \"At the time, the decision seemed sensible in the face of a deadlock. But now, GPLv2 is used for 42.5% of free software, and GPLv3 for less than 6.5%, according to Black Duck Software.\"\n  14. ^ James E.J. Bottomley; Mauro Carvalho Chehab; Thomas Gleixner; Christoph Hellwig; Dave Jones; Greg Kroah-Hartman; Tony Luck; Andrew Morton; Trond Myklebust; David Woodhouse (September 15, 2006). \"Kernel developers' position on GPLv3 - The Dangers and Problems with GPLv3\". LWN.net. Retrieved March 11, 2015. \"[...]since the FSF is proposing to shift all of its projects to GPLv3 and apply pressure to every other GPL licensed project to move, we foresee the release of GPLv3 portends the Balkanisation of the entire Open Source Universe upon which we rely.\"\n  15. ^ Ronacher, Armin (July 23, 2013). \"Licensing in a Post Copyright World\". lucumr.pocoo.org. Retrieved November 18, 2015. \"The License Compatibility Clusterfuck - When the GPL is involved the complexities of licensing becomes a non fun version of a riddle. So many things to consider and so many interactions to consider. And that GPL incompatibilities are still an issue that actively effects people is something many appear to forget. For instance one would think that the incompatibility of the GPLv2 with the Apache Software License 2.0 should be a thing of the past now that everything upgrades to GPLv3, but it turns out that enough people are either stuck with GPLv2 only or do not agree with the GPLv3 that some Apache Software licensed projects are required to migrate. For instance Twitter's Bootstrap is currently migrating from ASL2.0 to MIT precisely because some people still need GPLv2 compatibility. Among those projects that were affected were Drupal, WordPress, Joomla, the MoinMoin Wiki and others. And even that case shows that people don't care that much about licenses any more as Joomla 3 just bundled bootstrap even though they were not licenses in a compatible way (GPLv2 vs ASL 2.0). The other traditional case of things not being GPL compatible is the OpenSSL project which has a license that does not go well with the GPL. That license is also still incompatible with the GPLv3. The whole ordeal is particularly interesting as some not so nice parties have started doing license trolling through GPL licenses.\"\n  16. ^ Are you sure you want to use the GPL? by Armin Ronacher (2009)\n  17. ^ Sharing medical software: FOSS licensing in medicine on freesoftwaremagazine.com by Fred Trotter (2007-06-14)\n  18. ^ \"David A. Wheeler's Blog\". dwheeler.com.\n  19. ^ GitHub finally takes open source licenses seriously on Infoworld by Simon Phipps on July 2013\n  20. ^ Choosing an open source license doesn't need to be scary - Which of the following best describes your situation? on choosealicense.com (accessed 2015-11-29)\n  21. ^ Open source license usage on GitHub.com on March 9, 2015 by Ben Balter on github.com \"MIT 44.69%, [...]GPLv2 12.96%, Apache 11.19%, GPLv3 8.88%\"\n  22. ^ Ed Burnette (November 2, 2006). \"Google says no to license proliferation\". ZDNet. Archived from the original on February 24, 2007. Retrieved September 11, 2010.\n  23. ^ Greg Stein (May 28, 2009). \"Standing Against License Proliferation\". Archived from the original on June 1, 2008. Retrieved September 11, 2010.\n  24. ^ License Proliferation - Less is More, One is Best on January 27th, 2009 by Ernest M. Park \"Chris DiBona from Google suffered the slings and arrows of the OSS community when he rejected the AGPLv3 license for Google Code repository, citing license proliferation as one of the reasons.\"\n  25. ^ Chris DiBona (September 10, 2010). \"License Evolution and Hosting Projects on Code.Google.Com\". Retrieved September 11, 2010.\n  26. ^ OSI Approved Licenses on opensource.org\n  27. ^ License Proliferation Project on opensource.com (2004)\n  28. ^ License Proliferation Report Archived 2012-12-12 at the Wayback Machine on opensource.com (2007)\n  29. ^ The earliest archived version of the license list reflects this position. Bradley M. Kuhn (August 15, 2000). \"Various Licenses and Comments about Them\". Free Software Foundation. pp. 37\u201339. Archived from the original on August 15, 2000. Retrieved November 29, 2015.\n  30. ^ How GPLv3 tackles license proliferation on linuxdevices.com\n  31. ^ Marson, Ingrid (March 31, 2005). \"Intel to stop using open-source license\". cnet.com. CNet. Retrieved October 6, 2014.\n  32. ^ The Myth of Open Source License Proliferation on the451group.com\n  33. ^ Open Source License Proliferation: Helpful Diversity or Hopeless Confusion? on law.washington.edu by Robert W. Gomulkiewicz on 2009\n  34. ^ License compatibility on osscc.net\n\n## External links[edit]\n\n  * Open source license proliferation, a broader view by Raymond Nimmer\n  * Larry Rosen argues that different licenses can be a good thing Larry Rosen\n  * Licensing howto by Eric S. Raymond\n  * License proliferation for Medical Software by Fred Trotter Advocates that for Health Software, only the Google seven should be used.\n  * How to choose a license for your own work Free Software Foundation\n\n  * v\n  * t\n  * e\n\nFree and open-source software  \n---  \nGeneral|\n\n  * Alternative terms for free software\n  * Comparison of open-source and closed-source software\n  * Comparison of source-code-hosting facilities\n  * Free software\n  * Free software project directories\n  * Gratis versus libre\n  * Long-term support\n  * Open-source software\n  * Open-source software development\n  * Outline\n  * Timeline\n\n  \nSoftware packages|\n\n  * Audio\n  * Bioinformatics\n  * Codecs\n  * Configuration management\n  * Drivers\n    * Graphics\n    * Wireless\n  * Health\n  * Mathematics\n  * Office suites\n  * Operating systems\n  * Routing\n  * Television\n  * Video games\n  * Web applications\n    * E-commerce\n  * Android apps\n  * iOS apps\n  * Commercial\n  * Formerly proprietary\n  * Formerly open-source\n\n  \nCommunity|\n\n  * Free software movement\n  * History\n  * Open-source-software movement\n  * Events\n  * Advocacy\n\n  \nOrganisations|\n\n  * Free Software Movement of India\n  * Free Software Foundation\n\n  \nLicenses|\n\n  * AFL\n  * Apache\n  * APSL\n  * Artistic\n  * Beerware\n  * BSD\n  * Creative Commons\n  * CDDL\n  * EPL\n  * Free Software Foundation\n    * GNU GPL\n    * GNU AGPL\n    * GNU LGPL\n  * ISC\n  * MIT\n  * MPL\n  * Python\n  * Python Software Foundation License\n  * Shared Source Initiative\n  * Sleepycat\n  * Unlicense\n  * WTFPL\n  * zlib\n\n| Types and standards|\n\n  * Comparison of licenses\n  * Contributor License Agreement\n  * Copyleft\n  * Debian Free Software Guidelines\n  * Definition of Free Cultural Works\n  * Free license\n  * The Free Software Definition\n  * The Open Source Definition\n  * Open-source license\n  * Permissive software license\n  * Public domain\n  * Viral license\n\n  \n---|---  \nChallenges|\n\n  * Digital rights management\n  * License proliferation\n  * Mozilla software rebranding\n  * Proprietary device drivers\n  * Proprietary firmware\n  * Proprietary software\n  * SCO/Linux controversies\n  * Software patents\n  * Software security\n  * Trusted Computing\n\n  \nRelated topics|\n\n  * Forking\n  * GNU Manifesto\n  * Microsoft Open Specification Promise\n  * Open-core model\n  * Open-source hardware\n  * Shared Source Initiative\n  * Source-available software\n  * The Cathedral and the Bazaar\n  * Revolution OS\n\n  \n  \n  * Portal\n  * Category\n\n  \n  \nRetrieved from\n\"https://en.wikipedia.org/w/index.php?title=License_proliferation&oldid=1185617996\"\n\nCategories:\n\n  * Free and open-source software licenses\n  * Licensing\n\nHidden categories:\n\n  * Webarchive template wayback links\n  * Articles with short description\n  * Short description matches Wikidata\n  * Use American English from March 2021\n  * All Wikipedia articles written in American English\n  * Use mdy dates from March 2021\n\n  * This page was last edited on 17 November 2023, at 22:48 (UTC).\n  * Text is available under the Creative Commons Attribution-ShareAlike License 4.0; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia\u00ae is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.\n\n  * Privacy policy\n  * About Wikipedia\n  * Disclaimers\n  * Contact Wikipedia\n  * Code of Conduct\n  * Developers\n  * Statistics\n  * Cookie statement\n  * Mobile view\n  * Edit preview settings\n\n", "frontpage": false}
