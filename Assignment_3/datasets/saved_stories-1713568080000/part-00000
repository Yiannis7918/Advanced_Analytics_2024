{"aid": "40089303", "title": "Bark.cpp: Port of Suno AI's Bark in C/C++ for fast inference", "url": "https://github.com/PABannier/bark.cpp", "domain": "github.com/pabannier", "votes": 1, "user": "siraben", "posted_at": "2024-04-19 17:05:49", "comments": 0, "source_title": "GitHub - PABannier/bark.cpp: Port of Suno AI's Bark in C/C++ for fast inference", "source_text": "GitHub - PABannier/bark.cpp: Port of Suno AI's Bark in C/C++ for fast\ninference\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nPABannier / bark.cpp Public\n\n  * Notifications\n  * Fork 31\n  * Star 423\n\nPort of Suno AI's Bark in C/C++ for fast inference\n\n### License\n\nMIT license\n\n423 stars 31 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# PABannier/bark.cpp\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n6 Branches\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nggerganovMinor improvements (#147)Apr 16, 2024e876c84 \u00b7 Apr 16, 2024Apr 16,\n2024\n\n## History\n\n89 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| sync: use encodec's latest version as a submodule (#124)| Feb 13, 2024  \n  \n### assets\n\n|\n\n### assets\n\n| doc/mnt: update README with proper cloning instructions + banner (#125)| Oct\n29, 2023  \n  \n### encodec.cpp @ 784278d\n\n|\n\n### encodec.cpp @ 784278d\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### examples\n\n|\n\n### examples\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Minor improvements (#147)| Apr 16, 2024  \n  \n### .gitmodules\n\n|\n\n### .gitmodules\n\n| sync: use encodec's latest version as a submodule (#124)| Feb 13, 2024  \n  \n### CMakeLists.txt\n\n|\n\n### CMakeLists.txt\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| DOC Add license file (#25)| Jul 30, 2023  \n  \n### README.md\n\n|\n\n### README.md\n\n| Minor improvements (#147)| Apr 16, 2024  \n  \n### bark.cpp\n\n|\n\n### bark.cpp\n\n| Minor improvements (#147)| Apr 16, 2024  \n  \n### bark.h\n\n|\n\n### bark.h\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### convert.py\n\n|\n\n### convert.py\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### download_weights.py\n\n|\n\n### download_weights.py\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| mnt: add back requirements.txt (#141)| Apr 10, 2024  \n  \n## Repository files navigation\n\n# bark.cpp\n\nRoadmap / encodec.cpp / ggml\n\nInference of SunoAI's bark model in pure C/C++.\n\n## Description\n\nWith bark.cpp, our goal is to bring real-time realistic multilingual text-to-\nspeech generation to the community. Currently, I am focused on porting the\nBark model in C++.\n\n  * Plain C/C++ implementation without dependencies\n  * AVX, AVX2 and AVX512 for x86 architectures\n  * CPU and GPU compatible backends\n  * Mixed F16 / F32 precision\n  * 4-bit, 5-bit and 8-bit integer quantization\n  * Metal and CUDA backends\n\nThe original implementation of bark.cpp is the bark's 24Khz English model. We\nexpect to support multiple encoders in the future (see this and this), as well\nas music generation model (see this). This project is for educational\npurposes.\n\nDemo on Google Colab (#95)\n\nHere is a typical run using bark.cpp:\n\n    \n    \n    make -j && ./main -p \"This is an audio generated by bark.cpp\" __ __ / /_ ____ ______/ /__ _________ ____ / __ \\/ __ `/ ___/ //_/ / ___/ __ \\/ __ \\ / /_/ / /_/ / / / ,< _ / /__/ /_/ / /_/ / /_.___/\\__,_/_/ /_/|_| (_) \\___/ .___/ .___/ /_/ /_/ bark_tokenize_input: prompt: 'this is a dog barking.' bark_tokenize_input: number of tokens in prompt = 513, first 8 tokens: 20579 20172 10217 27883 28169 25677 10167 129595 Generating semantic tokens: [========> ] (17%) bark_print_statistics: mem per token = 0.00 MB bark_print_statistics: sample time = 9.90 ms / 138 tokens bark_print_statistics: predict time = 3163.78 ms / 22.92 ms per token bark_print_statistics: total time = 3188.37 ms Generating coarse tokens: [==================================================>] (100%) bark_print_statistics: mem per token = 0.00 MB bark_print_statistics: sample time = 3.96 ms / 410 tokens bark_print_statistics: predict time = 14303.32 ms / 34.89 ms per token bark_print_statistics: total time = 14315.52 ms Generating fine tokens: [==================================================>] (100%) bark_print_statistics: mem per token = 0.00 MB bark_print_statistics: sample time = 41.93 ms / 6144 tokens bark_print_statistics: predict time = 15234.38 ms / 2.48 ms per token bark_print_statistics: total time = 15282.15 ms Number of frames written = 51840. main: load time = 1436.36 ms main: eval time = 34520.53 ms main: total time = 32786.04 ms\n\nHere are typical audio pieces generated by bark.cpp:\n\n## Usage\n\nHere are the steps to use Bark.cpp\n\n### Get the code\n\n    \n    \n    git clone --recursive https://github.com/PABannier/bark.cpp.git cd bark.cpp git submodule update --init --recursive\n\n### Build\n\nIn order to build bark.cpp you must use CMake:\n\n    \n    \n    mkdir build cd build cmake .. cmake --build . --config Release\n\n### Prepare data & Run\n\n    \n    \n    # install Python dependencies python3 -m pip install -r requirements.txt # obtain the original bark and encodec weights and place them in ./models python3 download_weights.py --download-dir ./models # download the vocabulary wget https://huggingface.co/suno/bark/raw/main/vocab.txt mv ./vocab.txt ./models/ # convert the model to ggml format python3 convert.py --dir-model ./models --out-dir ./ggml_weights/ --vocab-path ./models --use-f16 # convert the codec to ggml format python3 encodec.cpp/convert.py --dir-model ./models/ --out-dir ./ggml_weights/ --use-f16 mv ggml_weights/ggml-model.bin ggml_weights/encodec_weights.bin # run the inference ./build/examples/main/main -m ./ggml_weights/ -em ./ggml_weights/encodec_weights.bin -p \"this is an audio\"\n\n### (Optional) Quantize weights\n\nWeights can be quantized using the following strategy: q4_0, q4_1, q5_0, q5_1,\nq8_0.\n\nNote that to preserve audio quality, we do not quantize the codec model. The\nbulk of the computation is in the forward pass of the GPT models.\n\n    \n    \n    ./build/examples/quantize/quantize ./ggml_weights.bin ./ggml_weights_q4.bin q4_0\n\n### Seminal papers\n\n  * Bark\n\n    * Text Prompted Generative Audio\n  * Encodec\n\n    * High Fidelity Neural Audio Compression\n  * GPT-3\n\n    * Language Models are Few-Shot Learners\n\n### Contributing\n\nbark.cpp is a continuous endeavour that relies on the community efforts to\nlast and evolve. Your contribution is welcome and highly valuable. It can be\n\n  * bug report: you may encounter a bug while using bark.cpp. Don't hesitate to report it on the issue section.\n  * feature request: you want to add a new model or support a new platform. You can use the issue section to make suggestions.\n  * pull request: you may have fixed a bug, added a features, or even fixed a small typo in the documentation, ... you can submit a pull request and a reviewer will reach out to you.\n\n### Coding guidelines\n\n  * Avoid adding third-party dependencies, extra files, extra headers, etc.\n  * Always consider cross-compatibility with other operating systems and architectures\n\n## About\n\nPort of Suno AI's Bark in C/C++ for fast inference\n\n### Topics\n\nmachine-learning text-to-speech inference\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n423 stars\n\n### Watchers\n\n31 watching\n\n### Forks\n\n31 forks\n\nReport repository\n\n## Releases\n\n1 tags\n\n## Packages 0\n\nNo packages published\n\n## Contributors 8\n\n## Languages\n\n  * C++ 89.2%\n  * Python 9.9%\n  * CMake 0.9%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
