{"aid": "40010872", "title": "Type-safe, K-sortable, globally unique identifier inspired by Stripe IDs", "url": "https://github.com/jetify-com/typeid", "domain": "github.com/jetify-com", "votes": 2, "user": "gearnode", "posted_at": "2024-04-12 09:40:18", "comments": 0, "source_title": "GitHub - jetify-com/typeid: Type-safe, K-sortable, globally unique identifier inspired by Stripe IDs", "source_text": "GitHub - jetify-com/typeid: Type-safe, K-sortable, globally unique identifier\ninspired by Stripe IDs\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\njetify-com / typeid Public\n\n  * Notifications\n  * Fork 35\n  * Star 2.7k\n\nType-safe, K-sortable, globally unique identifier inspired by Stripe IDs\n\n### License\n\nApache-2.0 license\n\n2.7k stars 35 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# jetify-com/typeid\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n2 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ngithub-actions[bot]andgcurtisUpdate Internal Dependencies (#308)c0dcd53 \u00b7\n\n## History\n\n70 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| name and account change (#293)  \n  \n### cli\n\n|\n\n### cli\n\n| [RFC] Remove prefix param when possible (#223)  \n  \n### scripts\n\n|\n\n### scripts\n\n| Update invalid.yml description (#82)  \n  \n### spec\n\n|\n\n### spec\n\n| name and account change (#293)  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Jl/typeid add devbox (#43)  \n  \n### .goreleaser.yaml\n\n|\n\n### .goreleaser.yaml\n\n| [rename] jetpack-io -> jetify-com (#295)  \n  \n### CODE_OF_CONDUCT.md\n\n|\n\n### CODE_OF_CONDUCT.md\n\n| Clean up opensource typeid code so we can publish it (#18)  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| name and account change (#293)  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Clean up opensource typeid code so we can publish it (#18)  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update name and links (#300)  \n  \n### devbox.json\n\n|\n\n### devbox.json\n\n| [lint] Enfore same lint rules in entire repo  \n  \n### devbox.lock\n\n|\n\n### devbox.lock\n\n| [updates] Update go versions, api proto models (#278)  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| Update Internal Dependencies (#308)  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| Update Internal Dependencies (#308)  \n  \n### main.go\n\n|\n\n### main.go\n\n| Implement typeid cli, and add FromX constructors (#25)  \n  \n## Repository files navigation\n\n# TypeID\n\n### A type-safe, K-sortable, globally unique identifier inspired by Stripe IDs\n\n## What is it?\n\nTypeIDs are a modern, type-safe extension of UUIDv7. Inspired by a similar use\nof prefixes in Stripe's APIs.\n\nTypeIDs are canonically encoded as lowercase strings consisting of three\nparts:\n\n  1. A type prefix (at most 63 characters in all lowercase ASCII [a-z])\n  2. An underscore '_' separator\n  3. A 128-bit UUIDv7 encoded as a 26-character string using a modified base32 encoding.\n\nHere's an example of a TypeID of type user:\n\n    \n    \n    user_2x4y6z8a0b1c2d3e4f5g6h7j8k \u2514\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 type uuid suffix (base32)\n\nA formal specification defines the encoding in more detail.\n\n## Benefits\n\n  * Type-safe: you can't accidentally use a user ID where a post ID is expected. When debugging, you can immediately understand what type of entity a TypeID refers to thanks to the type prefix.\n  * Compatible with UUIDs: TypeIDs are a superset of UUIDs. They are based on the upcoming UUIDv7 standard. If you decode the TypeID and remove the type information, you get a valid UUIDv7.\n  * K-Sortable: TypeIDs are K-sortable and can be used as the primary key in a database while ensuring good locality. Compare to entirely random global ids, like UUIDv4, that generally suffer from poor database locality.\n  * Thoughtful encoding: the base32 encoding is URL safe, case-insensitive, avoids ambiguous characters, can be selected for copy-pasting by double-clicking, and is a more compact encoding than the traditional hex encoding used by UUIDs (26 characters vs 36 characters).\n\n## Implementations\n\nImplementations should adhere to the formal specification.\n\n### Official Implementations by jetify\n\nLanguage| Status  \n---|---  \nGo| \u2713 Implemented  \nSQL| \u2713 Implemented  \nTypeScript| \u2713 Implemented  \n  \n### Community Provided Implementations\n\nLanguage| Author| Validated Against Spec?  \n---|---|---  \nC# (.Net)| @TenCoKaciStromy| Yes, on 2023-06-30  \nC# (.Net Standard 2.1)| @cbuctok| Yes, on 2023-07-03  \nC# (.NET)| @firenero| Yes, on 2023-07-15  \nDart| @mistermoe @tbd54566975| Yes, on 2024-03-25  \nElixir| @sloanelybutsurely| Yes, on 2023-07-02  \nHaskell| @MMZK1526| Yes, on 2023-07-07  \nJava| @fxlae| Yes, on 2023-07-02  \nJava| @softprops| Yes, on 2023-07-04  \nOCaml| @titouancreach| Yes, on 2024-03-07  \nPHP| @BombenProdukt| Yes, on 2023-07-03  \nPython| @akhundMurad| Yes, on 2023-06-30  \nRuby| @broothie| Yes, on 2023-06-30  \nRust| @conradludgate| Yes, on 2023-07-01  \nRust| @johnnynotsolucky| Yes, on 2023-07-13  \nScala| @ant8e| Yes, on 2023-07-14  \nScala| @guizmaii| Not yet  \nSwift| @Frizlab| Yes, on 2023-07-07  \nT-SQL| @uniteeio| Yes, on 2023-08-25  \nTypeScript| @ongteckwu| Yes, on 2023-06-30  \nZig| @tensorush| Yes, on 2023-07-05  \n  \nWe are looking for community contributions to implement TypeIDs in other\nlanguages.\n\n## Command-line Tool\n\nThis repo includes a command-line tool for generating TypeIDs. To install it,\nrun:\n\n    \n    \n    curl -fsSL https://get.jetify.com/typeid | bash\n\nTo generate a new TypeID, run:\n\n    \n    \n    $ typeid new prefix prefix_01h2xcejqtf2nbrexx3vqjhp41\n\nTo decode an existing TypeID into a UUID run:\n\n    \n    \n    $ typeid decode prefix_01h2xcejqtf2nbrexx3vqjhp41 type: prefix uuid: 0188bac7-4afa-78aa-bc3b-bd1eef28d881\n\nAnd to encode an existing UUID into a TypeID run:\n\n    \n    \n    $ typeid encode prefix 0188bac7-4afa-78aa-bc3b-bd1eef28d881 prefix_01h2xcejqtf2nbrexx3vqjhp41\n\n## Related Work\n\n  * UUIDv7 - The upcoming UUID standard that TypeIDs are based on.\n\nAlternatives to UUIDv7 that are also worth considering (but not type-safe like\nTypeIDs):\n\n  * xid\n  * ulid\n  * ksuid\n\n## About\n\nType-safe, K-sortable, globally unique identifier inspired by Stripe IDs\n\n### Topics\n\nuuid guid uuidv7 typeid\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\n### Code of conduct\n\nCode of conduct\n\nActivity\n\nCustom properties\n\n### Stars\n\n2.7k stars\n\n### Watchers\n\n17 watching\n\n### Forks\n\n35 forks\n\nReport repository\n\n## Releases 2\n\nv0.1.1 Latest\n\nJul 1, 2023\n\n\\+ 1 release\n\n## Packages 0\n\nNo packages published\n\n## Contributors 26\n\n\\+ 12 contributors\n\n## Languages\n\n  * Go 80.2%\n  * Shell 19.8%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
