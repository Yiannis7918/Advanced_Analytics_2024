{"aid": "40031860", "title": "I setup my terminal for max productivity", "url": "https://read.highgrowthengineer.com/p/how-i-setup-my-terminal-for-max-productivity", "domain": "highgrowthengineer.com", "votes": 11, "user": "jordancutler", "posted_at": "2024-04-14 15:34:43", "comments": 0, "source_title": "How I setup my terminal for max productivity", "source_text": "How I setup my terminal for max productivity\n\n# High Growth Engineer\n\nShare this post\n\n#### How I setup my terminal for max productivity\n\nread.highgrowthengineer.com\n\n#### Discover more from High Growth Engineer\n\nGrow faster in your software engineering career with weekly actionable tips\nyou can use right away.\n\nOver 56,000 subscribers\n\nContinue reading\n\nSign in\n\n# How I setup my terminal for max productivity\n\nJordan Cutler\n\nApr 14, 2024\n\n23\n\nShare this post\n\n#### How I setup my terminal for max productivity\n\nread.highgrowthengineer.com\n\n2\n\nShare\n\nYou may have heard the news, but last week I started a new job at Pinterest \ud83d\udccc!\n\nMe with my Pinterest Swag\n\nThat\u2019s not what this post is about, but it\u2019s related because I had to set up\nmy new Macbook. I had to remember everything I did 2 years ago to set up my\nlast one, plus add in a few more new things I wanted to try.\n\nThis post is about sharing how I set up my terminal and commands you may not\nknow about that you might find useful.\n\nPreviously I wrote the Top 7 workflow tips I wish I knew sooner. It covered my\nterminal setup at a high-level along with other tools I use, but this article\nwill be a full deep-dive into purely my terminal setup and what you might find\nvaluable.\n\nTo highlight the importance of optimizing the things you use on a daily basis,\nhere\u2019s a formula that shows 1 hour/day efficiency gain = 1 month saved per\nyear.\n\n1 hour per day x 5 days per week x 52 weeks = 260 hours saved per year\n\n260 hours / 8 hours per day = 32.5 work days per year.\n\nSo if any combination of the tips in this article can save you 1 hour, or\nclose to it, you can get a full month of working hours back this year!\n\n##\n\n\u2b50\ufe0f What we\u2019ll cover\n\n  * Terminal app, shell, and plugin manager\n\n  * Theming\n\n  * Best terminal plugins\n\n  * Aliases and history config\n\n  * Command line utilities to install\n\nLet\u2019s dive in \ud83d\ude80\n\n##\n\n\ud83d\udcbb iTerm2 + zsh + oh-my-zsh\n\n  * Install iTerm2. This terminal application allows much more customization than the default Terminal application that comes with Mac\u2019s.\n\n  * Use `zsh` instead of `bash`. `zsh` is a replacement for `bash`, which is the type of shell you use.\n\n    * You can run `echo $SHELL` in your terminal and you should see `/bin/zsh` if you\u2019re using zsh. It\u2019s roughly a superset of what bash provides, and allows you to integrate into a plugin system, `oh-my-zsh`.\n\n  * Install oh-my-zsh. This is the plugin manager that allows you to easily optimize your zsh config in `.zshrc`. For example, further down, we\u2019ll discuss plugins that allow you to easily auto-complete past commands you\u2019ve typed, saving you hours of typing time.\n\n    * How to install: `sh -c \"$(curl -fsSL https://install.ohmyz.sh/)\"`\n\n    * Note: Running the install command overwrites your existing .zshrc file. You can access your old .zshrc file and copy any configuration over through .zshrc.pre-oh-my-zsh\n\n##\n\n\ud83c\udfa8 Theming\n\n  * Install material design colors into iTerm2\n\n    * Here are the steps to get it. The TLDR is: Clone the repo, then import the `material-design-colors.itermcolors` file into iTerm2 as a color preset.\n\nThe theme colors you get look sleek like this:\n\nHow material design colors look after installing into iTerm2\n\n  * Starship \u2192 Used to customize the terminal prompt like this:\n\nCommand prompt is directory, then branch, then git status\n\nTo get it to look like this, I use the following config:\n\n    \n    \n    // ~/.config/starship.toml format = \"$directory$character$git_branch$git_status\" add_newline=false [git_status] stashed = ''\n\nIt results in a simple prompt of the directory, followed by the branch,\nfollowed by the git status.\n\nThere are plenty of other options you may be interested in too. Check out all\nof them.\n\nFinally, you may be interested in some of the presets available to make it\neasier.\n\n##\n\n\ud83d\udd0c Plugins\n\nEarlier, we installed the plugin manager `oh-my-zsh`.\n\nBelow, we\u2019ll discuss my favorite plugins. You can find most plugins here.\n\n  1. git - The git plugin adds aliases for git commands. A few that I use are:\n\n    1. ga => git add\n\n    2. gc => git commit\n\n    3. gd => git diff\n\n    4. gst => git status\n\n    5. gps => git push\n\n    6. gpl => git pull\n\n  2. zsh-autosuggestions - This prepopulates your current prompt with the closest past command you entered, allowing you to hit \u201cright arrow\u201d to automatically finish and dramatically reduce your typing. Its essentially Github Copilot for your terminal. It\u2019s a must have.\n\nCommands are prepopulated. Hitting \u201cright arrow\u201d completes it.\n\n  3. zsh-syntax-highlighting - Highlights the commands you type to tell you if its valid or not. For example, `brew` will be red if homebrew isn\u2019t installed, but it will be green if `brew` is installed as you type it.\n\n  4. zsh-completions - This adds additional \u201ccompletions\u201d, essentially allowing you to hit \u201ctab\u201d to more accurately finish the command you are typing.\n\n  5. SCM Breeze for numbered git shortcuts\n\nSCM Breeze isn\u2019t an oh-my-zsh plugin, but you can install it easily.\n\nFiles are annotated with numbers to more easily refer to them\n\nYou can refer to your files like `git add 2-3` now or `git reset 1`\n\nSee the example below:\n\nUsage example of Git SCM, referring to numbered shortcuts\n\nNote: You can also use the `ll` command to use SCM breeze with non git files.\n\nUsing the `ll` command to get SCM commands for files not in `git status`.\n\nThis is what my plugins array looks like in .zshrc:\n\n    \n    \n    plugins=( git zsh-completions zsh-autosuggestions zsh-syntax-highlighting )\n\nSome plugins, like `zsh-completions` have additional installation instructions\nthough. Please refer to the official page I linked above if you\u2019re interested\nin using it.\n\n##\n\n\ud83c\udfc3 Aliases & other config\n\nI use the following aliases in my `~/.zshrc` file so I can quickly access the\nfile I need. You can pick which ones you like and name them to your liking.\n\n    \n    \n    # Open up zshrc file to edit it alias addalias='code ~/.zshrc' # Reload zshrc file to apply changes. # Allows you to not need to restart terminal for changes to .zshrc to be applied alias reload='source ~/.zshrc' alias gs='git status' alias ohmyzsh=\"cd ~/.oh-my-zsh\" alias starshipconfig=\"code ~/.config/starship.toml\" # navigate to global ssh directory alias sshhome=\"cd ~/.ssh\" # edit global ssh configuration alias sshconfig=\"code ~/.ssh/config\" # edit global git configuration alias gitconfig=\"code ~/.gitconfig\"\n\nAnother addition I make is to history-based configuration, credit to this\narticle\n\n    \n    \n    HISTFILE=\"$HOME/.zsh_history\" # Display timestamps for each command HIST_STAMPS=\"%T %d.%m.%y\" HISTSIZE=10000000 SAVEHIST=10000000 # Ignore these commands in history HISTORY_IGNORE=\"(ls|pwd|cd)*\" # Write the history file in the ':start:elapsed;command' format. setopt EXTENDED_HISTORY # Do not record an event starting with a space. setopt HIST_IGNORE_SPACE # Don't store history commands setopt HIST_NO_STORE\n\n##\n\n\u26a1\ufe0f Command line utilities\n\nMany of the default unix commands have better, more modern alternatives. Below\nis a list of my favorites. Grab the code snippet at the end of the list to\ninstall all of these.\n\nCredit to\n\nRyan Peterman\n\nand his post here for exposing me to some of these.\n\n  * gh \u2192 GitHub CLI\n\n    * How I use it: To create and checkout pull requests, primarily with `gh pr create` and `gh pr checkout`\n\n    * How to install it: `brew install gh`\n\n  * bat \u2192 Improvement on `cat` command.\n\n    * How I use it: Instead of `cat`. It gives nicer to read output with syntax highlighting. I also set the theme in .zshrc by adding `export BAT_THEME=\"base16\"`\n\n    * How to install it: `brew install bat`\n\n  * bottom \u2192 Graphical system monitor in your terminal.\n\n    * How I use it: Quickly assess what is taking the most memory and CPU. Run with `btm`.\n\n    * How to install it: `brew install bottom`\n\n  * jq \u2192 Query JSON data for exactly what you need\n\n    * How I use it: If I have a big JSON file and want to transform the shape of it by only selecting certain parts.\n\n    * How to install it: `brew install jq`\n\n  * fzf \u2192 Interactive fuzzy finder\n\n    * How I use it: I should probably use this more, but in general it\u2019s nice to have around for quickly checking files that match a certain pattern.\n\n    * How to install it: `brew install fzf`\n\n  * fd \u2192 `find` replacement\n\n    * How I use it: As an alternative to `find`. It\u2019s faster and I hook it up to `fzf`\n\n    * How to install it: `brew install fd`\n\n  * ripgrep \u2192 `grep` replacement. Use via `rg` command.\n\n    * How I use it: Use it instead of grep. It\u2019s faster and respects gitignore & hidden files. It can also do text replacement with a --replace flag.\n\n    * How to install it: `brew install ripgrep`\n\n  * tldr \u2192 `man` replacement\n\n    * How I use it: Instead of `man <program>`. Easier to read output at a glance.\n\n    * How to install it: `brew install tlrc`\n\n  * mcfly \u2192 Better `ctrl + r` reverse search\n\n    * How I use it: Install it and forget. It replaces ctrl + r with a better search functionality\n\n    * How to install it: `brew install mcfly`\n\n  * procs \u2192 Alternative to `ps` command, with memory and CPU output\n\n    * How I use it: Cleaner output than `ps`. I can also tell which processes are hogging up memory and CPU at a glance.\n\n    * How to install it: `brew install procs`\n\nThere are a few I have installed but haven\u2019t found the opportunity to use yet,\nbut I can see being useful:\n\n  * sd \u2192 simpler `sed` alternative. Easier APIs\n\n    * How I would use it: Replace text patterns in files. `sed` has always been a pain to use when I write scripts using it.\n\n    * How to install it: `brew install sd`\n\n  * broot \u2192 Interactive file and directory explorer\n\n    * How I would use it: Apply a command to a specific set of files for more complex searching and assessing cases.\n\n    * How to install it: `brew install broot`\n\n  * httpie or curlie \u2192 curl replacement\n\n    * How I would use it: As a nicer alternative to `curl`\n\n    * How to install it: `brew install httpie` or `brew install curlie`\n\n  * hyperfine \u2192 benchmarking tool to quickly benchmark a command or program\n\n    * How I would use it: Assess how long a script will take to run, usually to assess it in CI. Most commands output the time it took, but this is useful for the ones that don\u2019t, especially after an upgrade.\n\n    * How to install it: `brew install hyperfine`\n\nHere\u2019s a single command to get all of these\n\n    \n    \n    brew install \\ gh \\ bat \\ bottom \\ jq \\ fzf \\ fd \\ ripgrep \\ tlrc \\ mcfly \\ procs \\ sd \\ broot \\ httpie \\ curlie \\ hyperfine\n\n##\n\n\ud83d\udd28 On my todo list\n\nThere are still improvements I want to make and I\u2019m working up to.\n\n  * I want to try out Tmux for window management\n\n  * Add ai-shell or shell-gpt to my terminal to get ChatGPT in my terminal\n\n##\n\n\ud83d\ude4f References\n\nI\u2019ve picked up many of these tricks over the years through various sources.\n\nA few articles that I\u2019ve learned from are:\n\n  * Robin Wieruch Mac Setup\n\n  * Ryan Peterman\u2019s CLI tool upgrades\n\n  * Modern unix command alternatives\n\n  * Shell history is your best productivity tool\n\n  * Ultimate Guide to Your Terminal Makeover (paid medium article)\n\n##\n\n\ud83d\udccb Job board\n\nI\u2019m experimenting with a High Growth Engineer job board for a few weeks. This\nweek I am selecting 1 remote and 2 hybrid jobs to highlight. Note: I do get a\ncommission if you\u2019re hired.\n\n  * Senior Frontend Engineer - Hybrid New York @ ATC (150k - 200k base)\n\n  * Senior ML Engineer - Hybrid Los Altos @ GLASS Imaging\n\n  * Senior Frontend Engineer - Remote US @ Rec (130k-160k base)\n\n##\n\n\ud83d\udce3 Shout-outs of the week\n\n  * Check me out on the Science Speaks Podcast: I had an amazing time with Mark Bayer, former U.S. Senate Chief of Staff. We gave actionable advice to improve your communication and I shared personal stories that taught me some of the most important lessons that shaped me. A must listen (only 12min at 2x speed)!\n\n  * What did I even do this week besides meetings!? by\n\nCaleb Mellas\n\non\n\nLevel up software engineering \ud83d\ude80\n\n\u2014 Understand the multiple dimensions of where impact can come from and learn\nactionable force multipliers.\n\n  * How you start a new role influences your success in that role by\n\nEthan Evans\n\non\n\nLevel Up by Ethan Evans\n\n\u2014 I appreciated this read as I was starting at Pinterest this week. It helped\nme with my mindset and approach for the first week.\n\nThank you for your continued support of the newsletter and the growth to 56k+\nsubscribers \ud83d\ude4f\n\n\\- Jordan\n\nP.S. Here are a few other things which may interest you:\n\n  1. Path to Senior Engineer Handbook (9.3k+ stars)\u2014Everything you need to get to Senior. Let\u2019s get to 10k stars!\n\n  2. My LinkedIn: I write daily content to 60k+ engineers. I\u2019m also ramping on Twitter/X\n\n  3. Newsletter sponsorships: Feel free to reply to this email or check the Sponsorship packages\n\nDid you find this issue valuable? If so, there are two ways you can help:\n\nJoin 56k+ subscribers and nearly 400+ paid subscribers and get all my\ntemplates to level up\n\nYou can also hit the like \u2764\ufe0f button at the bottom of this email to help\nsupport me or share this with a friend to get referral rewards. It helps me a\nton!\n\n23 Likes\n\n\u00b7\n\n2 Restacks\n\n23\n\nShare this post\n\n#### How I setup my terminal for max productivity\n\nread.highgrowthengineer.com\n\n2\n\nShare\n\n2 Comments\n\nPratyush Nalam30 mins agoYou should definitely try tmux. It is a game changer.\nAlso, powerline >>>> starship ;)Expand full commentLikeReplyShare  \n---  \n  \nColtinLead Kindly32 mins agoCongratulations on the new role at Pinterest!\nThanks for sharing your terminal setup, everything here is very useful!Expand\nfull commentLikeReplyShare  \n---  \n  \nReady for more?\n\n\u00a9 2024 Jordan Cutler\n\nPrivacy \u2219 Terms \u2219 Collection notice\n\nStart WritingGet the app\n\nSubstack is the home for great culture\n\nShare\n\n## Create your profile\n\n## Only paid subscribers can comment on this post\n\nAlready a paid subscriber? Sign in\n\n#### Check your email\n\nFor your security, we need to re-authenticate you.\n\nClick the link we sent to , or click here to sign in.\n\n", "frontpage": true}
