{"aid": "39960125", "title": "Google Public DNS's approach to fight against cache poisoning attacks", "url": "https://security.googleblog.com/2024/03/google-public-dnss-approach-to-fight.html", "domain": "googleblog.com", "votes": 13, "user": "tatersolid", "posted_at": "2024-04-07 11:46:55", "comments": 0, "source_title": "Google Public DNS\u2019s approach to fight against cache poisoning attacks", "source_text": "Google Online Security Blog: Google Public DNS\u2019s approach to fight against\ncache poisoning attacks\n\n## Security Blog\n\nThe latest news and insights from Google on security and safety on the\nInternet\n\n## Google Public DNS\u2019s approach to fight against cache poisoning attacks\n\nMarch 28, 2024\n\nTianhao Chi and Puneet Sood, Google Public DNS\n\nThe Domain Name System (DNS) is a fundamental protocol used on the Internet to\ntranslate human-readable domain names (e.g., www.example.com) into numeric IP\naddresses (e.g., 192.0.2.1) so that devices and servers can find and\ncommunicate with each other. When a user enters a domain name in their\nbrowser, the DNS resolver (e.g. Google Public DNS) locates the authoritative\nDNS nameservers for the requested name, and queries one or more of them to\nobtain the IP address(es) to return to the browser.\n\nWhen DNS was launched in the early 1980s as a trusted, content-neutral\ninfrastructure, security was not yet a pressing concern, however, as the\nInternet grew DNS became vulnerable to various attacks. In this post, we will\nlook at DNS cache poisoning attacks and how Google Public DNS addresses the\nrisks associated with them.\n\n# DNS Cache Poisoning Attacks\n\nDNS lookups in most applications are forwarded to a caching resolver (which\ncould be local or an open resolver like. Google Public DNS). The path from a\nclient to the resolver is usually on a local network or can be protected using\nencrypted transports like DoH, DoT. The resolver queries authoritative DNS\nservers to obtain answers for user queries. This communication primarily\noccurs over UDP, an insecure connectionless protocol, in which messages can be\neasily spoofed including the source IP address. The content of DNS queries may\nbe sufficiently predictable that even an off-path attacker can, with enough\neffort, forge responses that appear to be from the queried authoritative\nserver. This response will be cached if it matches the necessary fields and\narrives before the authentic response. This type of attack is called a cache\npoisoning attack, which can cause great harm once successful. According to RFC\n5452, the probability of success is very high without protection. Forged DNS\nresponses can lead to denial of service, or may even compromise application\nsecurity. For an excellent introduction to cache poisoning attacks, please see\n\u201cAn Illustrated Guide to the Kaminsky DNS Vulnerability\u201d.\n\n# Cache poisoning mitigations in Google Public DNS\n\nImproving DNS security has been a goal of Google Public DNS since our launch\nin 2009. We take a multi-pronged approach to protect users against DNS cache-\npoisoning attacks. There is no silver bullet or countermeasure that entirely\nsolves the problem, but in combination they make successful attacks\nsubstantially more difficult.\n\n## RFC 5452 And DNS Cookies\n\nWe have implemented the basic countermeasures outlined in RFC 5452 namely\nrandomizing query source ports and query IDs. But these measures alone are not\nsufficient (see page 8 of our OARC 38 presentation).\n\nWe have therefore also implemented support for RFC 7873 (DNS Cookies) which\ncan make spoofing impractical if it\u2019s supported by the authoritative server.\nMeasurements indicate that the DNS Cookies do not provide sufficient coverage,\neven though around 40% of nameservers by IP support DNS Cookies, these account\nfor less than 10% of overall query volume. In addition, many non-compliant\nnameservers return incorrect or ambiguous responses for queries with DNS\nCookies, which creates further deployment obstacles. For now, we\u2019ve enabled\nDNS Cookies through manual configuration, primarily for selected TLD zones.\n\n## Case Randomization (0x20)\n\nThe query name case randomization mechanism, originally proposed in a March\n2008 draft \u201cUse of Bit 0x20 in DNS Labels to Improve Transaction Identity\u201d,\nhowever, is highly effective, because all but a small minority of nameservers\nare compatible with query name case randomization. We have been performing\ncase randomization of query names since 2009 to a small set of chosen\nnameservers that handle only a minority of our query volume.\n\nIn 2022 we started work on enabling case randomization by default, which when\nused, the query name in the question section is randomized and the DNS\nserver\u2019s response is expected to match the case-randomized query name exactly\nin the request. For example, if \u201cExaMplE.CoM\u201d is the name sent in the request,\nthe name in the question section of the response must also be \u201cExaMplE.CoM\u201d\nrather than, e.g., \u201cexample.com.\u201d Responses that fail to preserve the case of\nthe query name may be dropped as potential cache poisoning attacks (and\nretried over TCP).\n\nWe are happy to announce that we\u2019ve already enabled and deployed this feature\nglobally by default. It covers over 90% of our UDP traffic to nameservers,\nsignificantly reducing the risk of cache poisoning attacks.\n\nMeanwhile, we maintain an exception list and implement fallback mechanisms to\nprevent potential issues with non-conformant nameservers. However we strongly\nrecommend that nameserver implementations preserve the query case in the\nresponse.\n\n## DNS-over-TLS\n\nIn addition to case randomization, we\u2019ve deployed DNS-over-TLS to\nauthoritative nameservers (ADoT), following procedures described in RFC 9539\n(Unilateral Opportunistic Deployment of Encrypted Recursive-to-Authoritative\nDNS). Real world measurements show that ADoT has a higher success rate and\ncomparable latency to UDP. And ADoT is in use for around 6% of egress traffic.\nAt the cost of some CPU and memory, we get both security and privacy for\nnameserver queries without DNS compliance issues.\n\n## Summary\n\nGoogle Public DNS takes security of our users seriously. Through multiple\ncountermeasures to cache poisoning attacks, we aim to provide a more secure\nand reliable DNS resolution service, enhancing the overall Internet experience\nfor users worldwide. With the measures described above we are able to provide\nprotection against passive attacks for over 90% of authoritative queries.\n\nTo enhance DNS security, we recommend that DNS server operators support one or\nmore of the security mechanisms described here. We are also working with the\nDNS community to improve DNS security. Please see our presentations at DNS-\nOARC 38 and 40 for more technical details.\n\nGoogle\n\n#### No comments :\n\nPost a Comment\n\n## Labels\n\n  * #sharethemicincyber\n  * #supplychain #security #opensource\n  * android\n  * android security\n  * android tr\n  * app security\n  * big data\n  * biometrics\n  * blackhat\n  * C++\n  * chrome\n  * chrome enterprise\n  * chrome security\n  * connected devices\n  * CTF\n  * diversity\n  * encryption\n  * federated learning\n  * fuzzing\n  * Gboard\n  * google play\n  * google play protect\n  * hacking\n  * interoperability\n  * iot security\n  * kubernetes\n  * linux kernel\n  * memory safety\n  * Open Source\n  * pha family highlights\n  * pixel\n  * privacy\n  * private compute core\n  * Rowhammer\n  * rust\n  * Security\n  * security rewards program\n  * sigstore\n  * spyware\n  * supply chain\n  * targeted spyware\n  * tensor\n  * Titan M2\n  * VDP\n  * vulnerabilities\n  * workshop\n\n## Archive\n\n  * 2024\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n  * 2023\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2022\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2021\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2020\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2019\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2018\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2017\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2016\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2015\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2014\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2013\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Aug\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2012\n\n    * Jan\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Aug\n\n    * Sep\n\n    * Dec\n\n  * 2011\n\n    * Feb\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2010\n\n    * Mar\n\n    * Apr\n\n    * May\n\n    * Jul\n\n    * Aug\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n  * 2009\n\n    * Mar\n\n    * Jun\n\n    * Jul\n\n    * Aug\n\n    * Oct\n\n    * Nov\n\n  * 2008\n\n    * Feb\n\n    * May\n\n    * Jul\n\n    * Aug\n\n    * Oct\n\n    * Nov\n\n    * Dec\n\n  * 2007\n\n    * May\n\n    * Jun\n\n    * Jul\n\n    * Sep\n\n    * Oct\n\n    * Nov\n\n## Feed\n\nFollow\n\nGive us feedback in our Product Forums.\n\n  * Google\n  * Privacy\n  * Terms\n\nDiese Website verwendet Cookies von Google, um Dienste anzubieten und Zugriffe\nzu analysieren. Deine IP-Adresse und dein User-Agent werden zusammen mit\nMesswerten zur Leistung und Sicherheit f\u00fcr Google freigegeben. So k\u00f6nnen\nNutzungsstatistiken generiert, Missbrauchsf\u00e4lle erkannt und behoben und die\nQualit\u00e4t des Dienstes gew\u00e4hrleistet werden.Weitere InformationenOk\n\n", "frontpage": true}
