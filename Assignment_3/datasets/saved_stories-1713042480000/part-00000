{"aid": "40023600", "title": "Using Arc Theme to Style a Website", "url": "https://www.devslovecoffee.com/blog/using-arc-theme-to-style-website", "domain": "devslovecoffee.com", "votes": 1, "user": "devslovecoffee", "posted_at": "2024-04-13 15:06:31", "comments": 0, "source_title": "Using Arc Theme to Style a Website", "source_text": "Using Arc Theme to Style a Website\n\n# Using Arc Theme to Style a Website\n\nApr 10, 2024\n\nArc is the first browser I was ever excited about. Up until then, the browsers\nI\u2019ve used (basically all of them) felt dull, empty, soulless, and seemingly\nhating their task of showing you the content. The websites shown were in\ncontrast engaging and stimulating. Arc to me feels complementary to the\nwebsites and enhances the whole browsing experience. Apart from its\ncaptivating looks, it\u2019s easy to use, has great performance, and I can\ncustomize it in various ways.\n\nOne of the customization options that Arc provides is changing the theme,\nwhich as I\u2019ve recently learned, does not only change the colors of the browser\nitself, but also inserts the color configuration as css variables to the root\nof any page you are browsing. The inserted variables for a specific theme look\nlike this:\n\n    \n    \n    :root { --arc-palette-subtitle: #D4AD97FF; --arc-palette-foregroundSecondary: #EF8C62FF; --arc-palette-foregroundPrimary: #EF8C62FF; --arc-palette-hover: #E9D6CBFF; --arc-palette-background: #F4EBE5FF; --arc-palette-maxContrastColor: #993810FF; --arc-palette-title: #2E1000FF; --arc-palette-minContrastColor: #FCEBE4FF; --arc-palette-backgroundExtra: #FEFDFCFF; --arc-palette-foregroundTertiary: #FCEBE4FF; --arc-palette-focus: #CA997EFF; --arc-background-simple-color: #EF8C62FF; --arc-palette-cutoutColor: #FCEBE4FF; }\n\nI have noticed this just as I was adding themes to my blog so, naturally, I\nwanted to see whether I could use them as a separate theme option for my\nreaders that use Arc. Not only I could, but turns out it is also super easy.\n\n## Themes In Css\n\nTo implement different themes in css, all you have to do is decide on some\ncolors you want to use for your elements, define the colors as variables, and\nthen plug in the desired values to the relevant places. The most basic use\ncase for themes is the light and dark theme.\n\nHere is my base, light theme configuration:\n\n    \n    \n    html[data-theme='light'] { --color-background: #F8F7F4; --color-primary: #092230; --color-secondary: #54524F; --color-secondary-80: rgba(84, 82, 79, 0.8); --color-code: #3C3B39; --background-code-color: rgba(119, 117, 112, 0.1); --color-highlight: #FF6E50; --color-highlight-24: rgba(255, 110, 80, 0.24); }\n\nThe variables are then used throughout the website. Here is an example of how\nI use the variables on the body of the website (the whole global.css can be\nseen in the repo):\n\n    \n    \n    body { background: var(--color-background); color: var(--color-primary); }\n\nPretty basic css theming stuff. To use the Arc-provided variables, I just\nneeded to find out which colors worked for my components, and swap the hex\ncolor codes for the variables inside css. Here is the arc config I use:\n\n    \n    \n    html[data-theme='arc'] { --color-background: var(--arc-palette-background); --color-primary: var(--arc-palette-maxContrastColor); --color-secondary: var(--arc-palette-foregroundPrimary); --color-secondary-80: var(--arc-palette-foregroundSecondary); --color-code: var(--arc-palette-foregroundSecondary); --background-code-color: var(--arc-palette-backgroundExtra); --color-highlight: var(--arc-palette-title); --color-highlight-24: var(--arc-palette-hover); }\n\nArc updates the variables as soon as the theme is updated, and the css is\nrecalculated real-time, as demonstrated by following gif:\n\nThe effect changing Arc theme has on this website\n\n## Getting Arc Info\n\nTo determine whether someone is using Arc and provide the option to switch on\nthe Arc option, I use this piece of code:\n\n    \n    \n    const usingArc = getComputedStyle(document.documentElement).getPropertyValue('--arc-palette-background') !== '';\n\nThen I just check whether usingArc is true, and if so, the arc theme is\napplied. The whole logic can be seen in my ThemeToggle component here.\n\n", "frontpage": false}
