{"aid": "40024928", "title": "A Terraform module to manage GitHub Repositories", "url": "https://github.com/mineiros-io/terraform-github-repository", "domain": "github.com/mineiros-io", "votes": 1, "user": "mooreds", "posted_at": "2024-04-13 18:16:18", "comments": 0, "source_title": "GitHub - mineiros-io/terraform-github-repository: A Terraform module to manage GitHub Repositories. https://github.com/", "source_text": "GitHub - mineiros-io/terraform-github-repository: A Terraform module to manage\nGitHub Repositories. https://github.com/\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nmineiros-io / terraform-github-repository Public\n\n  * Notifications\n  * Fork 97\n  * Star 149\n\nA Terraform module to manage GitHub Repositories. https://github.com/\n\n### License\n\nApache-2.0 license\n\n149 stars 97 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# mineiros-io/terraform-github-repository\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n11 Branches\n\n36 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nmariuxMerge pull request #139 from mineiros-io/mariux/bpv4ee6001a \u00b7\n\n## History\n\n327 Commits  \n  \n### .github\n\n|\n\n### .github\n\n| ci: update github actions workflow from template  \n  \n### examples\n\n|\n\n### examples\n\n| Add Setting require_conversation_resolution for Branch Protection  \n  \n### test\n\n|\n\n### test\n\n| chore: Add test for v4 branch protections  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| feat!: Only support latest versions of Terraform and Official GitHub ...  \n  \n### .pre-commit-config.yaml\n\n|\n\n### .pre-commit-config.yaml\n\n| refactor!: allow computed values in v4 branch protections  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| chore: Update Changelog  \n  \n### CONTRIBUTING.md\n\n|\n\n### CONTRIBUTING.md\n\n| chore: change default branch to main  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Repositories and teams (#1)  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| build: update makefile from template  \n  \n### README.md\n\n|\n\n### README.md\n\n| chore: Mark defaults as deprecated.  \n  \n### README.tfdoc.hcl\n\n|\n\n### README.tfdoc.hcl\n\n| chore: Mark defaults as deprecated.  \n  \n### go.mod\n\n|\n\n### go.mod\n\n| refactor: merge all tests into unit-complete  \n  \n### go.sum\n\n|\n\n### go.sum\n\n| refactor: merge all tests into unit-complete  \n  \n### main.tf\n\n|\n\n### main.tf\n\n| refactor!: allow computed values in v4 branch protections  \n  \n### outputs.tf\n\n|\n\n### outputs.tf\n\n| feat: add support for the github_app_installation_repository resource  \n  \n### secrets.tf\n\n|\n\n### secrets.tf\n\n| feat: add support for encrypted secrets  \n  \n### variables.tf\n\n|\n\n### variables.tf\n\n| chore: Mark defaults as deprecated.  \n  \n### versions.tf\n\n|\n\n### versions.tf\n\n| fix: mask broken versions  \n  \n## Repository files navigation\n\n# terraform-github-repository\n\nA Terraform module for creating a public or private repository on Github.\n\nThis module supports Terraform v1.x and is compatible with the Official\nTerraform GitHub Provider v4.20 and above from integrations/github.\n\nAttention: This module is incompatible with the Hashicorp GitHub Provider! The\nlatest version of this module supporting hashicorp/github provider is ~>\n0.10.0\n\n** Note: Versions 5.3.0, 5.4.0, and 5.5.0 of the Terraform Github Provider\nhave broken branch protections support and should not be used.**\n\n  * GitHub as Code\n  * Module Features\n  * Getting Started\n  * Module Argument Reference\n\n    * Main Resource Configuration\n    * Extended Resource Configuration\n\n      * Repository Creation Configuration\n      * Teams Configuration\n      * Collaborator Configuration\n      * Branches Configuration\n      * Deploy Keys Configuration\n      * Branch Protections v3 Configuration\n      * Branch Protections v4 Configuration\n      * Issue Labels Configuration\n      * Projects Configuration\n      * Webhooks Configuration\n      * Secrets Configuration\n      * Autolink References Configuration\n      * App Installations\n    * Module Configuration\n  * Module Outputs\n  * External Documentation\n\n    * Terraform Github Provider Documentation\n  * Module Versioning\n\n    * Backwards compatibility in 0.0.z and 0.y.z version\n  * About Mineiros\n  * Reporting Issues\n  * Contributing\n  * Makefile Targets\n  * License\n\n## GitHub as Code\n\nGitHub as Code is a commercial solution built on top of our open-source\nTerraform modules for GitHub. It helps our customers to manage their GitHub\norganization more efficiently by enabling anyone in their organization to\nself-service manage on- and offboarding of users, repositories, and settings\nsuch as branch protections, secrets, and more through code. GitHub as Code\ncomes with pre-configured GitHub Actions pipelines for change pre-view in Pull\nRequests, fully automated rollouts and rollbacks. It's a comprehensive, ready-\nto-use blueprint maintained by our team of platform engineering experts and\nsaves companies such as yours tons of time by building on top of a pre-\nconfigured solution instead of building and maintaining it yourself.\n\nFor details please see https://mineiros.io/github-as-code.\n\n## Module Features\n\nIn contrast to the plain github_repository resource this module enables\nvarious other features like Branch Protection or Collaborator Management.\n\n  * Default Security Settings: This module creates a private repository by default, Deploy keys are read-only by default\n\n  * Standard Repository Features: Setting basic Metadata, Merge Strategy, Auto Init, License Template, Gitignore Template, Template Repository\n\n  * Extended Repository Features: Branches, Branch Protection, Issue Labels, Handle Github Default Issue Labels, Collaborators, Teams, Deploy Keys, Projects, Repository Webhooks\n\n  * Features not yet implemented: Project Columns support, Actions, Repository File\n\n## Getting Started\n\nMost basic usage creating a new private github repository.\n\n    \n    \n    module \"repository\" { source = \"mineiros-io/repository/github\" version = \"~> 0.18.0\" name = \"terraform-github-repository\" license_template = \"apache-2.0\" gitignore_template = \"Terraform\" }\n\n## Module Argument Reference\n\nSee variables.tf and examples/ for details and use-cases.\n\n### Main Resource Configuration\n\n  * name: (Required string)\n\nThe name of the repository.\n\n  * defaults: (Optional object(defaults))\n\nDEPRECATED: This variable will be removed in future releases. It was needed in\ntimes when Terraform Module for each was not available to provide default\nvalues for multiple repositories. Please convert your code accordingly to stay\ncompatible with future releases.\n\nDefault is {}.\n\n  * pages: (Optional object(pages))\n\nA object of settings to configure GitHub Pages in this repository. See below\nfor a list of supported arguments.\n\nDefault is {}.\n\nThe pages object accepts the following attributes:\n\n    * branch: (Required string)\n\nThe repository branch used to publish the site's source files.\n\n    * path: (Optional string)\n\nThe repository directory from which the site publishes.\n\n    * cname: (Optional string)\n\nThe custom domain for the repository. This can only be set after the\nrepository has been created.\n\n  * allow_merge_commit: (Optional bool)\n\nSet to false to disable merge commits on the repository. If you set this to\nfalse you have to enable either allow_squash_merge or allow_rebase_merge.\n\nDefault is true.\n\n  * allow_squash_merge: (Optional bool)\n\nSet to true to enable squash merges on the repository.\n\nDefault is false.\n\n  * allow_rebase_merge: (Optional bool)\n\nSet to true to enable rebase merges on the repository.\n\nDefault is false.\n\n  * allow_auto_merge: (Optional bool)\n\nSet to true to allow auto-merging pull requests on the repository. If you\nenable auto-merge for a pull request, the pull request will merge\nautomatically when all required reviews are met and status checks have passed.\n\nDefault is false.\n\n  * description: (Optional string)\n\nA description of the repository.\n\nDefault is \"\".\n\n  * delete_branch_on_merge: (Optional bool)\n\nSet to false to disable the automatic deletion of head branches after pull\nrequests are merged.\n\nDefault is true.\n\n  * homepage_url: (Optional string)\n\nURL of a page describing the project.\n\nDefault is \"\".\n\n  * private: (Optional bool)\n\nDEPRECATED: Please use visibility instead and update your code. parameter will\nbe removed in a future version\n\n  * visibility: (Optional string)\n\nCan be public or private. If your organization is associated with an\nenterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server\n2.20+, visibility can also be internal. The visibility parameter overrides the\ndeprecated private parameter.\n\nDefault is \"private\".\n\n  * has_issues: (Optional bool)\n\nSet to true to enable the GitHub Issues features on the repository.\n\nDefault is false.\n\n  * has_projects: (Optional bool)\n\nSet to true to enable the GitHub Projects features on the repository.\n\nDefault is false.\n\n  * has_wiki: (Optional bool)\n\nSet to true to enable the GitHub Wiki features on the repository.\n\nDefault is false.\n\n  * has_downloads: (Optional bool)\n\nSet to true to enable the (deprecated) downloads features on the repository.\n\nDefault is false.\n\n  * is_template: (Optional bool)\n\nSet to true to tell GitHub that this is a template repository.\n\nDefault is false.\n\n  * default_branch: (Optional string)\n\nThe name of the default branch of the repository. NOTE: The configured default\nbranch must exist in the repository. If the branch doesn't exist yet, or if\nyou are creating a new repository, please add the desired default branch to\nthe branches variable, which will cause Terraform to create it for you.\n\nDefault is \"\".\n\n  * archived: (Optional bool)\n\nSpecifies if the repository should be archived. NOTE: Currently, the API does\nnot support unarchiving.\n\nDefault is false.\n\n  * topics: (Optional list(string))\n\nThe list of topics of the repository.\n\nDefault is [].\n\n  * extra_topics: (Optional list(string))\n\nA list of additional topics of the repository. Those topics will be added to\nthe list of topics. This is useful if default.topics are used and the list\nshould be extended with more topics.\n\nDefault is [].\n\n  * vulnerability_alerts: (Optional bool)\n\nSet to false to disable security alerts for vulnerable dependencies. Enabling\nrequires alerts to be enabled on the owner level.\n\n  * archive_on_destroy: (Optional bool)\n\nSet to false to not archive the repository instead of deleting on destroy.\n\nDefault is true.\n\n### Extended Resource Configuration\n\n#### Repository Creation Configuration\n\nThe following four arguments can only be set at repository creation and\nchanges will be ignored for repository updates and will not show a diff in\nplan or apply phase.\n\n  * auto_init: (Optional bool)\n\nSet to false to not produce an initial commit in the repository.\n\nDefault is true.\n\n  * gitignore_template: (Optional string)\n\nUse the name of the template without the extension.\n\nDefault is \"\".\n\n  * license_template: (Optional string)\n\nUse the name of the template without the extension.\n\nDefault is \"\".\n\n  * template: (Optional object(template))\n\nUse a template repository to create this resource.\n\nDefault is {}.\n\nThe template object accepts the following attributes:\n\n    * owner: (Required string)\n\nThe GitHub organization or user the template repository is owned by.\n\n    * repository: (Required string)\n\nThe name of the template repository.\n\n#### Teams Configuration\n\nYour can use non-computed (known at terraform plan) team names or slugs\n(*_teams Attributes) or computed (only known in terraform apply phase) team\nIDs (*_team_ids Attributes). When using non-computed names/slugs teams need to\nexist before running plan. This is due to some terraform limitation and we\nwill update the module once terraform removed this limitation.\n\n  * pull_teams: (Optional list(string))\n\nCan also be pull_team_ids. A list of teams to grant pull (read-only)\npermission. Recommended for non-code contributors who want to view or discuss\nyour project.\n\nDefault is [].\n\n  * triage_teams: (Optional list(string))\n\nCan also be triage_team_ids. A list of teams to grant triage permission.\nRecommended for contributors who need to proactively manage issues and pull\nrequests without write access.\n\nDefault is [].\n\n  * push_teams: (Optional list(string))\n\nCan also be push_team_ids. A list of teams to grant push (read-write)\npermission. Recommended for contributors who actively push to your project.\n\nDefault is [].\n\n  * maintain_teams: (Optional list(string))\n\nCan also be maintain_team_ids. A list of teams to grant maintain permission.\nRecommended for project managers who need to manage the repository without\naccess to sensitive or destructive actions.\n\nDefault is [].\n\n  * admin_teams: (Optional list(string))\n\nCan also be admin_team_ids. A list of teams to grant admin (full) permission.\nRecommended for people who need full access to the project, including\nsensitive and destructive actions like managing security or deleting a\nrepository.\n\nDefault is [].\n\n#### Collaborator Configuration\n\n  * pull_collaborators: (Optional list(string))\n\nA list of user names to add as collaborators granting them pull (read-only)\npermission. Recommended for non-code contributors who want to view or discuss\nyour project.\n\nDefault is [].\n\n  * triage_collaborators: (Optional list(string))\n\nA list of user names to add as collaborators granting them triage permission.\nRecommended for contributors who need to proactively manage issues and pull\nrequests without write access.\n\nDefault is [].\n\n  * push_collaborators: (Optional list(string))\n\nA list of user names to add as collaborators granting them push (read-write)\npermission. Recommended for contributors who actively push to your project.\n\nDefault is [].\n\n  * maintain_collaborators: (Optional list(string))\n\nA list of user names to add as collaborators granting them maintain\npermission. Recommended for project managers who need to manage the repository\nwithout access to sensitive or destructive actions.\n\nDefault is [].\n\n  * admin_collaborators: (Optional list(string))\n\nA list of user names to add as collaborators granting them admin (full)\npermission. Recommended for people who need full access to the project,\nincluding sensitive and destructive actions like managing security or deleting\na repository.\n\nDefault is [].\n\n#### Branches Configuration\n\n  * branches: (Optional list(branch))\n\nCreate and manage branches within your repository. Additional constraints can\nbe applied to ensure your branch is created from another branch or commit.\n\nDefault is [].\n\nEach branch object in the list accepts the following attributes:\n\n    * name: (Required string)\n\nThe name of the branch to create.\n\n    * source_branch: (Optional string)\n\nThe branch name to start from. Uses the configured default branch per default.\n\n    * source_sha: (Optional bool)\n\nThe commit hash to start from. Defaults to the tip of source_branch. If\nprovided, source_branch is ignored.\n\nDefault is true.\n\n#### Deploy Keys Configuration\n\n  * deploy_keys: (Optional list(deploy_key))\n\nCan also be type list(string). Specifies deploy keys and access-level of\ndeploy keys used in this repository. Every string in the list will be\nconverted internally into the object representation with the key argument\nbeing set to the string. object details are explained below.\n\nDefault is [].\n\nEach deploy_key object in the list accepts the following attributes:\n\n    * key: (Required string)\n\nThe SSH public key.\n\n    * title: (Optional string)\n\nA Title for the key. Default is the comment field of SSH public key if it is\nnot empty else it defaults to md5(key).\n\n    * read_only: (Optional bool)\n\nSpecifies the level of access for the key.\n\nDefault is true.\n\n    * id: (Optional string)\n\nSpecifies an ID which is used to prevent resource recreation when the order in\nthe list of deploy keys changes. The ID must be unique between deploy_keys and\ndeploy_keys_computed.\n\nDefault is \"md5(key)\".\n\n  * deploy_keys_computed: (Optional list(deploy_key))\n\nCan also be type string. Same as deploy_keys argument with the following\ndifferences: Use this argument if you depend on computed keys that terraform\ncan not use in resource for_each execution. Downside of this is the recreation\nof deploy key resources whenever the order in the list changes. Prefer\ndeploy_keys whenever possible. This argument does not conflict with\ndeploy_keys and should exclusively be used for computed resources.\n\nDefault is [].\n\nEach deploy_key object in the list accepts the following attributes:\n\n    * key: (Required string)\n\nThe SSH public key.\n\n    * title: (Optional string)\n\nA Title for the key. Default is the comment field of SSH public key if it is\nnot empty else it defaults to md5(key).\n\n    * read_only: (Optional bool)\n\nSpecifies the level of access for the key.\n\nDefault is true.\n\n    * id: (Optional string)\n\nSpecifies an ID which is used to prevent resource recreation when the order in\nthe list of deploy keys changes. The ID must be unique between deploy_keys and\ndeploy_keys_computed.\n\nDefault is \"md5(key)\".\n\n#### Branch Protections v3 Configuration\n\n  * branch_protections_v3: (Optional list(branch_protection_v3))\n\nThis resource allows you to configure v3 branch protection for repositories in\nyour organization. When applied, the branch will be protected from forced\npushes and deletion. Additional constraints, such as required status checks or\nrestrictions on users and teams, can also be configured.\n\nDefault is [].\n\nEach branch_protection_v3 object in the list accepts the following attributes:\n\n    * branch: (Required string)\n\nThe Git branch to protect.\n\n    * enforce_admins: (Optional bool)\n\nSetting this to true enforces status checks for repository administrators.\n\nDefault is false.\n\n    * require_conversation_resolution: (Optional bool)\n\nSetting this to true requires all conversations to be resolved.\n\nDefault is false.\n\n    * require_signed_commits: (Optional bool)\n\nSetting this to true requires all commits to be signed with GPG.\n\nDefault is false.\n\n    * required_status_checks: (Optional object(required_status_checks))\n\nEnforce restrictions for required status checks. See Required Status Checks\nbelow for details.\n\nDefault is {}.\n\nThe required_status_checks object accepts the following attributes:\n\n      * strict: (Optional bool)\n\nRequire branches to be up to date before merging.\n\nDefault is false.\n\n      * contexts: (Optional list(string))\n\nThe list of status checks to require in order to merge into this branch. If\ndefault is [] no status checks are required.\n\nDefault is [].\n\n    * required_pull_request_reviews: (Optional object(required_pull_request_reviews))\n\nEnforce restrictions for pull request reviews.\n\nDefault is {}.\n\nThe required_pull_request_reviews object accepts the following attributes:\n\n      * dismiss_stale_reviews: (Optional bool)\n\nDismiss approved reviews automatically when a new commit is pushed.\n\nDefault is true.\n\n      * dismissal_users: (Optional list(string))\n\nThe list of user logins with dismissal access\n\nDefault is [].\n\n      * dismissal_teams: (Optional list(string))\n\nThe list of team slugs with dismissal access. Always use slug of the team, not\nits name. Each team already has to have access to the repository.\n\nDefault is [].\n\n      * require_code_owner_reviews: (Optional bool)\n\nRequire an approved review in pull requests including files with a designated\ncode owner.\n\nDefault is false.\n\n    * restrictions: (Optional object(restrictions))\n\nEnforce restrictions for the users and teams that may push to the branch -\nonly available for organization-owned repositories. See Restrictions below for\ndetails.\n\nDefault is {}.\n\nThe restrictions object accepts the following attributes:\n\n      * users: (Optional list(string))\n\nThe list of user logins with push access.\n\nDefault is [].\n\n      * teams: (Optional list(string))\n\nThe list of team slugs with push access. Always use slug of the team, not its\nname. Each team already has to have access to the repository.\n\nDefault is [].\n\n      * apps: (Optional list(string))\n\nThe list of app slugs with push access.\n\nDefault is [].\n\n#### Branch Protections v4 Configuration\n\n  * branch_protections_v4: (Optional list(branch_protection_v4))\n\nThis resource allows you to configure v4 branch protection for repositories in\nyour organization.\n\nEach element in the list is a branch to be protected and the value the\ncorresponding to the desired configuration for the branch.\n\nWhen applied, the branch will be protected from forced pushes and deletion.\nAdditional constraints, such as required status checks or restrictions on\nusers and teams, can also be configured.\n\nNOTE: May conflict with v3 branch protections if used for the same branch.\n\nDefault is [].\n\nEach branch_protection_v4 object in the list accepts the following attributes:\n\n    * pattern: (Required string)\n\nIdentifies the protection rule pattern.\n\n    * _key: (Optional string)\n\nAn alternative key to use in for_each resource creation. Defaults to the value\nof var.pattern.\n\n    * allows_deletions: (Optional bool)\n\nSetting this to true to allow the branch to be deleted.\n\nDefault is false.\n\n    * allows_force_pushes: (Optional bool)\n\nSetting this to true to allow force pushes on the branch.\n\nDefault is false.\n\n    * blocks_creations: (Optional bool)\n\nSetting this to true will block creating the branch.\n\nDefault is false.\n\n    * enforce_admins: (Optional bool)\n\nKeeping this as true enforces status checks for repository administrators.\n\nDefault is true.\n\n    * push_restrictions: (Optional list(string))\n\nThe list of actor Names/IDs that may push to the branch. Actor names must\neither begin with a \"/\" for users or the organization name followed by a \"/\"\nfor teams.\n\nDefault is [].\n\n    * require_conversation_resolution: (Optional bool)\n\nSetting this to true requires all conversations on code must be resolved\nbefore a pull request can be merged.\n\nDefault is false.\n\n    * require_signed_commits: (Optional bool)\n\nSetting this to true requires all commits to be signed with GPG.\n\nDefault is false.\n\n    * required_linear_history: (Optional bool)\n\nSetting this to true enforces a linear commit Git history, which prevents\nanyone from pushing merge commits to a branch.\n\nDefault is false.\n\n    * required_pull_request_reviews: (Optional object(required_pull_request_reviews))\n\nEnforce restrictions for pull request reviews.\n\nThe required_pull_request_reviews object accepts the following attributes:\n\n      * dismiss_stale_reviews: (Optional bool)\n\nDismiss approved reviews automatically when a new commit is pushed.\n\nDefault is true.\n\n      * restrict_dismissals: (Optional bool)\n\nRestrict pull request review dismissals.\n\n      * dismissal_restrictions: (Optional list(string))\n\nThe list of actor Names/IDs with dismissal access. If not empty,\nrestrict_dismissals is ignored Actor names must either begin with a / for\nusers or the organization name followed by a / for teams.\n\nDefault is [].\n\n      * pull_request_bypassers: (Optional list(string))\n\nThe list of actor Names/IDs that are allowed to bypass pull request\nrequirements. Actor names must either begin with a / for users or the\norganization name followed by a / for teams.\n\nDefault is [].\n\n      * require_code_owner_reviews: (Optional bool)\n\nRequire an approved review in pull requests including files with a designated\ncode owner.\n\nDefault is true.\n\n      * required_approving_review_count: (Optional number)\n\nRequire x number of approvals to satisfy branch protection requirements. If\nthis is specified it must be a number between 0-6.\n\nDefault is 0.\n\n    * required_status_checks: (Optional object(required_status_checks))\n\nEnforce restrictions for required status checks. See Required Status Checks\nbelow for details.\n\nThe required_status_checks object accepts the following attributes:\n\n      * strict: (Optional bool)\n\nRequire branches to be up to date before merging.\n\nDefault is false.\n\n      * contexts: (Optional list(string))\n\nThe list of status checks to require in order to merge into this branch. If\ndefault is [] no status checks are required.\n\nDefault is [].\n\n#### Issue Labels Configuration\n\n  * issue_labels: (Optional list(issue_label))\n\nThis resource allows you to create and manage issue labels within your GitHub\norganization. Issue labels are keyed off of their \"name\", so pre-existing\nissue labels result in a 422 HTTP error if they exist outside of Terraform.\nNormally this would not be an issue, except new repositories are created with\na \"default\" set of labels, and those labels easily conflict with custom ones.\nThis resource will first check if the label exists, and then issue an update,\notherwise it will create.\n\nDefault is [].\n\nEach issue_label object in the list accepts the following attributes:\n\n    * name: (Required string)\n\nThe name of the label.\n\n    * color: (Required string)\n\nA 6 character hex code, without the leading #, identifying the color of the\nlabel.\n\n    * description: (Optional string)\n\nA short description of the label.\n\nDefault is \"\".\n\n    * id: (Optional string)\n\nSpecifies an ID which is used to prevent resource recreation when the order in\nthe list of issue labels changes.\n\nDefault is \"name\".\n\n  * issue_labels_merge_with_github_labels: (Optional bool)\n\nSpecify if github default labels will be handled by terraform. This should be\ndecided on upon creation of the repository. If you later decide to disable\nthis feature, github default labels will be destroyed if not replaced by\nlabels set in issue_labels argument.\n\n  * issue_labels_create: (Optional bool)\n\nSpecify whether you want to force or suppress the creation of issues labels.\nDefault is true if has_issues is true or issue_labels is non-empty.\n\n#### Projects Configuration\n\n  * projects: (Optional list(project))\n\nThis resource allows you to create and manage projects for GitHub repository.\n\nDefault is [].\n\nEach project object in the list accepts the following attributes:\n\n    * name: (Required string)\n\nThe name of the project.\n\n    * body: (Optional string)\n\nThe body of the project.\n\nDefault is \"\".\n\n    * id: (Optional string)\n\nSpecifies an ID which is used to prevent resource recreation when the order in\nthe list of projects changes.\n\nDefault is \"name\".\n\n#### Webhooks Configuration\n\n  * webhooks: (Optional list(webhook))\n\nThis resource allows you to create and manage webhooks for repositories in\nyour organization. When applied, a webhook will be created which specifies a\nURL to receive events and which events to receieve. Additional constraints,\nsuch as SSL verification, pre-shared secret and content type can also be\nconfigured\n\nDefault is [].\n\nEach webhook object in the list accepts the following attributes:\n\n    * events: (Required list(string))\n\nA list of events which should trigger the webhook. See a list of available\nevents.\n\n    * url: (Required string)\n\nThe URL to which the payloads will be delivered.\n\n    * active: (Optional bool)\n\nIndicate if the webhook should receive events. Defaults to true.\n\n    * content_type: (Optional string)\n\nThe media type used to serialize the payloads. Supported values include json\nand form.\n\nDefault is \"form\".\n\n    * secret: (Optional string)\n\nIf provided, the secret will be used as the key to generate the HMAC hex\ndigest value in the X-Hub-Signature header.\n\n    * insecure_ssl: (Optional bool)\n\nDetermines whether the SSL certificate of the host for url will be verified\nwhen delivering payloads. Supported values include 0 (verification is\nperformed) and 1 (verification is not performed). The default is 0. We\nstrongly recommend not setting this to 1 as you are subject to man-in-the-\nmiddle and other attacks.\n\n#### Secrets Configuration\n\n  * plaintext_secrets: (Optional map(string))\n\nThis map allows you to create and manage secrets for repositories in your\norganization.\n\nEach element in the map is considered a secret to be managed, being the key\nmap the secret name and the value the corresponding secret in plain text:\n\nWhen applied, a secret with the given key and value will be created in the\nrepositories.\n\nThe value of the secrets must be given in plain text, GitHub provider is in\ncharge of encrypting it.\n\nAttention: You should treat state as sensitive always. It is also advised that\nyou do not store plaintext values in your code but rather populate the\nencrypted_value using fields from a resource, data source or variable as,\nwhile encrypted in state, these will be easily accessible in your code. See\nbelow for an example of this abstraction.\n\nDefault is {}.\n\nExample:\n\n    \n        plaintext_secrets = { SECRET_NAME_1 = \"plaintext_secret_value_1\" SECRET_NAME_2 = \"plaintext_secret_value_2\" }\n\n  * encrypted_secrets: (Optional map(string))\n\nThis map allows you to create and manage encrypted secrets for repositories in\nyour organization.\n\nEach element in the map is considered a secret to be managed, being the key\nmap the secret name and the value the corresponding encrypted value of the\nsecret using the Github public key in Base64 format.b\n\nWhen applied, a secret with the given key and value will be created in the\nrepositories.\n\nDefault is {}.\n\nExample:\n\n    \n        encrypted_secrets = { SECRET_NAME_1 = \"c2VjcmV0X3ZhbHVlXzE=\" SECRET_NAME_2 = \"c2VjcmV0X3ZhbHVlXzI=\" }\n\n  * required_approving_review_count: (Optional number)\n\nRequire x number of approvals to satisfy branch protection requirements. If\nthis is specified it must be a number between 1-6. This requirement matches\nGithub's API, see the upstream documentation for more information. Default is\nno approving reviews are required.\n\n#### Autolink References Configuration\n\n  * autolink_references: (Optional list(autolink_reference))\n\nThis resource allows you to create and manage autolink references for GitHub\nrepository.\n\nDefault is [].\n\nEach autolink_reference object in the list accepts the following attributes:\n\n    * key_prefix: (Required string)\n\nThis prefix appended by a number will generate a link any time it is found in\nan issue, pull request, or commit.\n\n    * target_url_template: (Required string)\n\nThe template of the target URL used for the links; must be a valid URL and\ncontain <num> for the reference number.\n\n#### App Installations\n\n  * app_installations: (Optional set(string))\n\nA set of GitHub App IDs to be installed in this repository.\n\nDefault is {}.\n\nExample:\n\n    \n        app_installations = [\"05405144\", \"12556423\"]\n\n### Module Configuration\n\n  * module_depends_on: (Optional list(dependency))\n\nDue to the fact, that terraform does not offer depends_on on modules as of\ntoday (v0.12.24) we might hit race conditions when dealing with team names\ninstead of ids. So when using the feature of adding teams by slug/name to the\nrepository when creating it, make sure to add all teams to this list as\nindirect dependencies.\n\nDefault is [].\n\n## Module Outputs\n\nThe following attributes are exported by the module:\n\n  * repository: (object(repository))\n\nAll repository attributes as returned by the github_repository resource\ncontaining all arguments as specified above and the other attributes as\nspecified below.\n\n  * branches: (object(branches))\n\nAll repository attributes as returned by the [github_branch] resource\ncontaining all arguments as specified above and the other attributes as\nspecified below.\n\n  * full_name: (string)\n\nA string of the form \"orgname/reponame\".\n\n  * html_url: (string)\n\nURL to the repository on the web.\n\n  * ssh_clone_url: (string)\n\nURL that can be provided to git clone to clone the repository via SSH.\n\n  * http_clone_url: (string)\n\nURL that can be provided to git clone to clone the repository via HTTPS.\n\n  * git_clone_url: (string)\n\nURL that can be provided to git clone to clone the repository anonymously via\nthe git protocol.\n\n  * collaborators: (object(collaborators))\n\nA map of Collaborator objects keyed by the name of the collaborator as\nreturned by the github_repository_collaborator resource.\n\n  * deploy_keys: (object(deploy_keys))\n\nA merged map of deploy key objects for the keys originally passed via\ndeploy_keys and deploy_keys_computed as returned by the\ngithub_repository_deploy_key resource keyed by the input id of the key.\n\n  * projects: (object(project))\n\nA map of Project objects keyed by the id of the project as returned by the\ngithub_repository_project resource\n\n  * issue_labels: (object(issue_label))\n\nA map of issue labels keyed by label input id or name.\n\n  * webhooks: (object(webhook))\n\nAll attributes and arguments as returned by the github_repository_webhook\nresource.\n\n  * secrets: (object(secret))\n\nList of secrets available.\n\n  * app_installations: (set(number))\n\nA map of deploy app installations keyed by installation id.\n\n## External Documentation\n\n### Terraform Github Provider Documentation\n\n  * https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository\n  * https://registry.terraform.io/providers/integrations/github/latest/docs/resources/branch\n  * https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository_collaborator\n  * https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository_deploy_key\n  * https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository_project\n  * https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository_autolink_reference\n\n## Module Versioning\n\nThis Module follows the principles of Semantic Versioning (SemVer).\n\nGiven a version number MAJOR.MINOR.PATCH, we increment the:\n\n  1. MAJOR version when we make incompatible changes,\n  2. MINOR version when we add functionality in a backwards compatible manner, and\n  3. PATCH version when we make backwards compatible bug fixes.\n\n### Backwards compatibility in 0.0.z and 0.y.z version\n\n  * Backwards compatibility in versions 0.0.z is not guaranteed when z is increased. (Initial development)\n  * Backwards compatibility in versions 0.y.z is not guaranteed when y is increased. (Pre-release)\n\n## About Mineiros\n\nMineiros is a remote-first company headquartered in Berlin, Germany that\nsolves development, automation and security challenges in cloud\ninfrastructure.\n\nOur vision is to massively reduce time and overhead for teams to manage and\ndeploy production-grade and secure cloud infrastructure.\n\nWe offer commercial support for all of our modules and encourage you to reach\nout if you have any questions or need help. Feel free to email us at\nhello@mineiros.io or join our Community Slack channel.\n\n## Reporting Issues\n\nWe use GitHub Issues to track community reported issues and missing features.\n\n## Contributing\n\nContributions are always encouraged and welcome! For the process of accepting\nchanges, we use Pull Requests. If you'd like more information, please see our\nContribution Guidelines.\n\n## Makefile Targets\n\nThis repository comes with a handy Makefile. Run make help to see details on\neach available target.\n\n## License\n\nThis module is licensed under the Apache License Version 2.0, January 2004.\nPlease see LICENSE for full details.\n\nCopyright \u00a9 2020-2022 Mineiros GmbH\n\n## About\n\nA Terraform module to manage GitHub Repositories. https://github.com/\n\n### Topics\n\ngithub terraform iac terraform-modules github-repository terraform-github\nmineiros\n\n### Resources\n\nReadme\n\n### License\n\nApache-2.0 license\n\nActivity\n\nCustom properties\n\n### Stars\n\n149 stars\n\n### Watchers\n\n13 watching\n\n### Forks\n\n97 forks\n\nReport repository\n\n## Releases 36\n\nv0.18.0 Latest\n\nNov 7, 2022\n\n\\+ 35 releases\n\n## Packages 0\n\nNo packages published\n\n## Contributors 13\n\n## Languages\n\n  * HCL 88.6%\n  * Makefile 9.2%\n  * Go 2.2%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
