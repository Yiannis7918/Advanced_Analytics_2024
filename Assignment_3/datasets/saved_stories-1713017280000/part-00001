{"aid": "40021383", "title": "Show HN: G'MIC, an Open-Source Framework for Image Processing", "url": "https://gmic.eu/gallery/", "domain": "gmic.eu", "votes": 1, "user": "dtschump", "posted_at": "2024-04-13 08:06:03", "comments": 0, "source_title": "G'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing", "source_text": "G'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source\nFramework for Image Processing - Gallery\n\nG'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source\nFramework for Image Processing\n\n# A Full-Featured Open-Source Framework for Image Processing\n\n  * Home\n  * News\n  * Download\n  * Resources\n\n    * Technical Reference\n    * Scripting Tutorial\n    * Video Tutorials\n    * Wiki Pages\n    * Image Gallery\n    * Color Presets\n    * Using libgmic\n    * G'MIC Online\n  * Community\n\n    * Discussion Forum (Pixls.us)\n    * Twitter\n    * Reddit\n    * GimpChat\n    * IRC\n  * Report Issue\n  * Support Us\n\n## Latest stable version: 3.3.5 Current pre-release: 3.3.6 (2024/04/12)\n\nImage Gallery\n\nThis gallery gives a quick overview of the kind of features and generic\nfilters available in the G'MIC open-source image processing framework.\n\nAll the images below have been processed by the CLI interface gmic of G'MIC,\nfrom a set of initial 2D color images. Click on an image to enlarge it and\ndisplay the G'MIC command-line used for the processing (note: to reproduce\nthis, you may have to escape some characters, according to the type of shell\nyou use!).\n\nRemember, G'MIC lets you define your own image pipelines throughcustom command\nfiles. Your custom filters can be easily added afterwards in the plug-in for\nGIMP or Krita.\n\nFor more details, visit the tutorial pages as well as the technical reference\nto get a full documentation on this software.\n\nArrays & Frames| Artistic| B&W| Colors| Deformations| Filtering| Patterns| 3D\nMeshes| Stylization| Code samples  \n---|---|---|---|---|---|---|---|---|---  \nEngraveCommand: $ gmic duck.png fx_engrave\n0.5,4,0,7.68,15.2,0,0,1,10,1,0,0,0,1,0 gui_merge_layers (generated in 1.14s)|\nBokehCommand: $ gmic eagle.png fx_bokeh\n3,8,0,30,8,4,0.3,0.2,210,210,80,160,0.7,30,20,20,1,2,170,130,20,110,0.15,0\n(generated in 0.09s)| Oldschool 8bitsCommand: $ gmic elephant.png fx_8bits\n25,800,16,0 (generated in 0.1s)  \n---|---|---  \nEdges on fireCommand: $ gmic earth.png fire_edges 0.7,0.25,0.5,25,20\n(generated in 1.05s)| Diffusion tensorsCommand: $ gmic flower.png\nfx_diffusiontensors 10,5,3,1,0.15,1,0,3,0 (generated in 0.42s)| Dream\nsmoothingCommand: $ gmic fruits.png fx_dreamsmooth 3,1,1,0.8,0,0.8,1,24,0\n(generated in 1.85s)  \nFelt penCommand: $ gmic greece.png fx_feltpen 300,50,1,0.1,20,5,0 (generated\nin 0.13s)| Finger paintCommand: $ gmic gummy.png gtutor_fpaint\n0.5,0.5,0,0,45,0.5,0.5,0.5,0 (generated in 2.46s)| Novel FXCommand: $ gmic\ninside.png fx_graphic_novelfxl\n0,2,6,5,20,0,0.62,14,0,1,0.5,0.78,1.92,0,0,0,1,1,1,0.5,0.8,1.28 (generated in\n0.77s)  \nIllustration lookCommand: $ gmic landscape.png fx_illustration_look\n100,0,0,0,0 (generated in 1.62s)| Lylejk paintingCommand: $ gmic leaf.png\nfx_lylejk_painting 10,2,4,10,0 (generated in 0.74s)| PaintingCommand: $ gmic\nleno.png fx_painting 5,2.5,1.5,50,1,0 (generated in 3.28s)  \nPosterizeCommand: $ gmic lion.png fx_posterize 150,30,1,6,0,0,1,0 (generated\nin 1.2s)| Quadtree variationsCommand: $ gmic mandrill.png fx_quadtree\n2,1024,1.05,0,2.33,0.68,0.39,1,0 (generated in 1.65s)| Vector paintingCommand:\n$ gmic monalisa.png fx_vector_painting 9.37,0 (generated in 0.3s)  \nComic BookCommand: $ gmic parrots.png cl_comic\n0,2,0,1,1,15,15,1,10,20,6,2,0,0,0,0,0,0,50,50 (generated in 3.67s)| Colored\nPencilsCommand: $ gmic pencils.png fx_cpencil 1.3,50,20,2,2,1,0 (generated in\n1.01s)| WhirlsCommand: $ gmic rooster.png fx_paint_with_brush\n6,\"6\",1,16,30,100,100,0,95,0.5,8,-1,-1,2,2,30,0,0,0,100,20,1,0,0,0,30,0,0,0,0,0,0,1,45,0,0,50,50\n(generated in 3.5s)  \nFuzzy PaintingCommand: $ gmic rose.png fx_paint_with_brush\n5,\"5\",0,16,10,100,100,10,80,0.5,3,135,50,6,1,20,0,0,0,90,3,10,0,0,0,30,0,15,15,15,15,15,1,45,0,0,50,50\n(generated in 0.84s)| PolygonizeCommand: $ gmic sample portrait4 blur 1\nfx_polygonize_delaunay 40,5,75,0.5,3,50,0,0,0,255,1,0,50,50 (generated in\n2.29s)| PosterizeCommand: $ gmic teddy.png fx_posterize\n150,30,1,12,0,0,0,0,50,50 (generated in 0.83s)  \nSkeletikCommand: $ gmic sample portrait2 samj_Test_Skeletik\n10,1,0,0,0,3,1,0,0,0,255 (generated in 2.07s)| SketchCommand: $ gmic sample\nportrait6 fx_sketchbw\n3,45,180,30,1.75,0.02,0.5,0.75,0.1,0.7,3,6,0,1,4,0,0,50,50 (generated in\n0.72s)| WarholCommand: $ gmic waterfall.png warhol 3,3,2,40 (generated in\n0.13s)  \nboxfittingCommand: $ gmic zelda.png boxfitting , (generated in 0.55s)|\ncartoonCommand: $ gmic apples.png cartoon 3,50,10,0.25,3,16 (generated in\n0.33s)| cubismCommand: $ gmic bottles.png cubism , (generated in 0.19s)  \ndraw_whirlCommand: $ gmic butterfly.png draw_whirl , (generated in 0.21s)|\nfractalizeCommand: $ gmic car.png fractalize , (generated in 1.52s)|\nhalftoneCommand: $ gmic cat.png halftone , (generated in 2.23s)  \nsketchbwCommand: $ gmic cliff.png +sketchbw 1 reverse blur[-1] 3 blend[-2,-1]\noverlay (generated in 0.15s)| light_reliefCommand: $ gmic david.png blur 2\nlight_relief 0.3,4,0.1,0 (generated in 0.05s)| mosaicCommand: $ gmic dog.png\nmosaic , +fill \"I!=J(1) || I!=J(0,1)?[0,0,0]:I\" (generated in 0.19s)  \nlinifyCommand: $ gmic duck.png linify 60 (generated in 9.31s)|\npolaroidCommand: $ gmic eagle.png to_rgba polaroid 5,30 rotate 20 drop_shadow\n, drgba (generated in 0.27s)| polygonizeCommand: $ gmic elephant.png\n+polygonize 100,10 fill[-1] \"I!=J(1) || I!=J(0,1)?[0,0,0]:I\" (generated in\n0.25s)  \nposter_hopeCommand: $ gmic earth.png poster_hope , (generated in 3.34s)|\nrodilius [1/2]Command: $ gmic flower.png rodilius 12,10,300,10 normalize_local\n10,6 (generated in 3.48s)| rodilius [2/2]Command: $ gmic fruits.png\nnormalize_local 10,16 rodilius 10,4,400,16 smooth 60,0,1,1,4 normalize_local\n10,16 (generated in 3.72s)  \nstencilCommand: $ gmic greece.png +norm stencil. 2,1,4 +mul rm[0] (generated\nin 0.02s)| stained_glassCommand: $ gmic gummy.png stained_glass 20%,1 cut 0,20\n(generated in 0.21s)  \nArrays & Frames| Artistic| B&W| Colors| Deformations| Filtering| Patterns| 3D\nMeshes| Stylization| Code samples  \n---|---|---|---|---|---|---|---|---|---  \n  \nG'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source\nFramework for Image Processing\n\nG'MIC is an open-source software distributed under the CeCILL free software\nlicenses (LGPL-like and/or GPL-compatible). Copyrights (C) Since July 2008,\nDavid Tschumperl\u00e9 - GREYC UMR CNRS 6072, Image Team.\n\nLoading...\n\n", "frontpage": false}
