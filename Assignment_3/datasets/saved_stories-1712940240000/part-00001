{"aid": "40011138", "title": "I do (and don't) prepare a talk for a tech conference. (2022)", "url": "https://chelseatroy.com/2022/08/03/how-i-do-and-dont-prepare-a-talk-for-a-technical-conference/", "domain": "chelseatroy.com", "votes": 1, "user": "fanf2", "posted_at": "2024-04-12 10:42:04", "comments": 0, "source_title": "How I do (and don\u2019t) prepare a talk for a tech conference", "source_text": "How I do (and don\u2019t) prepare a talk for a tech conference \u2013 Chelsea Troy\n\n# Chelsea Troy\n\nAugust 3, 2022February 7, 2023 Chelsea\n\n# How I do (and don\u2019t) prepare a talk for a tech conference\n\nReading Time: 15 minutes\n\nLately I don\u2019t blog as often as I\u2019d like, so in an effort to change that, I\u2019ve\nwaived my protocol about spicy takes. I used to reserve them for Twitter and\nmy Patreon. Today, you\u2019re getting one here.\n\n## My \ud83c\udf36\ufe0f spicy take \ud83c\udf36\ufe0f: I don\u2019t like seeing tech talks live.\n\nWhy: I get very little out of 95% of them. I much prefer online recordings,\nwhich can come vetted/recommended. Also I can bump them up to 1.5x or 2x\nspeed, so that at least if the talk isn\u2019t that good I waste less time on it.\n\nI know, it\u2019s harsh. I\u2019m sorry.\n\nYou know what, I\u2019m not sorry. I\u2019m a brat, and I want better than that. More\nimportantly, I think speakers can do better than that.\n\nPC: Brian McCarty for LA Times.\n\nIt\u2019s not that the speakers are poor engineers. It\u2019s not even that they\u2019re\nnecessarily poor speakers. I think two things are happening.\n\n  1. There\u2019s a lot of platitudinous advice out there about how to deliver a talk. Some of it is straight up wrong. Even more of it is technically \u2018fine\u2019 but, in the context of limited time and effort, draws speakers\u2019 attention away from more important things.\n  2. Speakers spend a lot of time thinking about what they want to say up there, or who they want to be in the eyes of the audience. They spend relatively little time thinking about what the audience should receive or who they want the audience to be in the eyes of themselves after the talk is over.\n\nI\u2019m a selfish little cuss. When I\u2019m in the audience, I want the talk to be\nabout me. Not the speaker.\n\nBut I\u2019m also an empathetic little cuss. So when I\u2019m speaking I try, first and\nforemost, to center the audience the way I\u2019d like to be centered.\n\nThat\u2019s not very helpful advice on its own, so...\n\n## ...allow me to describe how I build a talk.\n\nI suspect some of this is gonna sound counterintuitive.\n\nI\u2019d like to start by addressing some of that platitudinous advice about how to\ndeliver a talk. These are things I see a lot of speakers do, that I\nspecifically do not do.\n\n## 1\\. I do very little self-intro.\n\nWhy: I think people forget this part unless there\u2019s a big name drop, and I\nalso think legitimacy by proxy is gross. People can decide from my talk if I\u2019m\nworth listening to.\n\nOne legit objection: \u201cI am from an underrepresented group, and without my\ncredentials no one listens to me.\u201d\n\nMaybe so. But:\n\n  1. If they\u2019re not listening based on that, I\u2019m not convinced credentials will change it\n  2. Misogynistic homophobes are not my audience, and I don\u2019t waste precious seconds appealing to them.\n\n## 2\\. I don\u2019t start with \u201cwhy you should listen to my talk.\u201d\n\nOr any version of it, like \u201cbroader context for my talk\u201d or \u201cwhy my talk is\nimportant.\u201d The people who are hearing the intro to my talk are already at my\ntalk. I don\u2019t have to convince anyone. If I wrote it right, the content will\ndo the convincing.\n\nIn fact, more broadly, I think a lot of speakers could benefit from spending\nless time trying to convince people they\u2019re worth listening to, and just write\nthe talk as if it were dead f**king obvious that you\u2019re worth listening to.\nImagine you already have the rapt attention of the whole room, and think about\nwhat you would say in that situation, and write that. In many\ncircumstances\u2014tech conferences being one\u2014I think that would produce much\nbetter talks.\n\n## 3\\. I don\u2019t do a lot of memes, gifs, puns, or cultural references.\n\nThey\u2019re wildly inaccessible to people from different age ranges and cultures,\nso talks with a lot of these have a shorter shelf life and limited relevance.\n\nThese sorts of things also often get used as crutches for weak content. If I\u2019m\nreaching for them, I look for the weakness I\u2019m trying to cover up.\n\n## 4\\. I don\u2019t worry about eye contact.\n\nMostly my audience is too far away to see my eyes live. How many audience\nmembers could I momentarily lock eyes with in a room of 400? Maybe 40? If I\nhad time? The rest can\u2019t see my face well enough to \u2018lock eyes\u2019 with me even\nif I could fake it. And on Zoom I have to operate Zoom, which unfortunately\nhijacks most opportunities to make choices about my gaze.\n\n## 5\\. I don\u2019t show code, mostly.\n\nSee, 99% of the time when developers show code in a talk, it\u2019s WAY too small\nfor people to read and WAY too much for them to absorb. On a projector in a\n4-600 person room, you can make about 3 lines legible onscreen. Everybody does\nmore than that.\n\nWhatever I\u2019m trying to say about code, I figure out how to represent it with 3\nlines, or I figure out how to paraphrase it with a diagram. Or I don\u2019t talk\nabout it. More on this later.\n\nThose are my \u201ccounterintuitive things I don\u2019t do.\u201d\n\n## Now let\u2019s talk about what I do instead.\n\nI\u2019ll present these things in the rough order that they show up in the talk,\nand as foils to the \u201cdont\u2019s\u201d I shared above.\n\n## 1\\. Instead of starting with self-intro, I consider the start of my talk to\nbe The Hook.\n\nFrom the moment I\u2019m given the stage, I\u2019m trying to get past self-intros and\nother crap and onto The Hook (the start of the talk) as fast as I can.\n\nThe Hook has one job: surprise people. That\u2019s it.\n\nWhy: Because I give talks to auditoriums full of nerds.\n\nReveal to nerds that they don\u2019t know something, and you\u2019re done having to\nworry about whether they\u2019re leaving. You\u2019ve nerd-sniped them. They\u2019re not\nleaving.\n\nDisclaimer: I have one huge advantage with this step.\n\nMy advantage: my schtick is to take slippery concepts and install handles on\nthem for easier handling, transport, and transfer.\n\nA lot of \u2019em are concepts that people handwave because everyone is \u201csupposed\u201d\nto get them, and no one quite does, and it\u2019s unsafe to admit it.\n\nSo my schtick has a built-in hook. I can just go up there like \u201cToday we\u2019re\ntalking about tech debt. Y\u2019all think you know what that is, but you don\u2019t and\nI\u2019ll prove it.\u201d\n\nBam, now everyone\u2019s either like \u201cWho does this b**ch think she is\u201d or \u201cWHOA, I\nhad no idea!\u201d\n\nHere\u2019s an example of that: I give a talk about tech debt, and I have a slide\ntitled \u201cWhat is Technical Debt?\u201d And then it says \u201cTech Debt == Bad Code,\u201d\nwhich is a 65% accurate distillation of what a lot of engineers would tell you\nif you asked that question.\n\nAnd yet, that part of the slide is labeled \u201cTwo Misconceptions.\u201d Wait, so\nthat\u2019s wrong? And apparently there\u2019s also another thing that\u2019s wrong?\u201d Yep. I\nstart the talk with what tech debt is not, and I point out flaws in two very\ncommonly held assumptions. You can see it here (This link starts deliberately\nat 126 seconds into the video):\n\n## 2\\. Instead of providing overarching context, I explain new ideas in the\nform of examples.\n\nI don\u2019t define \u201cempowering engineers to make design decisions.\u201d I tell a story\nabout a launch pad tower that was 4x harder to maintain because the damn door\nwas on the wrong side.\n\nHuman brains can struggle to apply a general idea to a specific situation, but\nthey\u2019re BRILLIANT at drawing connections between stories and seeing broader\npatterns.\n\nSo, by explaining with stories, I can get points across in less time and cover\nWAY more ground in one talk.\n\nHere\u2019s an example of that: same video as above, but this time deliberately\ntimestamped much later, at 2060 seconds. This is where I tell that story about\nthe launch pad design.\n\nSharing examples offers another advantage: it credentials me.\n\nThe stories I tell demonstrate that I have experience with this and I know\nwhat I\u2019m talking about. I don\u2019t need to be like \u201cListen to me because I work\nfor <Brand Name>\u201d.\n\n## 3\\. Instead of gifs, puns, memes, or cultural references, I stay focused on\noffering tools.\n\nFunny is great, but it\u2019s hard to do well (I\u2019d know: I did standup), and can be\nharmful when done poorly. I\u2019d rather my talk be memorable for its utility than\nits humor: good or bad.\n\nI find that the best way to offer tools is flowchart-style.\n\n  1. Give folks a thing.\n  2. Give them three things that they can tie back to the first thing.\n  3. Give them spinoff things from each of THOSE things.\n\nThe body of my talk should be structured like a tree, rooted at a contrast\nwith existing knowledge. People remember stuff best when they can relate\n(especially contrast) it to stuff they already know about. I take advantage of\nthat.\n\nThis talk about leveling up exemplifies the strategy. First, I introduce the\nidea of leveling up actively, and I contrast it with the more common, more\npassive understanding of leveling up. Next, I introduce four branches: the\nfour skills of leveling up actively that I will discuss in the talk. Each of\nthose branches spins off into specific exercises and tactics.\n\n## 4\\. Instead of focusing on eye contact, I invest in other stage presence\nconcerns.\n\nIt\u2019s not that making eye contact is bad\u2014it just has a low return on investment\nrelative to other stage presence things I could focus on.\n\nFor example, you\u2019ll notice in the above examples that I move around onstage\n(Leveling Up talk) and on camera (Tech Debt talk).\n\nBut the biggest and most underrated stage presence concern (especially in\n\u2018informative talk\u2019 circles) is timing of delivery.\n\nTiming of delivery makes an enormous impact. It can make the difference\nbetween the concept sinking into people\u2019s brains and sliding past to be lost\nto the ether.\n\nThis one is hard to develop. You do, I\u2019m afraid, have to get comfortable\nstanding on stage doing this \ud83e\udd0c (or whatever), in total silence, while you wait\nfor your point to land. And then you also have to know when to be satisfied\nthat it landed.\n\nYou can see some examples of me playing with timing here, 2546 seconds into a\nworkshop that I co-facilitated with a student of mine (at the time\u2014she is now\na software engineer in good repute at Spotify). The content of this talk is\nunlikely to make sense unless you have watched the rest of the workshop, so I\nrecommend focusing solely on the timing here:\n\nI comport myself as if people are already listening to me.\n\nI project \u201cThis is my stage. I\u2019ll do what I want on it. You\u2019ll watch and\nlisten if you know what\u2019s good for you.\u201d\n\nThis workshop recording at 38 seconds in offers a good example of that. People\nstill make fun of me for this when we\u2019re out for beers at conferences:\n\n\u201cI see a 99 minute timer in front of me. The schedule said two hours. I will\ntake the entire two hours.\u201d\n\nThis is, by the way, a noticeably gendered variety of stage presence. People\nlargely reserve this for, and expect this of, masculine presences. I noticed\nthat after I got better at doing this, a funny thing started to happen at my\ntalks.\n\nDuring Q&A, I get called \u201csir\u201d pretty regularly.\n\nIn winged eyeliner and four inch heels.\n\n(For the record: It\u2019s okay. I don\u2019t mind. It\u2019s kinda fun.)\n\nIn this regard I am, again, privileged. My parents agreed on almost nothing,\nbut they did both raise me like I\u2019d have important things to say. And I talk a\nlot like my dad does. In a lot of ways I\u2019m everything my dad wanted...in a\nhetero son. Oops \ud83d\ude02\n\n## 5\\. Instead of showing code, I focus on talk-friendly content.\n\nThis is the maximum amount of code I\u2019ve ever put on a slide, and it\u2019s in the\nmidst of several minutes of explanation where we built this code up gradually.\nI\u2019ve never introduced more than about three lines of code at once in a tech\ntalk.\n\nBut even this right here is more code than I put on a slide for a tech talk\nanymore. Instead, I try to keep each kind of subject matter to the medium that\nbest suits it. So for talks, I focus on topics that convey well in audio\nformat. I do not think code does that.\n\nFirst of all, speakers put way too much code on a slide and go past it way too\nfast. In a room of 400-600 people, most of them are too far away to even see\nit\u2014and that\u2019s if there\u2019s no projector glare, which there\u2019s always projector\nglare. Code just doesn\u2019t communicate well in contexts where only the audio is\naccessible to the whole audience.\n\nIs it possible to convey code without visual cues? Yes. But it requires\nspecial tools like high-speed screen readers, which have a learning curve that\nI can\u2019t ask my audience to scale in one talk.\n\nSo about the most the audience is gonna get out of code in a talk is something\nlike \u201cthat code is cool.\u201d\n\nAnd if they get that out of the code in your talk, you\u2019ll get positive\nfeedback. But they, the audience, does not get a useful takeaway. You, the\nspeaker, get to leave feeling like a badass, and they, the audience, might\neven think you\u2019re a badass, but the audience doesn\u2019t get to leave with any\nnewfound badassery at their own disposal. And as far as I\u2019m concerned, that\u2019s\na failure. If my audience doesn\u2019t leave with their own new skills, their\nimaginations full of schemes for unleashing their newfound badassery on their\nwork, then I have not taught them anything important. I have failed. And that\nkind of failure is not badass.\n\nWhen I want to teach or explain with code, I do it in a visual format with\naudio options: a blog post like this or a video like this. Or I create\ninteractive exercises like this.\n\nIn a talk, I focus on stuff that folks can quote, or make into lists, or draw\nin tree diagrams. I focus talks on getting people to think about their old\nproblems with a new perspective\u2014usually a flexible framework outfitted, like I\nsaid, with handles \ud83d\ude09.\n\nHere are some examples of slides like that from various talks:\n\nSo those are specifics of my preparation. They happen in different orders\ndepending on the talk. Sometimes, my brain makes its own progress on one of\nthese steps when I least expect it.\n\n## Regardless of order, throughout my talk prep, I focus on one guiding\nprinciple:\n\nWhat new skills do I want my audience to have, and know how to use, when they\nleave this room?\n\nI don\u2019t worry about what they\u2019re going to think of me or my talk.\n\nI don\u2019t even worry about what they\u2019re coming to my talk to get: I instead\ntrust myself to focus on skills that tech audiences sorely need, more than\nwhat they\u2019re asking for.\n\nBut they\u2014or maybe more precisely, their potential as change agents in tech\u2014are\nmy whole focus in building a talk. And that\u2019s what works for me.\n\n## A final P.S. that I probably shouldn\u2019t put in here\n\nThis blog post assumes you have some speaking experience and some\nunderstanding of conference etiquette. Here are some additional things I also\nwant to say based on things I cannot believe I have actually seen speakers,\nsometimes compensated ones, do onstage at tech conferences.\n\n  * Know how long your talk slot is. Do not accept a $1k honorarium and start wrapping up the workshop you clearly did not prepare at 56 minutes, only to have an attendee inform you that your slot is two hours long. No, this was not some junior speaker. It never is, in my experience.\n  * Do not gripe about the video, audio, or slide setup. I promise you, the A/V staff are doing the best they can, and whatever is happening during your actual talk is not the fault of the A/V staff in the room. Definitely don\u2019t repeatedly interrupt yourself throughout the talk to do it. You sound like a Karen and no one can follow your material. Can it.\n  * Do not open up the floor for questions and then take an opportunity to dunk on an attendee for the question they asked. If you accidentally misworded your answer and people laughed, that\u2019s one thing. But inviting people to be vulnerable in front of you and then popping off a zinger when they do is borderline unethical, a fast lane to my teaching doghouse, and worse than not talking at all.\n\nFolks, I love you, but Jesus, have your basics in hand when you get onstage.\n\n## If you liked this piece, you might also like:\n\nCritique, The Internet, and You\u2014about critiquing things people make\n\nThe feedback series\u2014about critiquing the things that somebody does\n\nThe listening series\u2014the one I\u2019d say most people think they need the least and\nactually need the most\n\n### Share this:\n\n  * Twitter\n  * Facebook\n\n### Like this:\n\nLike Loading...\n\n  * Careers\n  * Community\n\n  * audio-recorded\n\n## Published by Chelsea\n\nView all posts by Chelsea\n\n### Leave a ReplyCancel reply\n\nThis site uses Akismet to reduce spam. Learn how your comment data is\nprocessed.\n\n## Categories\n\n  * Agile (8)\n  * Algorithms (3)\n  * Android (17)\n  * APIs (15)\n  * Behind the Scenes (16)\n  * Books (19)\n  * Careers (68)\n  * Community (49)\n  * Concepts (11)\n  * Conferences (1)\n  * CSS (2)\n  * Data (15)\n  * Data Science (27)\n  * Debugging (11)\n  * Design (8)\n  * Golang (1)\n  * Hiring (7)\n  * History (8)\n  * Inclusion (24)\n  * iOS (21)\n  * Java (15)\n  * Javascript (6)\n  * Languages and Frameworks (14)\n  * Leveling Up (26)\n  * Live Coding (16)\n  * Machine Learning (31)\n  * Money (2)\n  * Podcasts (1)\n  * Professional Development (23)\n  * Programming (2)\n  * Programming Language Implementation (11)\n  * Python (32)\n  * Refactoring (18)\n  * Remote Work (12)\n  * Ruby (23)\n  * Scheme (1)\n  * Spring (4)\n  * Swift (9)\n  * Talks (10)\n  * Teaching (22)\n  * Techtivism (5)\n  * Testing (30)\n  * Uncategorized (7)\n\nPowered by WordPress.com.\n\n## Discover more from Chelsea Troy\n\nSubscribe now to keep reading and get access to the full archive.\n\nContinue reading\n\nLoading Comments...\n\n%d\n\n## Can I write to you?\n\n### Can I write to you?\n\nI'll send you behind-the-scenes details about stuff I'm working on.\n\nI'll also occasionally ask your thoughts on a topic before I write. 2 emails\nper month, max.\n\n### Thank you! I can't wait to bounce ideas off you :)\n\nI've sent you a confirmation email\u2014I like to make SURE you want to hear from\nme.\n\n", "frontpage": false}
